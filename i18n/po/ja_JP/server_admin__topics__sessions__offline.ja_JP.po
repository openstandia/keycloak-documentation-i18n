msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"POT-Creation-Date: 2017-09-20 08:59+0000\n"
"PO-Revision-Date: 2017-09-20 05:25-0400\n"
"Last-Translator: wadahiro <wadahiro@gmail.com>\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: keycloak-documentation-i18n\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/i18n/pot/server_admin__topics__sessions__offline.pot\n"

#. type: Title ===
#: source/server_admin/topics/sessions/offline.adoc:3
#, no-wrap
msgid "Offline Access"
msgstr ""

#. type: Plain text
#: source/server_admin/topics/sessions/offline.adoc:10
#, no-wrap
msgid "Offline access is a feature described in http://openid.net/specs/openid-connect-core-1_0.html#OfflineAccess[OpenID Connect specification] .\n"
"The idea is that during login, your client application will request an Offline token instead of a classic Refresh token.\n"
"The application can save this offline token in a database or on disk and can use it later even if user is logged out.\n"
"This is useful if your application needs to do some \"offline\" actions on behalf of user even when the user is not online.\n"
"An example is a periodic backup of some data every night.\n"
msgstr ""

#. type: Plain text
#: source/server_admin/topics/sessions/offline.adoc:12
#, no-wrap
msgid "Your application is responsible for persisting the offline token in some storage (usually a database) and then using it to manually retrieve new access token from {project_name} server.\n"
msgstr ""

#. type: Plain text
#: source/server_admin/topics/sessions/offline.adoc:17
#, no-wrap
msgid "The difference between a classic Refresh token and an Offline token is, that an offline token will never expire and is not subject of `SSO Session Idle timeout` .\n"
"The offline token is valid even after a user logout or server restart.\n"
"However by default you do need to use the offline token for a refresh token action at least once per 30 days (this value, `Offline Session Idle timeout`, can be changed in the administration console in the `Tokens` tab under `Realm Settings`). Also if you enable the option `Revoke refresh tokens`, then each offline token can be used just once.\n"
"So after refresh, you always need to store the new offline token from refresh response into your DB instead of the previous one.\n"
msgstr ""

#. type: Plain text
#: source/server_admin/topics/sessions/offline.adoc:22
#, no-wrap
msgid "Users can view and revoke offline tokens that have been granted by them in the <<_account-service, User Account Service>>.\n"
"The admin user can revoke offline tokens for individual users in admin console in the `Consents` tab of a particular user.\n"
"The admin can also view all the offline tokens issued in the `Offline Access` tab of each client.\n"
"Offline tokens can also be revoked by setting a <<_revocation-policy, revocation policy>>.\n"
msgstr ""

#. type: Plain text
#: source/server_admin/topics/sessions/offline.adoc:25
#, no-wrap
msgid "To be able to issue an offline token, users need to have the role mapping for the realm-level role `offline_access`.\n"
"Clients also need to have that role in their scope.\n"
msgstr ""

#. type: Plain text
#: source/server_admin/topics/sessions/offline.adoc:29
#, no-wrap
msgid "The client can request an offline token by adding the parameter `scope=offline_access` when sending authorization request to {project_name}.\n"
"The {project_name} OIDC client adapter automatically adds this parameter when you use it to access secured URL of your application (i.e.\n"
"$$http://localhost:8080/customer-portal/secured?scope=offline_access$$). The Direct Access Grant and Service Accounts also\n"
"support offline tokens if you include `scope=offline_access` in the body of the authentication request.\n"
msgstr ""

