msgid ""
msgstr ""
"Content-Type: text/plain; charset=UTF-8\n"

msgid "Keycloak server guide"
msgstr ""

msgid "Configuring Keycloak"
msgstr ""

msgid "This guide explains the configuration methods for Keycloak and how to start and apply the preferred configuration. It includes configuration guidelines for optimizing Keycloak for faster startup and low memory footprint."
msgstr ""

msgid "Configuration Sources for Keycloak"
msgstr ""

msgid "Keycloak loads the configuration from four different configuration sources:"
msgstr ""

msgid "command-line parameters"
msgstr ""

msgid "environment variables"
msgstr ""

msgid "user-created `.conf` file"
msgstr ""

msgid "`keycloak.conf` file located in the `conf` directory."
msgstr ""

msgid "Configuration sources have a descending ordinal: command-line parameters take precedence over environment variables. Environment variables take precedence over options set by using a specific configuration file. Options from a specific config file take precedence over options defined in `conf/keycloak.conf`. When the same configuration key is found in multiple configuration sources, the applied value is taken from the configuration source with the highest ordinal."
msgstr ""

msgid "Example: Configuring the db-url-host parameter."
msgstr ""

msgid "*Source*"
msgstr ""

msgid "*Format*"
msgstr ""

msgid "CLI"
msgstr ""

msgid "--db-url=cliValue"
msgstr ""

msgid "Environment Variable"
msgstr ""

msgid "KC_DB_URL=envVarValue"
msgstr ""

msgid "Configuration file"
msgstr ""

msgid "db-url=confFileValue"
msgstr ""

msgid "In the example above, the `db-url` value is set in all three configuration sources. The actual value that is used at startup would be the `cliValue`. If `--db-url=cliValue` is not used, the used value would be `KC_DB_URL=envVarValue`, and last but not least the `db-url=confFileValue` would be used when no environment variable with the same Key is present. When this value is specified in a user defined configuration file and in `conf/keycloak.conf`, the value from the user defined configuration file takes precedence."
msgstr ""

msgid "Configuration Format"
msgstr ""

msgid "The configuration follows a \"unified-per-source\" format, that is easily translatable from one configuration source to another:"
msgstr ""

msgid "Command-line parameter format"
msgstr ""

msgid "Values for the command-line are following the `--<key-with-dashes>=<value>` format. For some values, there's also a `-<abbreviation>=value` shorthand."
msgstr ""

msgid "Environment variable format"
msgstr ""

msgid "Values for environment variables are following the uppercased `KC_<key_with_underscores>=<value>` format."
msgstr ""

msgid "Configuration file format"
msgstr ""

msgid "Values that go into the configuration file are following the `<key-with-dashes>=<value>` format."
msgstr ""

msgid "You can easily translate a Key/Value pair from one configuration source to the other."
msgstr ""

msgid "At the end of each configuration guide, look for the _Relevant options_ heading for a table with the three relevant configuration formats. For all configuration options, see link:{links_server_all-config_url}[{links_server_all-config_name}]."
msgstr ""

msgid "The configuration source and the corresponding format you should use is use-case specific."
msgstr ""

msgid "Example - Configure `db-url-host` on different configuration sources:"
msgstr ""

msgid "The following example shows how the configuration for the db url host looks for all three configuration sources:"
msgstr ""

msgid "command-line parameter"
msgstr ""

msgid "bin/kc.[sh|bat] start --db-url-host=mykeycloakdb"
msgstr ""

msgid "environment variable"
msgstr ""

msgid "export KC_DB_URL_HOST=mykeycloakdb"
msgstr ""

msgid "conf/keycloak.conf"
msgstr ""

msgid "db-url-host=mykeycloakdb"
msgstr ""

msgid "Using environment variables for configuration values"
msgstr ""

msgid "It is possible to use placeholders to resolve an environment specific value from environment variables inside the keycloak.conf file by using the `++${ENV_VAR}++` syntax:"
msgstr ""

msgid "db-url-host=${MY_DB_HOST}"
msgstr ""

msgid "To specify a fallback value in case the environment variable can not be resolved, use a `:`:"
msgstr ""

msgid "db-url-host=${MY_DB_HOST:mydb}"
msgstr ""

msgid "Configuring the server using a specific configuration file"
msgstr ""

msgid "By default, the server always fetches configuration options from the `conf/keycloak.conf` file. For a new installation, this file holds only commented settings as an idea of what you want to set when running in production."
msgstr ""

msgid "You can also specify an explicit configuration file location using the `[-cf|--config-file]` option by invoking the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] --config-file=/path/to/myconfig.conf start"
msgstr ""

msgid "Using the command-line help"
msgstr ""

msgid "Keycloak is packed with a CLI that helps you to configure Keycloak. To find out about the available configuration, invoke the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --help"
msgstr ""

msgid "Alternatively, you can find all server options at link:{links_server_all-config_url}[{links_server_all-config_name}]."
msgstr ""

msgid "Using raw Quarkus properties"
msgstr ""

msgid "In most cases, the available configuration options should suffice to configure the server. However, you might need to use properties directly from the underlying Quarkus framework to enable a specific behavior or capability that is missing in the keycloak configuration."
msgstr ""

msgid "If possible, avoid using properties directly from Quarkus. These are considered unsupported by Keycloak. If your need is essential, consider opening an https://github.com/keycloak/keycloak/issues/new?assignees=&labels=kind%2Fenhancement%2Cstatus%2Ftriage&template=enhancement.yml[enhancement request] first and help us to improve Keycloak's configuration to fit your needs."
msgstr ""

msgid "If that's not possible, you can configure the server using raw Quarkus properties:"
msgstr ""

msgid "Create a `quarkus.properties` file in the `conf` directory and define any property you need."
msgstr ""

msgid "For a complete list of Quarkus properties, see the https://quarkus.io/guides/all-config[Quarkus documentation]. Be aware that Keycloak uses a https://github.com/keycloak/keycloak/blob/main/quarkus/runtime/pom.xml#L17[subset] of quarkus extensions, so not all properties will be available."
msgstr ""

msgid "When a quarkus property is a runtime property (no lock icon shown in the quarkus guide), it is also handled as runtime property for Keycloak. When a quarkus property is a build time property, you have to invoke a `build` for the property to be applied. See the sections below for further information around the build command."
msgstr ""

msgid "Note that some quarkus properties are mapped by the Keycloak configuration, for example `quarkus.http.port` and similar properties that are needed to configure Keycloak. If the property is used by Keycloak, defining the same underlying property key in  `quarkus.properties` will have no effect, as the keycloak configuration value takes precedence over the quarkus property value."
msgstr ""

msgid "Starting Keycloak"
msgstr ""

msgid "Keycloak can be started in two operating modes, `development mode` and `production mode`. Both modes offer a different set of defaults for the environment they are intended to be used."
msgstr ""

msgid "Starting Keycloak in development mode"
msgstr ""

msgid "The development mode is targeted for people trying out Keycloak the first time and get it up and running quickly. It also offers convenient defaults for developers, for example to develop a new Keycloak theme."
msgstr ""

msgid "The development mode is started by invoking the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start-dev"
msgstr ""

msgid "Defaults"
msgstr ""

msgid "The development mode sets the following default configuration:"
msgstr ""

msgid "HTTP is enabled"
msgstr ""

msgid "Strict hostname resolution is disabled"
msgstr ""

msgid "Cache is set to local (No distributed cache mechanism used for high availability)"
msgstr ""

msgid "Theme- and Template-caching is disabled"
msgstr ""

msgid "Starting Keycloak in production mode"
msgstr ""

msgid "The production mode is targeted for deployments of Keycloak into production environments and follows a \"secure by default\" principle."
msgstr ""

msgid "The production mode is started by invoking the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start"
msgstr ""

msgid "Without further configuration, this command will not start Keycloak and show you an error instead. This is done on purpose, because Keycloak follows a \"secure by default\" principle in this mode and expects to have a hostname setup and a HTTPS/TLS setup available when started in production mode."
msgstr ""

msgid "The production mode sets the following defaults:"
msgstr ""

msgid "HTTP is disabled as transport layer security (HTTPS) is essential"
msgstr ""

msgid "Hostname configuration is expected"
msgstr ""

msgid "HTTPS/TLS configuration is expected"
msgstr ""

msgid "Make sure to follow the steps outlined in link:{links_server_configuration-production_url}[{links_server_configuration-production_name}] before deploying Keycloak to production environments."
msgstr ""

msgid "By default, example configuration options for the production mode are commented out in the default `conf/keycloak.conf` file. These give you an idea about the main configuration to consider when running Keycloak in production."
msgstr ""

msgid "Setup of the initial admin user"
msgstr ""

msgid "The initial admin user can be added manually using the web frontend. It needs to be accessed using a local connection (localhost) or using environment variables:"
msgstr ""

msgid "To add the initial admin user using environment variables, set `KEYCLOAK_ADMIN=<username>` for the initial admin username and `KEYCLOAK_ADMIN_PASSWORD=<password>` for the initial admin password. Keycloak parses these values at first startup to create an initial user with administrative rights. Once the first user with administrative rights exists, you can use the admin UI or the command line tool `kcadm.[sh|bat]` to create additional users."
msgstr ""

msgid "If the initial administrator already exists and the environment variables are still present at startup, an error message stating the failed creation of the initial administrator is shown in the logs. Keycloak ignores the values and starts up correctly."
msgstr ""

msgid "Optimize the Keycloak startup"
msgstr ""

msgid "It is highly recommended to optimize Keycloak for better startup times and memory consumption before deploying into production environments. This section shows you how to apply a set of optimizations for Keycloak to get the best performance and runtime behavior possible."
msgstr ""

msgid "Create an optimized Keycloak build"
msgstr ""

msgid "By default, when the `start` or `start-dev` commands are used, Keycloak runs a `build` command under the covers for convenience reasons. This `build` command performs a set of optimizations to achieve an optimized startup- and runtime-behavior. The build process can take some time, usually a few seconds. Especially when running Keycloak in containerized environments like Kubernetes or OpenShift, startup time is important. So in order to avoid the time that gets lost when running a `build` as part of Keycloaks first startup, it is possible and recommended to invoke a `build` explicitly before starting up, for example as a separate step in a CI/CD pipeline."
msgstr ""

msgid "First step: Run a build explicitly"
msgstr ""

msgid "To run a `build`, invoke the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] build <build-options>"
msgstr ""

msgid "As you may notice, the command above shows `build options` that should be invoked. Keycloak distinguishes between **build options**, that are usable when invoking the `build` command, and **configuration options**, that are usable when starting up the server."
msgstr ""

msgid "For a non-optimized startup of Keycloak, this distinction has no effect, but when a build is invoked beforehand, there's only a subset of Options available to the build command. The reason is, that build options get persisted into Keycloaks classpath, so configuration for e.g. credentials like `db-password` must not get persisted for security reasons."
msgstr ""

msgid "Build options are marked in link:{links_server_all-config_url}[{links_server_all-config_name}] with a tool icon. Find available build options either by looking at the https://www.keycloak.org/server/all-config?f=build[All configuration page with build options selected] or by invoking the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] build --help"
msgstr ""

msgid "Example: Run the `build` command to set the database to PostgreSQL before startup:"
msgstr ""

msgid "bin/kc.[sh|bat] build --db=postgres"
msgstr ""

msgid "Second step: Start Keycloak using `--optimized`"
msgstr ""

msgid "After a successful build, you can start Keycloak and turn off the default startup behavior by invoking the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --optimized <configuration-options>"
msgstr ""

msgid "The `--optimized` parameter tells Keycloak to assume a pre-built, already optimized Keycloak image is used. As a result, Keycloak avoids checking for and running a build directly at startup to save the time to walk through this process."
msgstr ""

msgid "You can invoke all configuration options at startup; these options are the ones in link:{links_server_all-config_url}[{links_server_all-config_name}] that are **not** marked with a tool icon."
msgstr ""

msgid "If a build option is found at startup with an equal value to the value used when invoking the `build`, it gets silently ignored when using the `--optimized` flag. If it has a different value than the value used when a build was invoked, a warning is shown in the logs and the previously built value is used. In order for this value to take effect, you have to run a new `build` before starting."
msgstr ""

msgid "The following example shows how to create an optimized build, then start Keycloak using the --optimized parameter:"
msgstr ""

msgid "Create an optimized build"
msgstr ""

msgid "Set build option for the postgresql database vendor using the build command"
msgstr ""

msgid "Set the runtime configuration options to keycloak.conf"
msgstr ""

msgid "Set configuration options for postgres inside `conf/keycloak.conf`"
msgstr ""

msgid ""
"db-url-host=keycloak-postgres\n"
"db-username=keycloak\n"
"db-password=change_me\n"
"hostname=mykeycloak.acme.com\n"
"https-certificate-file"
msgstr ""

msgid "Start the server with the optimized parameter"
msgstr ""

msgid "bin/kc.[sh|bat] start --optimized"
msgstr ""

msgid "Most optimizations to startup and runtime behavior can be achieved by using the `build` command. By using the `keycloak.conf` file as a source for configuration options, Keycloak avoids some steps at startup that are needed when invoking the configuration using the command line, for example initialising the CLI itself. As a result, the server starts up even faster."
msgstr ""

msgid "Underlying concepts"
msgstr ""

msgid "This section gives an overview around the underlying concepts Keycloak uses, especially when it comes to optimizing the startup."
msgstr ""

msgid "Keycloak uses the Quarkus framework and it's re-augmentation/mutable-jar approach under the covers. This process is started when a `build` is invoked."
msgstr ""

msgid "The following are some optimizations performed by the `build` command:"
msgstr ""

msgid "A new closed-world assumption about installed providers is created, meaning that no need exists to re-create the registry and initialize the factories at every Keycloak startup"
msgstr ""

msgid "Configuration files are pre-parsed to reduce I/O when starting the server"
msgstr ""

msgid "Database specific resources are configured and prepared to run against a certain database vendor"
msgstr ""

msgid "By persisting build options into the server image, the server does not perform any additional step to interpret configuration options and (re)configure itself"
msgstr ""

msgid "You can read more at the specific https://quarkus.io/guides/reaugmentation[Quarkus guide]"
msgstr ""

msgid "Configuring Keycloak for production"
msgstr ""

msgid "A Keycloak production environment provides secure authentication and authorization for deployments that range from on-premise deployments that support a few thousand users to deployments that serve millions of users."
msgstr ""

msgid "This guide describes the general areas of configuration required for a production ready Keycloak environment. This information focuses on the general concepts instead of the actual implementation, which depends on your environment. The key aspects covered in this guide apply to all environments, whether it is containerized, on-premise, GitOps, or Ansible."
msgstr ""

msgid "TLS for secure communication"
msgstr ""

msgid "Keycloak continually exchanges sensitive data, which means that all communication to and from Keycloak requires a secure communication channel. To prevent several attack vectors, you enable HTTP over TLS, or HTTPS, for that channel."
msgstr ""

msgid "To configure secure communication channels for Keycloak, see link:{links_server_enabletls_url}[{links_server_enabletls_name}] and link:{links_server_outgoinghttp_url}[{links_server_outgoinghttp_name}]."
msgstr ""

msgid "The hostname for Keycloak"
msgstr ""

msgid "In a production environment, Keycloak instances usually run in a private network, but Keycloak needs to expose certain public facing endpoints to communicate with the applications to be secured."
msgstr ""

msgid "For details on the endpoint categories and instructions on how to configure the public hostname for them, see link:{links_server_hostname_url}[{links_server_hostname_name}]."
msgstr ""

msgid "Reverse proxy in a distributed environment"
msgstr ""

msgid "Apart from link:{links_server_hostname_url}[{links_server_hostname_name}], production environments usually include a reverse proxy / load balancer component. It separates and unifies access to the network used by your company or organization. For a Keycloak production environment, this component is recommended."
msgstr ""

msgid "For details on configuring proxy communication modes in Keycloak, see link:{links_server_reverseproxy_url}[{links_server_reverseproxy_name}]. That guide also recommends which paths should be hidden from public access and which paths should be exposed so that Keycloak can secure your applications."
msgstr ""

msgid "Production grade database"
msgstr ""

msgid "The database used by Keycloak is crucial for the overall performance, availability, reliability and integrity of Keycloak. For details on how to configure a supported database, see link:{links_server_db_url}[{links_server_db_name}]."
msgstr ""

msgid "Support for Keycloak in a cluster"
msgstr ""

msgid "To ensure that users can continue to log in when a Keycloak instance goes down, a typical production environment contains two or more Keycloak instances."
msgstr ""

msgid "Keycloak runs on top of JGroups and Infinispan, which provide a reliable, high-availability stack for a clustered scenario. When deployed to a cluster, the embedded Infinispan server communication should be secured. You secure this communication either by enabling authentication and encryption or by isolating the network used for cluster communication."
msgstr ""

msgid "To find out more about using multiple nodes, the different caches and an appropriate stack for your environment, see link:{links_server_caching_url}[{links_server_caching_name}]."
msgstr ""

msgid "Configure Keycloak Server with IPv6 or IPv4"
msgstr ""

msgid "The system properties `java.net.preferIPv4Stack` and `java.net.preferIPv6Addresses` are used to configure the JVM for use with IPv4 or IPv6 addresses."
msgstr ""

msgid "By default, Keycloak is configured to prefer IPv4 addresses. In order to run with IPv6 addresses, you need to specify `java.net.preferIPv4Stack=false` (the JVM default) and `java.net.preferIPv6Addresses=true`. The latter ensures that any hostname to IP address conversions always return IPv6 address variants."
msgstr ""

msgid "These system properties are conveniently set by the `JAVA_OPTS` environment variable. For example, to change the IP stack preference from its default of IPv4 to IPv6, set an environment variable as follows:"
msgstr ""

msgid "export JAVA_OPTS=\"-Xms64m -Xmx512m -XX:MetaspaceSize=96M -XX:MaxMetaspaceSize=256m -Dfile.encoding=UTF-8 -Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true\""
msgstr ""

msgid "Note that when setting the `JAVA_OPTS` you are replacing the default JVM settings. Make sure to adjust them accordingly to your need."
msgstr ""

msgid "All configuration"
msgstr ""

msgid "Cache"
msgstr ""

msgid "Value"
msgstr ""

msgid "[.options-key]#``cache``# [.none]#icon:tools[role=options-build]#"
msgstr ""

msgid "[.options-description]#Defines the cache mechanism for high-availability.#"
msgstr ""

msgid "[.options-description-extended]#By default, a `ispn` cache is used to create a cluster between multiple server nodes. A `local` cache disables clustering and is intended for development and testing purposes.#"
msgstr ""

msgid ""
"*CLI:* `--cache` +\n"
"*Env:* `KC_CACHE`"
msgstr ""

msgid "`+ispn+` (default), `+local+`"
msgstr ""

msgid "[.options-key]#``cache-config-file``# [.none]#icon:tools[role=options-build]#"
msgstr ""

msgid "[.options-description]#Defines the file from which cache configuration should be loaded from.#"
msgstr ""

msgid "[.options-description-extended]#The configuration file is relative to the `conf/` directory.#"
msgstr ""

msgid ""
"*CLI:* `--cache-config-file` +\n"
"*Env:* `KC_CACHE_CONFIG_FILE`"
msgstr ""

msgid "[.options-key]#``cache-stack``# [.none]#icon:tools[role=options-build]#"
msgstr ""

msgid "[.options-description]#Define the default stack to use for cluster communication and node discovery.#"
msgstr ""

msgid "[.options-description-extended]#This option only takes effect if `cache` is set to `ispn`. Default: udp.#"
msgstr ""

msgid ""
"*CLI:* `--cache-stack` +\n"
"*Env:* `KC_CACHE_STACK`"
msgstr ""

msgid "`+tcp+`, `+udp+`, `+kubernetes+`, `+ec2+`, `+azure+`, `+google+`"
msgstr ""

msgid "Database"
msgstr ""

msgid "[.options-key]#``db``# [.none]#icon:tools[role=options-build]#"
msgstr ""

msgid "[.options-description]#The database vendor.#"
msgstr ""

msgid ""
"*CLI:* `--db` +\n"
"*Env:* `KC_DB`"
msgstr ""

msgid "`+dev-file+` (default), `+dev-mem+`, `+mariadb+`, `+mssql+`, `+mysql+`, `+oracle+`, `+postgres+`"
msgstr ""

msgid "[.options-key]#``db-driver``#"
msgstr ""

msgid "[.options-description]#The fully qualified class name of the JDBC driver.#"
msgstr ""

msgid "[.options-description-extended]#If not set, a default driver is set accordingly to the chosen database.#"
msgstr ""

msgid ""
"*CLI:* `--db-driver` +\n"
"*Env:* `KC_DB_DRIVER`"
msgstr ""

msgid "[.options-key]#``db-password``#"
msgstr ""

msgid "[.options-description]#The password of the database user.#"
msgstr ""

msgid ""
"*CLI:* `--db-password` +\n"
"*Env:* `KC_DB_PASSWORD`"
msgstr ""

msgid "[.options-key]#``db-pool-initial-size``#"
msgstr ""

msgid "[.options-description]#The initial size of the connection pool.#"
msgstr ""

msgid ""
"*CLI:* `--db-pool-initial-size` +\n"
"*Env:* `KC_DB_POOL_INITIAL_SIZE`"
msgstr ""

msgid "[.options-key]#``db-pool-max-size``#"
msgstr ""

msgid "[.options-description]#The maximum size of the connection pool.#"
msgstr ""

msgid ""
"*CLI:* `--db-pool-max-size` +\n"
"*Env:* `KC_DB_POOL_MAX_SIZE`"
msgstr ""

msgid "[.options-default]#`+100+`# (default)"
msgstr ""

msgid "[.options-key]#``db-pool-min-size``#"
msgstr ""

msgid "[.options-description]#The minimal size of the connection pool.#"
msgstr ""

msgid ""
"*CLI:* `--db-pool-min-size` +\n"
"*Env:* `KC_DB_POOL_MIN_SIZE`"
msgstr ""

msgid "[.options-key]#``db-schema``#"
msgstr ""

msgid "[.options-description]#The database schema to be used.#"
msgstr ""

msgid ""
"*CLI:* `--db-schema` +\n"
"*Env:* `KC_DB_SCHEMA`"
msgstr ""

msgid "[.options-key]#``db-url``#"
msgstr ""

msgid "[.options-description]#The full database JDBC URL.#"
msgstr ""

msgid "[.options-description-extended]#If not provided, a default URL is set based on the selected database vendor. For instance, if using `postgres`, the default JDBC URL would be `jdbc:postgresql://localhost/keycloak`.#"
msgstr ""

msgid ""
"*CLI:* `--db-url` +\n"
"*Env:* `KC_DB_URL`"
msgstr ""

msgid "[.options-key]#``db-url-database``#"
msgstr ""

msgid "[.options-description]#Sets the database name of the default JDBC URL of the chosen vendor.#"
msgstr ""

msgid "[.options-description-extended]#If the `db-url` option is set, this option is ignored.#"
msgstr ""

msgid ""
"*CLI:* `--db-url-database` +\n"
"*Env:* `KC_DB_URL_DATABASE`"
msgstr ""

msgid "[.options-key]#``db-url-host``#"
msgstr ""

msgid "[.options-description]#Sets the hostname of the default JDBC URL of the chosen vendor.#"
msgstr ""

msgid ""
"*CLI:* `--db-url-host` +\n"
"*Env:* `KC_DB_URL_HOST`"
msgstr ""

msgid "[.options-key]#``db-url-port``#"
msgstr ""

msgid "[.options-description]#Sets the port of the default JDBC URL of the chosen vendor.#"
msgstr ""

msgid ""
"*CLI:* `--db-url-port` +\n"
"*Env:* `KC_DB_URL_PORT`"
msgstr ""

msgid "[.options-key]#``db-url-properties``#"
msgstr ""

msgid "[.options-description]#Sets the properties of the default JDBC URL of the chosen vendor.#"
msgstr ""

msgid ""
"*CLI:* `--db-url-properties` +\n"
"*Env:* `KC_DB_URL_PROPERTIES`"
msgstr ""

msgid "[.options-key]#``db-username``#"
msgstr ""

msgid "[.options-description]#The username of the database user.#"
msgstr ""

msgid ""
"*CLI:* `--db-username` +\n"
"*Env:* `KC_DB_USERNAME`"
msgstr ""

msgid "Transaction"
msgstr ""

msgid "[.options-key]#``transaction-xa-enabled``# [.none]#icon:tools[role=options-build]#"
msgstr ""

msgid "[.options-description]#If set to false, Keycloak uses a non-XA datasource in case the database does not support XA transactions.#"
msgstr ""

msgid ""
"*CLI:* `--transaction-xa-enabled` +\n"
"*Env:* `KC_TRANSACTION_XA_ENABLED`"
msgstr ""

msgid "`+true+` (default), `+false+`"
msgstr ""

msgid "Feature"
msgstr ""

msgid "[.options-key]#``features``# [.none]#icon:tools[role=options-build]#"
msgstr ""

msgid "[.options-description]#Enables a set of one or more features.#"
msgstr ""

msgid ""
"*CLI:* `--features` +\n"
"*Env:* `KC_FEATURES`"
msgstr ""

msgid "`+account-api+`, `+account2+`, `+account3+`, `+admin-api+`, `+admin-fine-grained-authz+`, `+admin2+`, `+authorization+`, `+ciba+`, `+client-policies+`, `+client-secret-rotation+`, `+declarative-user-profile+`, `+docker+`, `+dynamic-scopes+`, `+fips+`, `+impersonation+`, `+js-adapter+`, `+kerberos+`, `+map-storage+`, `+openshift-integration+`, `+par+`, `+preview+`, `+recovery-codes+`, `+scripts+`, `+step-up-authentication+`, `+token-exchange+`, `+update-email+`, `+web-authn+`"
msgstr ""

msgid "[.options-key]#``features-disabled``# [.none]#icon:tools[role=options-build]#"
msgstr ""

msgid "[.options-description]#Disables a set of one or more features.#"
msgstr ""

msgid ""
"*CLI:* `--features-disabled` +\n"
"*Env:* `KC_FEATURES_DISABLED`"
msgstr ""

msgid "Hostname"
msgstr ""

msgid "[.options-key]#``hostname``#"
msgstr ""

msgid "[.options-description]#Hostname for the Keycloak server.#"
msgstr ""

msgid ""
"*CLI:* `--hostname` +\n"
"*Env:* `KC_HOSTNAME`"
msgstr ""

msgid "[.options-key]#``hostname-admin``#"
msgstr ""

msgid "[.options-description]#The hostname for accessing the administration console.#"
msgstr ""

msgid "[.options-description-extended]#Use this option if you are exposing the administration console using a hostname other than the value set to the `hostname` option.#"
msgstr ""

msgid ""
"*CLI:* `--hostname-admin` +\n"
"*Env:* `KC_HOSTNAME_ADMIN`"
msgstr ""

msgid "[.options-key]#``hostname-admin-url``#"
msgstr ""

msgid "[.options-description]#Set the base URL for accessing the administration console, including scheme, host, port and path#"
msgstr ""

msgid ""
"*CLI:* `--hostname-admin-url` +\n"
"*Env:* `KC_HOSTNAME_ADMIN_URL`"
msgstr ""

msgid "[.options-key]#``hostname-path``#"
msgstr ""

msgid "[.options-description]#This should be set if proxy uses a different context-path for Keycloak.#"
msgstr ""

msgid ""
"*CLI:* `--hostname-path` +\n"
"*Env:* `KC_HOSTNAME_PATH`"
msgstr ""

msgid "[.options-key]#``hostname-port``#"
msgstr ""

msgid "[.options-description]#The port used by the proxy when exposing the hostname.#"
msgstr ""

msgid "[.options-description-extended]#Set this option if the proxy uses a port other than the default HTTP and HTTPS ports.#"
msgstr ""

msgid ""
"*CLI:* `--hostname-port` +\n"
"*Env:* `KC_HOSTNAME_PORT`"
msgstr ""

msgid "[.options-default]#`+-1+`# (default)"
msgstr ""

msgid "[.options-key]#``hostname-strict``#"
msgstr ""

msgid "[.options-description]#Disables dynamically resolving the hostname from request headers.#"
msgstr ""

msgid "[.options-description-extended]#Should always be set to true in production, unless proxy verifies the Host header.#"
msgstr ""

msgid ""
"*CLI:* `--hostname-strict` +\n"
"*Env:* `KC_HOSTNAME_STRICT`"
msgstr ""

msgid "[.options-key]#``hostname-strict-backchannel``#"
msgstr ""

msgid "[.options-description]#By default backchannel URLs are dynamically resolved from request headers to allow internal and external applications.#"
msgstr ""

msgid "[.options-description-extended]#If all applications use the public URL this option should be enabled.#"
msgstr ""

msgid ""
"*CLI:* `--hostname-strict-backchannel` +\n"
"*Env:* `KC_HOSTNAME_STRICT_BACKCHANNEL`"
msgstr ""

msgid "`+true+`, `+false+` (default)"
msgstr ""

msgid "[.options-key]#``hostname-url``#"
msgstr ""

msgid "[.options-description]#Set the base URL for frontend URLs, including scheme, host, port and path.#"
msgstr ""

msgid ""
"*CLI:* `--hostname-url` +\n"
"*Env:* `KC_HOSTNAME_URL`"
msgstr ""

msgid "HTTP/TLS"
msgstr ""

msgid "[.options-key]#``http-enabled``#"
msgstr ""

msgid "[.options-description]#Enables the HTTP listener.#"
msgstr ""

msgid ""
"*CLI:* `--http-enabled` +\n"
"*Env:* `KC_HTTP_ENABLED`"
msgstr ""

msgid "[.options-key]#``http-host``#"
msgstr ""

msgid "[.options-description]#The used HTTP Host.#"
msgstr ""

msgid ""
"*CLI:* `--http-host` +\n"
"*Env:* `KC_HTTP_HOST`"
msgstr ""

msgid "[.options-default]#`+0.0.0.0+`# (default)"
msgstr ""

msgid "[.options-key]#``http-port``#"
msgstr ""

msgid "[.options-description]#The used HTTP port.#"
msgstr ""

msgid ""
"*CLI:* `--http-port` +\n"
"*Env:* `KC_HTTP_PORT`"
msgstr ""

msgid "[.options-default]#`+8080+`# (default)"
msgstr ""

msgid "[.options-key]#``http-relative-path``# [.none]#icon:tools[role=options-build]#"
msgstr ""

msgid "[.options-description]#Set the path relative to `/` for serving resources.#"
msgstr ""

msgid "[.options-description-extended]#The path must start with a `/`.#"
msgstr ""

msgid ""
"*CLI:* `--http-relative-path` +\n"
"*Env:* `KC_HTTP_RELATIVE_PATH`"
msgstr ""

msgid "[.options-default]#`+/+`# (default)"
msgstr ""

msgid "[.options-key]#``https-certificate-file``#"
msgstr ""

msgid "[.options-description]#The file path to a server certificate or certificate chain in PEM format.#"
msgstr ""

msgid ""
"*CLI:* `--https-certificate-file` +\n"
"*Env:* `KC_HTTPS_CERTIFICATE_FILE`"
msgstr ""

msgid "[.options-key]#``https-certificate-key-file``#"
msgstr ""

msgid "[.options-description]#The file path to a private key in PEM format.#"
msgstr ""

msgid ""
"*CLI:* `--https-certificate-key-file` +\n"
"*Env:* `KC_HTTPS_CERTIFICATE_KEY_FILE`"
msgstr ""

msgid "[.options-key]#``https-cipher-suites``#"
msgstr ""

msgid "[.options-description]#The cipher suites to use.#"
msgstr ""

msgid "[.options-description-extended]#If none is given, a reasonable default is selected.#"
msgstr ""

msgid ""
"*CLI:* `--https-cipher-suites` +\n"
"*Env:* `KC_HTTPS_CIPHER_SUITES`"
msgstr ""

msgid "[.options-key]#``https-client-auth``#"
msgstr ""

msgid "[.options-description]#Configures the server to require/request client authentication.#"
msgstr ""

msgid ""
"*CLI:* `--https-client-auth` +\n"
"*Env:* `KC_HTTPS_CLIENT_AUTH`"
msgstr ""

msgid "`+none+` (default), `+request+`, `+required+`"
msgstr ""

msgid "[.options-key]#``https-key-store-file``#"
msgstr ""

msgid "[.options-description]#The key store which holds the certificate information instead of specifying separate files.#"
msgstr ""

msgid ""
"*CLI:* `--https-key-store-file` +\n"
"*Env:* `KC_HTTPS_KEY_STORE_FILE`"
msgstr ""

msgid "[.options-key]#``https-key-store-password``#"
msgstr ""

msgid "[.options-description]#The password of the key store file.#"
msgstr ""

msgid ""
"*CLI:* `--https-key-store-password` +\n"
"*Env:* `KC_HTTPS_KEY_STORE_PASSWORD`"
msgstr ""

msgid "[.options-default]#`+password+`# (default)"
msgstr ""

msgid "[.options-key]#``https-key-store-type``#"
msgstr ""

msgid "[.options-description]#The type of the key store file.#"
msgstr ""

msgid "[.options-description-extended]#If not given, the type is automatically detected based on the file name. If `fips-mode` is set to `strict` and no value is set, it defaults to `BCFKS`.#"
msgstr ""

msgid ""
"*CLI:* `--https-key-store-type` +\n"
"*Env:* `KC_HTTPS_KEY_STORE_TYPE`"
msgstr ""

msgid "[.options-key]#``https-port``#"
msgstr ""

msgid "[.options-description]#The used HTTPS port.#"
msgstr ""

msgid ""
"*CLI:* `--https-port` +\n"
"*Env:* `KC_HTTPS_PORT`"
msgstr ""

msgid "[.options-default]#`+8443+`# (default)"
msgstr ""

msgid "[.options-key]#``https-protocols``#"
msgstr ""

msgid "[.options-description]#The list of protocols to explicitly enable.#"
msgstr ""

msgid ""
"*CLI:* `--https-protocols` +\n"
"*Env:* `KC_HTTPS_PROTOCOLS`"
msgstr ""

msgid "[.options-default]#`+TLSv1.3+`# (default)"
msgstr ""

msgid "[.options-key]#``https-trust-store-file``#"
msgstr ""

msgid "[.options-description]#The trust store which holds the certificate information of the certificates to trust.#"
msgstr ""

msgid ""
"*CLI:* `--https-trust-store-file` +\n"
"*Env:* `KC_HTTPS_TRUST_STORE_FILE`"
msgstr ""

msgid "[.options-key]#``https-trust-store-password``#"
msgstr ""

msgid "[.options-description]#The password of the trust store file.#"
msgstr ""

msgid ""
"*CLI:* `--https-trust-store-password` +\n"
"*Env:* `KC_HTTPS_TRUST_STORE_PASSWORD`"
msgstr ""

msgid "[.options-key]#``https-trust-store-type``#"
msgstr ""

msgid "[.options-description]#The type of the trust store file.#"
msgstr ""

msgid ""
"*CLI:* `--https-trust-store-type` +\n"
"*Env:* `KC_HTTPS_TRUST_STORE_TYPE`"
msgstr ""

msgid "Health"
msgstr ""

msgid "[.options-key]#``health-enabled``# [.none]#icon:tools[role=options-build]#"
msgstr ""

msgid "[.options-description]#If the server should expose health check endpoints.#"
msgstr ""

msgid "[.options-description-extended]#If enabled, health checks are available at the `/health`, `/health/ready` and `/health/live` endpoints.#"
msgstr ""

msgid ""
"*CLI:* `--health-enabled` +\n"
"*Env:* `KC_HEALTH_ENABLED`"
msgstr ""

msgid "Metrics"
msgstr ""

msgid "[.options-key]#``metrics-enabled``# [.none]#icon:tools[role=options-build]#"
msgstr ""

msgid "[.options-description]#If the server should expose metrics.#"
msgstr ""

msgid "[.options-description-extended]#If enabled, metrics are available at the `/metrics` endpoint.#"
msgstr ""

msgid ""
"*CLI:* `--metrics-enabled` +\n"
"*Env:* `KC_METRICS_ENABLED`"
msgstr ""

msgid "Proxy"
msgstr ""

msgid "[.options-key]#``proxy``#"
msgstr ""

msgid "[.options-description]#The proxy address forwarding mode if the server is behind a reverse proxy.#"
msgstr ""

msgid ""
"*CLI:* `--proxy` +\n"
"*Env:* `KC_PROXY`"
msgstr ""

msgid "`+none+` (default), `+edge+`, `+reencrypt+`, `+passthrough+`"
msgstr ""

msgid "Vault"
msgstr ""

msgid "[.options-key]#``vault``# [.none]#icon:tools[role=options-build]#"
msgstr ""

msgid "[.options-description]#Enables a vault provider.#"
msgstr ""

msgid ""
"*CLI:* `--vault` +\n"
"*Env:* `KC_VAULT`"
msgstr ""

msgid "`+file+`"
msgstr ""

msgid "[.options-key]#``vault-dir``#"
msgstr ""

msgid "[.options-description]#If set, secrets can be obtained by reading the content of files within the given directory.#"
msgstr ""

msgid ""
"*CLI:* `--vault-dir` +\n"
"*Env:* `KC_VAULT_DIR`"
msgstr ""

msgid "Logging"
msgstr ""

msgid "[.options-key]#``log``#"
msgstr ""

msgid "[.options-description]#Enable one or more log handlers in a comma-separated list.#"
msgstr ""

msgid ""
"*CLI:* `--log` +\n"
"*Env:* `KC_LOG`"
msgstr ""

msgid "`+console+` (default), `+file+`, `+gelf+`"
msgstr ""

msgid "[.options-key]#``log-console-color``#"
msgstr ""

msgid "[.options-description]#Enable or disable colors when logging to console.#"
msgstr ""

msgid ""
"*CLI:* `--log-console-color` +\n"
"*Env:* `KC_LOG_CONSOLE_COLOR`"
msgstr ""

msgid "[.options-key]#``log-console-format``#"
msgstr ""

msgid "[.options-description]#The format of unstructured console log entries.#"
msgstr ""

msgid "[.options-description-extended]#If the format has spaces in it, escape the value using \"<format>\".#"
msgstr ""

msgid ""
"*CLI:* `--log-console-format` +\n"
"*Env:* `KC_LOG_CONSOLE_FORMAT`"
msgstr ""

msgid "[.options-default]#`+%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n+`# (default)"
msgstr ""

msgid "[.options-key]#``log-console-output``#"
msgstr ""

msgid "[.options-description]#Set the log output to JSON or default (plain) unstructured logging.#"
msgstr ""

msgid ""
"*CLI:* `--log-console-output` +\n"
"*Env:* `KC_LOG_CONSOLE_OUTPUT`"
msgstr ""

msgid "`+default+` (default), `+json+`"
msgstr ""

msgid "[.options-key]#``log-file``#"
msgstr ""

msgid "[.options-description]#Set the log file path and filename.#"
msgstr ""

msgid ""
"*CLI:* `--log-file` +\n"
"*Env:* `KC_LOG_FILE`"
msgstr ""

msgid "[.options-default]#`+data/log/keycloak.log+`# (default)"
msgstr ""

msgid "[.options-key]#``log-file-format``#"
msgstr ""

msgid "[.options-description]#Set a format specific to file log entries.#"
msgstr ""

msgid ""
"*CLI:* `--log-file-format` +\n"
"*Env:* `KC_LOG_FILE_FORMAT`"
msgstr ""

msgid "[.options-key]#``log-file-output``#"
msgstr ""

msgid ""
"*CLI:* `--log-file-output` +\n"
"*Env:* `KC_LOG_FILE_OUTPUT`"
msgstr ""

msgid "[.options-key]#``log-gelf-facility``#"
msgstr ""

msgid "[.options-description]#The facility (name of the process) that sends the message.#"
msgstr ""

msgid ""
"*CLI:* `--log-gelf-facility` +\n"
"*Env:* `KC_LOG_GELF_FACILITY`"
msgstr ""

msgid "[.options-default]#`+keycloak+`# (default)"
msgstr ""

msgid "[.options-key]#``log-gelf-host``#"
msgstr ""

msgid "[.options-description]#Hostname of the Logstash or Graylog Host.#"
msgstr ""

msgid "[.options-description-extended]#By default UDP is used, prefix the host with `tcp:` to switch to TCP. Example: `tcp:localhost`#"
msgstr ""

msgid ""
"*CLI:* `--log-gelf-host` +\n"
"*Env:* `KC_LOG_GELF_HOST`"
msgstr ""

msgid "[.options-default]#`+localhost+`# (default)"
msgstr ""

msgid "[.options-key]#``log-gelf-include-location``#"
msgstr ""

msgid "[.options-description]#Include source code location.#"
msgstr ""

msgid ""
"*CLI:* `--log-gelf-include-location` +\n"
"*Env:* `KC_LOG_GELF_INCLUDE_LOCATION`"
msgstr ""

msgid "[.options-key]#``log-gelf-include-message-parameters``#"
msgstr ""

msgid "[.options-description]#Include message parameters from the log event.#"
msgstr ""

msgid ""
"*CLI:* `--log-gelf-include-message-parameters` +\n"
"*Env:* `KC_LOG_GELF_INCLUDE_MESSAGE_PARAMETERS`"
msgstr ""

msgid "[.options-key]#``log-gelf-include-stack-trace``#"
msgstr ""

msgid "[.options-description]#If set to true, occuring stack traces are included in the `StackTrace` field in the GELF output.#"
msgstr ""

msgid ""
"*CLI:* `--log-gelf-include-stack-trace` +\n"
"*Env:* `KC_LOG_GELF_INCLUDE_STACK_TRACE`"
msgstr ""

msgid "[.options-key]#``log-gelf-level``#"
msgstr ""

msgid "[.options-description]#The log level specifying which message levels will be logged by the GELF logger.#"
msgstr ""

msgid "[.options-description-extended]#Message levels lower than this value will be discarded.#"
msgstr ""

msgid ""
"*CLI:* `--log-gelf-level` +\n"
"*Env:* `KC_LOG_GELF_LEVEL`"
msgstr ""

msgid "[.options-default]#`+INFO+`# (default)"
msgstr ""

msgid "[.options-key]#``log-gelf-max-message-size``#"
msgstr ""

msgid "[.options-description]#Maximum message size (in bytes).#"
msgstr ""

msgid "[.options-description-extended]#If the message size is exceeded, GELF will submit the message in multiple chunks.#"
msgstr ""

msgid ""
"*CLI:* `--log-gelf-max-message-size` +\n"
"*Env:* `KC_LOG_GELF_MAX_MESSAGE_SIZE`"
msgstr ""

msgid "[.options-default]#`+8192+`# (default)"
msgstr ""

msgid "[.options-key]#``log-gelf-port``#"
msgstr ""

msgid "[.options-description]#The port the Logstash or Graylog Host is called on.#"
msgstr ""

msgid ""
"*CLI:* `--log-gelf-port` +\n"
"*Env:* `KC_LOG_GELF_PORT`"
msgstr ""

msgid "[.options-default]#`+12201+`# (default)"
msgstr ""

msgid "[.options-key]#``log-gelf-timestamp-format``#"
msgstr ""

msgid "[.options-description]#Set the format for the GELF timestamp field.#"
msgstr ""

msgid "[.options-description-extended]#Uses Java SimpleDateFormat pattern.#"
msgstr ""

msgid ""
"*CLI:* `--log-gelf-timestamp-format` +\n"
"*Env:* `KC_LOG_GELF_TIMESTAMP_FORMAT`"
msgstr ""

msgid "[.options-default]#`+yyyy-MM-dd HH:mm:ss,SSS+`# (default)"
msgstr ""

msgid "[.options-key]#``log-level``#"
msgstr ""

msgid "[.options-description]#The log level of the root category or a comma-separated list of individual categories and their levels.#"
msgstr ""

msgid "[.options-description-extended]#For the root category, you don't need to specify a category.#"
msgstr ""

msgid ""
"*CLI:* `--log-level` +\n"
"*Env:* `KC_LOG_LEVEL`"
msgstr ""

msgid "[.options-default]#`+info+`# (default)"
msgstr ""

msgid "Security"
msgstr ""

msgid "[.options-key]#``fips-mode``# [.none]#icon:tools[role=options-build]#"
msgstr ""

msgid "[.options-description]#Sets the FIPS mode.#"
msgstr ""

msgid "[.options-description-extended]#If `non-strict` is set, FIPS is enabled but on non-approved mode. For full FIPS compliance, set `strict` to run on approved mode. This option defaults to `disabled` when `fips` feature is disabled, which is by default. This option defaults to `non-strict` when `fips` feature is enabled.#"
msgstr ""

msgid ""
"*CLI:* `--fips-mode` +\n"
"*Env:* `KC_FIPS_MODE`"
msgstr ""

msgid "`+non-strict+`, `+strict+`"
msgstr ""

msgid "Export"
msgstr ""

msgid "[.options-key]#``dir``#"
msgstr ""

msgid "[.options-description]#Set the path to a directory where files will be created with the exported data.#"
msgstr ""

msgid ""
"*CLI:* `--dir` +\n"
"*Env:* `KC_DIR`"
msgstr ""

msgid "[.options-key]#``realm``#"
msgstr ""

msgid "[.options-description]#Set the name of the realm to export.#"
msgstr ""

msgid "[.options-description-extended]#If not set, all realms are going to be exported.#"
msgstr ""

msgid ""
"*CLI:* `--realm` +\n"
"*Env:* `KC_REALM`"
msgstr ""

msgid "[.options-key]#``users``#"
msgstr ""

msgid "[.options-description]#Set how users should be exported.#"
msgstr ""

msgid ""
"*CLI:* `--users` +\n"
"*Env:* `KC_USERS`"
msgstr ""

msgid "`+skip+`, `+realm_file+`, `+same_file+`, `+different_files+` (default)"
msgstr ""

msgid "[.options-key]#``users-per-file``#"
msgstr ""

msgid "[.options-description]#Set the number of users per file.#"
msgstr ""

msgid "[.options-description-extended]#It is used only if `users` is set to `different_files`.#"
msgstr ""

msgid ""
"*CLI:* `--users-per-file` +\n"
"*Env:* `KC_USERS_PER_FILE`"
msgstr ""

msgid "[.options-default]#`+50+`# (default)"
msgstr ""

msgid "Import"
msgstr ""

msgid "[.options-key]#``file``#"
msgstr ""

msgid "[.options-description]#Set the path to a file that will be read.#"
msgstr ""

msgid ""
"*CLI:* `--file` +\n"
"*Env:* `KC_FILE`"
msgstr ""

msgid "[.options-key]#``override``#"
msgstr ""

msgid "[.options-description]#Set if existing data should be overwritten.#"
msgstr ""

msgid "[.options-description-extended]#If set to false, data will be ignored.#"
msgstr ""

msgid ""
"*CLI:* `--override` +\n"
"*Env:* `KC_OVERRIDE`"
msgstr ""

msgid "Enabling and disabling features"
msgstr ""

msgid "Keycloak has packed some functionality in features, including some disabled features, such as Technology Preview and deprecated features. Other features are enabled by default, but you can disable them if they do not apply to your use of Keycloak."
msgstr ""

msgid "Enabling features"
msgstr ""

msgid "Some supported features, and all preview features, are disabled by default. To enable a feature, enter this command:"
msgstr ""

msgid "bin/kc.[sh|bat] build --features=\"<name>[,<name>]\""
msgstr ""

msgid "For example, to enable `docker` and `token-exchange`, enter this command:"
msgstr ""

msgid "bin/kc.[sh|bat] build --features=\"docker,token-exchange\""
msgstr ""

msgid "To enable all preview features, enter this command:"
msgstr ""

msgid "bin/kc.[sh|bat] build --features=\"preview\""
msgstr ""

msgid "Disabling features"
msgstr ""

msgid "To disable a feature that is enabled by default, enter this command:"
msgstr ""

msgid "bin/kc.[sh|bat] build --features-disabled=\"<name>[,<name>]\""
msgstr ""

msgid "For example to disable `impersonation`, enter this command:"
msgstr ""

msgid "bin/kc.[sh|bat] build --features-disabled=\"impersonation\""
msgstr ""

msgid "You can disable all default features by entering this command:"
msgstr ""

msgid "bin/kc.[sh|bat] build --features-disabled=\"default\""
msgstr ""

msgid "This command can be used in combination with `features` to explicitly set what features should be available. If a feature is added both to the `features-disabled` list and the `features` list, it will be enabled."
msgstr ""

msgid "Supported features"
msgstr ""

msgid "The following list contains supported features that are enabled by default, and can be disabled if not needed."
msgstr ""

msgid "[.features-name]#account-api#"
msgstr ""

msgid "[.features-description]#Account Management REST API#"
msgstr ""

msgid "[.features-name]#account2#"
msgstr ""

msgid "[.features-description]#Account Management Console version 2#"
msgstr ""

msgid "[.features-name]#admin-api#"
msgstr ""

msgid "[.features-description]#Admin API#"
msgstr ""

msgid "[.features-name]#admin2#"
msgstr ""

msgid "[.features-description]#New Admin Console#"
msgstr ""

msgid "[.features-name]#authorization#"
msgstr ""

msgid "[.features-description]#Authorization Service#"
msgstr ""

msgid "[.features-name]#ciba#"
msgstr ""

msgid "[.features-description]#OpenID Connect Client Initiated Backchannel Authentication (CIBA)#"
msgstr ""

msgid "[.features-name]#client-policies#"
msgstr ""

msgid "[.features-description]#Client configuration policies#"
msgstr ""

msgid "[.features-name]#impersonation#"
msgstr ""

msgid "[.features-description]#Ability for admins to impersonate users#"
msgstr ""

msgid "[.features-name]#js-adapter#"
msgstr ""

msgid "[.features-description]#Host keycloak.js and keycloak-authz.js through the Keycloak sever#"
msgstr ""

msgid "[.features-name]#kerberos#"
msgstr ""

msgid "[.features-description]#Kerberos#"
msgstr ""

msgid "[.features-name]#par#"
msgstr ""

msgid "[.features-description]#OAuth 2.0 Pushed Authorization Requests (PAR)#"
msgstr ""

msgid "[.features-name]#step-up-authentication#"
msgstr ""

msgid "[.features-description]#Step-up Authentication#"
msgstr ""

msgid "[.features-name]#web-authn#"
msgstr ""

msgid "[.features-description]#W3C Web Authentication (WebAuthn)#"
msgstr ""

msgid "Disabled by default"
msgstr ""

msgid "The following list contains supported features that are disabled by default, and can be enabled if needed."
msgstr ""

msgid "[.features-name]#docker#"
msgstr ""

msgid "[.features-description]#Docker Registry protocol#"
msgstr ""

msgid "[.features-name]#fips#"
msgstr ""

msgid "[.features-description]#FIPS 140-2 mode#"
msgstr ""

msgid "Preview features"
msgstr ""

msgid "Preview features are disabled by default and are not recommended for use in production. These features may change or be removed at a future release."
msgstr ""

msgid "[.features-name]#admin-fine-grained-authz#"
msgstr ""

msgid "[.features-description]#Fine-Grained Admin Permissions#"
msgstr ""

msgid "[.features-name]#client-secret-rotation#"
msgstr ""

msgid "[.features-description]#Client Secret Rotation#"
msgstr ""

msgid "[.features-name]#declarative-user-profile#"
msgstr ""

msgid "[.features-description]#Configure user profiles using a declarative style#"
msgstr ""

msgid "[.features-name]#openshift-integration#"
msgstr ""

msgid "[.features-description]#Extension to enable securing OpenShift#"
msgstr ""

msgid "[.features-name]#recovery-codes#"
msgstr ""

msgid "[.features-description]#Recovery codes#"
msgstr ""

msgid "[.features-name]#scripts#"
msgstr ""

msgid "[.features-description]#Write custom authenticators using JavaScript#"
msgstr ""

msgid "[.features-name]#token-exchange#"
msgstr ""

msgid "[.features-description]#Token Exchange Service#"
msgstr ""

msgid "[.features-name]#update-email#"
msgstr ""

msgid "[.features-description]#Update Email Action#"
msgstr ""

msgid "Deprecated features"
msgstr ""

msgid "There are no deprecated features in this Keycloak release."
msgstr ""

msgid "Relevant options"
msgstr ""

msgid "Running Keycloak in a container"
msgstr ""

msgid "Keycloak handles containerized environments such as Kubernetes or OpenShift as first-class citizens. This {section} describes how to optimize and run the Keycloak container image to provide the best experience running a Keycloak container."
msgstr ""

msgid "Creating a customized and optimized container image"
msgstr ""

msgid "The default Keycloak container image ships ready to be configured and optimized."
msgstr ""

msgid "For the best start up of your Keycloak container, build an image by running the `build` step during the container build. This step will save time in every subsequent start phase of the container image."
msgstr ""

msgid "Writing your optimized Keycloak Dockerfile"
msgstr ""

msgid "The following `Dockerfile` creates a pre-configured Keycloak image that enables the health and metrics endpoints, enables the token exchange feature, and uses a PostgreSQL database."
msgstr ""

msgid "Dockerfile:"
msgstr ""

msgid ""
"FROM quay.io/keycloak/keycloak:latest as builder\n"
"\n"
"# Enable health and metrics support\n"
"ENV KC_HEALTH_ENABLED=true\n"
"ENV KC_METRICS_ENABLED=true\n"
"\n"
"# Configure a database vendor\n"
"ENV KC_DB=postgres\n"
"\n"
"WORKDIR /opt/keycloak\n"
"# for demonstration purposes only, please make sure to use proper certificates in production instead\n"
"RUN keytool -genkeypair -storepass password -storetype PKCS12 -keyalg RSA -keysize 2048 -dname \"CN=server\" -alias server -ext \"SAN:c=DNS:localhost,IP:127.0.0.1\" -keystore conf/server.keystore\n"
"RUN /opt/keycloak/bin/kc.sh build\n"
"\n"
"FROM quay.io/keycloak/keycloak:latest\n"
"COPY --from=builder /opt/keycloak/ /opt/keycloak/\n"
"\n"
"# change these values to point to a running postgres instance\n"
"ENV KC_DB=postgres\n"
"ENV KC_DB_URL=<DBURL>\n"
"ENV KC_DB_USERNAME=<DBUSERNAME>\n"
"ENV KC_DB_PASSWORD=<DBPASSWORD>\n"
"ENV KC_HOSTNAME=localhost\n"
"ENTRYPOINT [\"/opt/keycloak/bin/kc.sh\"]"
msgstr ""

msgid "The build process includes multiple stages:"
msgstr ""

msgid "Run the `build` command to set server build options to create an optimized image."
msgstr ""

msgid "The files generated by the `build` stage are copied into a new image."
msgstr ""

msgid "In the final image, additional configuration options for the hostname and database are set so that you don't need to set them again when running the container."
msgstr ""

msgid "In the entrypoint, the `kc.sh` enables access to all the distribution sub-commands."
msgstr ""

msgid "To install custom providers, you just need to define a step to include the JAR file(s) into the `/opt/keycloak/providers` directory:"
msgstr ""

msgid ""
"# A example build step that downloads a JAR file from a URL and adds it to the providers directory\n"
"ADD --chown=keycloak:keycloak <MY_PROVIDER_JAR_URL> /opt/keycloak/providers/myprovider.jar"
msgstr ""

msgid "Installing additional RPM packages"
msgstr ""

msgid "If you try to install new software in a stage `+FROM quay.io/keycloak/keycloak+`, you will notice that `+microdnf+`, `+dnf+`, and even `+rpm+` are not installed. Also, very few packages are available, only enough for a `+bash+` shell, and to run Keycloak itself. This is due to security hardening measures, which reduce the attack surface of the Keycloak container."
msgstr ""

msgid "First, consider if your use case can be implemented in a different way, and so avoid installing new RPMs into the final container:"
msgstr ""

msgid "A `+RUN curl+` instruction in your Dockerfile can be replaced with `+ADD+`, since that instruction natively supports remote URLs."
msgstr ""

msgid "Some common CLI tools can be replaced by creative use of the Linux filesystem. For example, `+ip addr show tap0+` becomes `+cat /sys/class/net/tap0/address+`"
msgstr ""

msgid "Tasks that need RPMs can be moved to a former stage of an image build, and the results copied across instead."
msgstr ""

msgid "Here is an example. Running `+update-ca-trust+` in a former build stage, then copying the result forward:"
msgstr ""

msgid ""
"FROM registry.access.redhat.com/ubi9 AS ubi-micro-build\n"
"COPY mycertificate.crt /etc/pki/ca-trust/source/anchors/mycertificate.crt\n"
"RUN update-ca-trust\n"
"\n"
"FROM quay.io/keycloak/keycloak\n"
"COPY --from=ubi-micro-build /etc/pki /etc/pki"
msgstr ""

msgid "It is possible to install new RPMs if absolutely required, following this two-stage pattern established by ubi-micro:"
msgstr ""

msgid ""
"FROM registry.access.redhat.com/ubi9 AS ubi-micro-build\n"
"RUN mkdir -p /mnt/rootfs\n"
"RUN dnf install --installroot /mnt/rootfs <package names go here> --releasever 9 --setopt install_weak_deps=false --nodocs -y; dnf --installroot /mnt/rootfs clean all\n"
"\n"
"FROM quay.io/keycloak/keycloak\n"
"COPY --from=ubi-micro-build /mnt/rootfs /"
msgstr ""

msgid "This approach uses a chroot, `+/mnt/rootfs+`, so that only the packages you specify and their dependencies are installed, and so can be easily copied into the second stage without guesswork."
msgstr ""

msgid "Some packages have a large tree of dependencies. By installing new RPMs you may unintentionally increase the container's attack surface. Check the list of installed packages carefully."
msgstr ""

msgid "Building the docker image"
msgstr ""

msgid "To build the actual docker image, run the following command from the directory containing your Dockerfile:"
msgstr ""

msgid "podman|docker build . -t mykeycloak"
msgstr ""

msgid "Starting the optimized Keycloak docker image"
msgstr ""

msgid "To start the image, run:"
msgstr ""

msgid ""
"podman|docker run --name mykeycloak -p 8443:8443 \\\n"
"        -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=change_me \\\n"
"        mykeycloak \\\n"
"        start --optimized"
msgstr ""

msgid "Keycloak starts in production mode, using only secured HTTPS communication, and is available on `https://localhost:8443`."
msgstr ""

msgid "Health check endpoints are available at `https://localhost:8443/health`, `https://localhost:8443/health/ready` and `https://localhost:8443/health/live`."
msgstr ""

msgid "Opening up `https://localhost:8443/metrics` leads to a page containing operational metrics that could be used by your monitoring solution."
msgstr ""

msgid "Exposing the container to a different port"
msgstr ""

msgid "By default, the server is listening for `http` and `https` requests using the ports `8080` and `8443`, respectively."
msgstr ""

msgid "If you want to expose the container using a different port, you need to set the `hostname-port` accordingly:"
msgstr ""

msgid "Exposing the container using a port other than the default ports"
msgstr ""

msgid ""
"podman|docker run --name mykeycloak -p 3000:8443 \\\n"
"        -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=change_me \\\n"
"        mykeycloak \\\n"
"        start --optimized --hostname-port=3000"
msgstr ""

msgid "By setting the `hostname-port` option you can now access the server at `https://localhost:3000`."
msgstr ""

msgid "Trying Keycloak in development mode"
msgstr ""

msgid "The easiest way to try Keycloak from a container for development or testing purposes is to use the Development mode. You use the `start-dev` command:"
msgstr ""

msgid ""
"podman|docker run --name mykeycloak -p 8080:8080 \\\n"
"        -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=change_me \\\n"
"        quay.io/keycloak/keycloak:latest \\\n"
"        start-dev"
msgstr ""

msgid "Invoking this command starts the Keycloak server in development mode."
msgstr ""

msgid "This mode should be strictly avoided in production environments because it has insecure defaults. For more information about running Keycloak in production, see link:{links_server_configuration-production_url}[{links_server_configuration-production_name}]."
msgstr ""

msgid "Running a standard keycloak container"
msgstr ""

msgid "In keeping with concepts such as immutable infrastructure, containers need to be re-provisioned routinely. In these environments, you need containers that start fast, therefore you need to create an optimized image as described in the preceding section. However, if your environment has different requirements, you can run a standard Keycloak image by just running the `start` command. For example:"
msgstr ""

msgid ""
"podman|docker run --name mykeycloak -p 8080:8080 \\\n"
"        -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=change_me \\\n"
"        quay.io/keycloak/keycloak:latest \\\n"
"        start \\\n"
"        --db=postgres --features=token-exchange \\\n"
"        --db-url=<JDBC-URL> --db-username=<DB-USER> --db-password=<DB-PASSWORD> \\\n"
"        --https-key-store-file=<file> --https-key-store-password=<password>"
msgstr ""

msgid "Running this command starts a Keycloak server that detects and applies the build options first. In the example, the line  `--db=postgres --features=token-exchange` sets the database vendor to PostgreSQL and enables the token exchange feature."
msgstr ""

msgid "Keycloak then starts up and applies the configuration for the specific environment. This approach significantly increases startup time and creates an image that is mutable, which is not the best practice."
msgstr ""

msgid "Provide initial admin credentials when running in a container"
msgstr ""

msgid "Keycloak only allows to create the initial admin user from a local network connection. This is not the case when running in a container, so you have to provide the following environment variables when you run the image:"
msgstr ""

msgid ""
"# setting the admin username\n"
"-e KEYCLOAK_ADMIN=<admin-user-name>\n"
"\n"
"# setting the initial password\n"
"-e KEYCLOAK_ADMIN_PASSWORD=change_me"
msgstr ""

msgid "Importing A Realm On Startup"
msgstr ""

msgid "The https://quay.io/keycloak/keycloak[published Keycloak containers] have a directory `/opt/keycloak/data/import`. If you put one or more import files in that directory via a volume mount or other means and add the startup argument `--import-realm`, the Keycloak container will import that data on startup! This may only make sense to do in Dev mode."
msgstr ""

msgid ""
"podman|docker run --name keycloak_unoptimized -p 8080:8080 \\\n"
"        -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=change_me \\\n"
"        -v /path/to/realm/data:/opt/keycloak/data/import \\\n"
"        quay.io/keycloak/keycloak:latest \\\n"
"        start-dev --import-realm"
msgstr ""

msgid "Feel free to join the open https://github.com/keycloak/keycloak/discussions/8549[GitHub Discussion] around enhancements of the admin bootstrapping process."
msgstr ""

msgid "All provider configuration"
msgstr ""

msgid "authentication-sessions"
msgstr ""

msgid "infinispan"
msgstr ""

msgid "[.options-key]#``spi-authentication-sessions-infinispan-auth-sessions-limit``#"
msgstr ""

msgid "[.options-description]#The maximum number of concurrent authentication sessions per RootAuthenticationSession.#"
msgstr ""

msgid ""
"*CLI:* `--spi-authentication-sessions-infinispan-auth-sessions-limit` +\n"
"*Env:* `KC_SPI_AUTHENTICATION_SESSIONS_INFINISPAN_AUTH_SESSIONS_LIMIT`"
msgstr ""

msgid "[.options-default]#`+300+`# (default) or any `+int+`"
msgstr ""

msgid "map"
msgstr ""

msgid "[.options-key]#``spi-authentication-sessions-map-auth-sessions-limit``#"
msgstr ""

msgid ""
"*CLI:* `--spi-authentication-sessions-map-auth-sessions-limit` +\n"
"*Env:* `KC_SPI_AUTHENTICATION_SESSIONS_MAP_AUTH_SESSIONS_LIMIT`"
msgstr ""

msgid "ciba-auth-channel"
msgstr ""

msgid "ciba-http-auth-channel"
msgstr ""

msgid "[.options-key]#``spi-ciba-auth-channel-ciba-http-auth-channel-http-authentication-channel-uri``#"
msgstr ""

msgid "[.options-description]#The HTTP(S) URI of the authentication channel.#"
msgstr ""

msgid ""
"*CLI:* `--spi-ciba-auth-channel-ciba-http-auth-channel-http-authentication-channel-uri` +\n"
"*Env:* `KC_SPI_CIBA_AUTH_CHANNEL_CIBA_HTTP_AUTH_CHANNEL_HTTP_AUTHENTICATION_CHANNEL_URI`"
msgstr ""

msgid "any `+string+`"
msgstr ""

msgid "connections-http-client"
msgstr ""

msgid "default"
msgstr ""

msgid "[.options-key]#``spi-connections-http-client-default-client-key-password``#"
msgstr ""

msgid "[.options-description]#The key password.#"
msgstr ""

msgid ""
"*CLI:* `--spi-connections-http-client-default-client-key-password` +\n"
"*Env:* `KC_SPI_CONNECTIONS_HTTP_CLIENT_DEFAULT_CLIENT_KEY_PASSWORD`"
msgstr ""

msgid "[.options-default]#`+-1+`# (default) or any `+string+`"
msgstr ""

msgid "[.options-key]#``spi-connections-http-client-default-client-keystore``#"
msgstr ""

msgid "[.options-description]#The file path of the key store from where the key material is going to be read from to set-up TLS connections.#"
msgstr ""

msgid ""
"*CLI:* `--spi-connections-http-client-default-client-keystore` +\n"
"*Env:* `KC_SPI_CONNECTIONS_HTTP_CLIENT_DEFAULT_CLIENT_KEYSTORE`"
msgstr ""

msgid "[.options-key]#``spi-connections-http-client-default-client-keystore-password``#"
msgstr ""

msgid "[.options-description]#The key store password.#"
msgstr ""

msgid ""
"*CLI:* `--spi-connections-http-client-default-client-keystore-password` +\n"
"*Env:* `KC_SPI_CONNECTIONS_HTTP_CLIENT_DEFAULT_CLIENT_KEYSTORE_PASSWORD`"
msgstr ""

msgid "[.options-key]#``spi-connections-http-client-default-connection-pool-size``#"
msgstr ""

msgid "[.options-description]#Assigns maximum total connection value.#"
msgstr ""

msgid ""
"*CLI:* `--spi-connections-http-client-default-connection-pool-size` +\n"
"*Env:* `KC_SPI_CONNECTIONS_HTTP_CLIENT_DEFAULT_CONNECTION_POOL_SIZE`"
msgstr ""

msgid "any `+int+`"
msgstr ""

msgid "[.options-key]#``spi-connections-http-client-default-connection-ttl-millis``#"
msgstr ""

msgid "[.options-description]#Sets maximum time, in milliseconds, to live for persistent connections.#"
msgstr ""

msgid ""
"*CLI:* `--spi-connections-http-client-default-connection-ttl-millis` +\n"
"*Env:* `KC_SPI_CONNECTIONS_HTTP_CLIENT_DEFAULT_CONNECTION_TTL_MILLIS`"
msgstr ""

msgid "[.options-default]#`+-1+`# (default) or any `+long+`"
msgstr ""

msgid "[.options-key]#``spi-connections-http-client-default-disable-cookies``#"
msgstr ""

msgid "[.options-description]#Disables state (cookie) management.#"
msgstr ""

msgid ""
"*CLI:* `--spi-connections-http-client-default-disable-cookies` +\n"
"*Env:* `KC_SPI_CONNECTIONS_HTTP_CLIENT_DEFAULT_DISABLE_COOKIES`"
msgstr ""

msgid "[.options-key]#``spi-connections-http-client-default-disable-trust-manager``#"
msgstr ""

msgid "[.options-description]#Disable trust management and hostname verification.#"
msgstr ""

msgid "[.options-description-extended]#NOTE this is a security hole, so only set this option if you cannot or do not want to verify the identity of the host you are communicating with.#"
msgstr ""

msgid ""
"*CLI:* `--spi-connections-http-client-default-disable-trust-manager` +\n"
"*Env:* `KC_SPI_CONNECTIONS_HTTP_CLIENT_DEFAULT_DISABLE_TRUST_MANAGER`"
msgstr ""

msgid "[.options-key]#``spi-connections-http-client-default-establish-connection-timeout-millis``#"
msgstr ""

msgid "[.options-description]#When trying to make an initial socket connection, what is the timeout?#"
msgstr ""

msgid ""
"*CLI:* `--spi-connections-http-client-default-establish-connection-timeout-millis` +\n"
"*Env:* `KC_SPI_CONNECTIONS_HTTP_CLIENT_DEFAULT_ESTABLISH_CONNECTION_TIMEOUT_MILLIS`"
msgstr ""

msgid "[.options-key]#``spi-connections-http-client-default-max-connection-idle-time-millis``#"
msgstr ""

msgid "[.options-description]#Sets the time, in milliseconds, for evicting idle connections from the pool.#"
msgstr ""

msgid ""
"*CLI:* `--spi-connections-http-client-default-max-connection-idle-time-millis` +\n"
"*Env:* `KC_SPI_CONNECTIONS_HTTP_CLIENT_DEFAULT_MAX_CONNECTION_IDLE_TIME_MILLIS`"
msgstr ""

msgid "[.options-default]#`+900000+`# (default) or any `+long+`"
msgstr ""

msgid "[.options-key]#``spi-connections-http-client-default-max-pooled-per-route``#"
msgstr ""

msgid "[.options-description]#Assigns maximum connection per route value.#"
msgstr ""

msgid ""
"*CLI:* `--spi-connections-http-client-default-max-pooled-per-route` +\n"
"*Env:* `KC_SPI_CONNECTIONS_HTTP_CLIENT_DEFAULT_MAX_POOLED_PER_ROUTE`"
msgstr ""

msgid "[.options-default]#`+64+`# (default) or any `+int+`"
msgstr ""

msgid "[.options-key]#``spi-connections-http-client-default-proxy-mappings``#"
msgstr ""

msgid "[.options-description]#Denotes the combination of a regex based hostname pattern and a proxy-uri in the form of hostnamePattern;proxyUri.#"
msgstr ""

msgid ""
"*CLI:* `--spi-connections-http-client-default-proxy-mappings` +\n"
"*Env:* `KC_SPI_CONNECTIONS_HTTP_CLIENT_DEFAULT_PROXY_MAPPINGS`"
msgstr ""

msgid "[.options-key]#``spi-connections-http-client-default-reuse-connections``#"
msgstr ""

msgid "[.options-description]#If connections should be reused.#"
msgstr ""

msgid ""
"*CLI:* `--spi-connections-http-client-default-reuse-connections` +\n"
"*Env:* `KC_SPI_CONNECTIONS_HTTP_CLIENT_DEFAULT_REUSE_CONNECTIONS`"
msgstr ""

msgid "[.options-key]#``spi-connections-http-client-default-socket-timeout-millis``#"
msgstr ""

msgid "[.options-description]#Socket inactivity timeout.#"
msgstr ""

msgid ""
"*CLI:* `--spi-connections-http-client-default-socket-timeout-millis` +\n"
"*Env:* `KC_SPI_CONNECTIONS_HTTP_CLIENT_DEFAULT_SOCKET_TIMEOUT_MILLIS`"
msgstr ""

msgid "[.options-default]#`+5000+`# (default) or any `+long+`"
msgstr ""

msgid "connections-jpa"
msgstr ""

msgid "legacy"
msgstr ""

msgid "[.options-key]#``spi-connections-jpa-legacy-initialize-empty``#"
msgstr ""

msgid "[.options-description]#Initialize database if empty.#"
msgstr ""

msgid "[.options-description-extended]#If set to false the database has to be manually initialized. If you want to manually initialize the database set migrationStrategy to manual which will create a file with SQL commands to initialize the database.#"
msgstr ""

msgid ""
"*CLI:* `--spi-connections-jpa-legacy-initialize-empty` +\n"
"*Env:* `KC_SPI_CONNECTIONS_JPA_LEGACY_INITIALIZE_EMPTY`"
msgstr ""

msgid "[.options-key]#``spi-connections-jpa-legacy-migration-export``#"
msgstr ""

msgid "[.options-description]#Path for where to write manual database initialization/migration file.#"
msgstr ""

msgid ""
"*CLI:* `--spi-connections-jpa-legacy-migration-export` +\n"
"*Env:* `KC_SPI_CONNECTIONS_JPA_LEGACY_MIGRATION_EXPORT`"
msgstr ""

msgid "[.options-key]#``spi-connections-jpa-legacy-migration-strategy``#"
msgstr ""

msgid "[.options-description]#Strategy to use to migrate database.#"
msgstr ""

msgid "[.options-description-extended]#Valid values are update, manual and validate. Update will automatically migrate the database schema. Manual will export the required changes to a file with SQL commands that you can manually execute on the database. Validate will simply check if the database is up-to-date.#"
msgstr ""

msgid ""
"*CLI:* `--spi-connections-jpa-legacy-migration-strategy` +\n"
"*Env:* `KC_SPI_CONNECTIONS_JPA_LEGACY_MIGRATION_STRATEGY`"
msgstr ""

msgid "`+update+` (default), `+manual+`, `+validate+`"
msgstr ""

msgid "dblock"
msgstr ""

msgid "jpa"
msgstr ""

msgid "[.options-key]#``spi-dblock-jpa-lock-wait-timeout``#"
msgstr ""

msgid "[.options-description]#The maximum time to wait when waiting to release a database lock.#"
msgstr ""

msgid ""
"*CLI:* `--spi-dblock-jpa-lock-wait-timeout` +\n"
"*Env:* `KC_SPI_DBLOCK_JPA_LOCK_WAIT_TIMEOUT`"
msgstr ""

msgid "events-listener"
msgstr ""

msgid "email"
msgstr ""

msgid "[.options-key]#``spi-events-listener-email-exclude-events``#"
msgstr ""

msgid "[.options-description]#A comma-separated list of events that should not be sent via email to the user's account.#"
msgstr ""

msgid ""
"*CLI:* `--spi-events-listener-email-exclude-events` +\n"
"*Env:* `KC_SPI_EVENTS_LISTENER_EMAIL_EXCLUDE_EVENTS`"
msgstr ""

msgid "`+authreqid_to_token+`, `+authreqid_to_token_error+`, `+client_delete+`, `+client_delete_error+`, `+client_info+`, `+client_info_error+`, `+client_initiated_account_linking+`, `+client_initiated_account_linking_error+`, `+client_login+`, `+client_login_error+`, `+client_register+`, `+client_register_error+`, `+client_update+`, `+client_update_error+`, `+code_to_token+`, `+code_to_token_error+`, `+custom_required_action+`, `+custom_required_action_error+`, `+delete_account+`, `+delete_account_error+`, `+execute_action_token+`, `+execute_action_token_error+`, `+execute_actions+`, `+execute_actions_error+`, `+federated_identity_link+`, `+federated_identity_link_error+`, `+grant_consent+`, `+grant_consent_error+`, `+identity_provider_first_login+`, `+identity_provider_first_login_error+`, `+identity_provider_link_account+`, `+identity_provider_link_account_error+`, `+identity_provider_login+`, `+identity_provider_login_error+`, `+identity_provider_post_login+`, `+identity_provider_post_login_error+`, `+identity_provider_response+`, `+identity_provider_response_error+`, `+identity_provider_retrieve_token+`, `+identity_provider_retrieve_token_error+`, `+impersonate+`, `+impersonate_error+`, `+introspect_token+`, `+introspect_token_error+`, `+invalid_signature+`, `+invalid_signature_error+`, `+login+`, `+login_error+`, `+logout+`, `+logout_error+`, `+oauth2_device_auth+`, `+oauth2_device_auth_error+`, `+oauth2_device_code_to_token+`, `+oauth2_device_code_to_token_error+`, `+oauth2_device_verify_user_code+`, `+oauth2_device_verify_user_code_error+`, `+permission_token+`, `+permission_token_error+`, `+pushed_authorization_request+`, `+pushed_authorization_request_error+`, `+refresh_token+`, `+refresh_token_error+`, `+register+`, `+register_error+`, `+register_node+`, `+register_node_error+`, `+remove_federated_identity+`, `+remove_federated_identity_error+`, `+remove_totp+`, `+remove_totp_error+`, `+reset_password+`, `+reset_password_error+`, `+restart_authentication+`, `+restart_authentication_error+`, `+revoke_grant+`, `+revoke_grant_error+`, `+send_identity_provider_link+`, `+send_identity_provider_link_error+`, `+send_reset_password+`, `+send_reset_password_error+`, `+send_verify_email+`, `+send_verify_email_error+`, `+token_exchange+`, `+token_exchange_error+`, `+unregister_node+`, `+unregister_node_error+`, `+update_consent+`, `+update_consent_error+`, `+update_email+`, `+update_email_error+`, `+update_password+`, `+update_password_error+`, `+update_profile+`, `+update_profile_error+`, `+update_totp+`, `+update_totp_error+`, `+user_info_request+`, `+user_info_request_error+`, `+validate_access_token+`, `+validate_access_token_error+`, `+verify_email+`, `+verify_email_error+`, `+verify_profile+`, `+verify_profile_error+`"
msgstr ""

msgid "[.options-key]#``spi-events-listener-email-include-events``#"
msgstr ""

msgid "[.options-description]#A comma-separated list of events that should be sent via email to the user's account.#"
msgstr ""

msgid ""
"*CLI:* `--spi-events-listener-email-include-events` +\n"
"*Env:* `KC_SPI_EVENTS_LISTENER_EMAIL_INCLUDE_EVENTS`"
msgstr ""

msgid "jboss-logging"
msgstr ""

msgid "[.options-key]#``spi-events-listener-jboss-logging-error-level``#"
msgstr ""

msgid "[.options-description]#The log level for error messages.#"
msgstr ""

msgid ""
"*CLI:* `--spi-events-listener-jboss-logging-error-level` +\n"
"*Env:* `KC_SPI_EVENTS_LISTENER_JBOSS_LOGGING_ERROR_LEVEL`"
msgstr ""

msgid "`+debug+`, `+error+`, `+fatal+`, `+info+`, `+trace+`, `+warn+` (default)"
msgstr ""

msgid "[.options-key]#``spi-events-listener-jboss-logging-success-level``#"
msgstr ""

msgid "[.options-description]#The log level for success messages.#"
msgstr ""

msgid ""
"*CLI:* `--spi-events-listener-jboss-logging-success-level` +\n"
"*Env:* `KC_SPI_EVENTS_LISTENER_JBOSS_LOGGING_SUCCESS_LEVEL`"
msgstr ""

msgid "`+debug+` (default), `+error+`, `+fatal+`, `+info+`, `+trace+`, `+warn+`"
msgstr ""

msgid "export"
msgstr ""

msgid "dir"
msgstr ""

msgid "[.options-key]#``spi-export-dir-dir``#"
msgstr ""

msgid "[.options-description]#Directory to export to#"
msgstr ""

msgid ""
"*CLI:* `--spi-export-dir-dir` +\n"
"*Env:* `KC_SPI_EXPORT_DIR_DIR`"
msgstr ""

msgid "[.options-key]#``spi-export-dir-realm-name``#"
msgstr ""

msgid "[.options-description]#Realm to export#"
msgstr ""

msgid ""
"*CLI:* `--spi-export-dir-realm-name` +\n"
"*Env:* `KC_SPI_EXPORT_DIR_REALM_NAME`"
msgstr ""

msgid "[.options-key]#``spi-export-dir-users-export-strategy``#"
msgstr ""

msgid "[.options-description]#Users export strategy#"
msgstr ""

msgid ""
"*CLI:* `--spi-export-dir-users-export-strategy` +\n"
"*Env:* `KC_SPI_EXPORT_DIR_USERS_EXPORT_STRATEGY`"
msgstr ""

msgid "[.options-default]#`+DIFFERENT_FILES+`# (default) or any `+string+`"
msgstr ""

msgid "[.options-key]#``spi-export-dir-users-per-file``#"
msgstr ""

msgid "[.options-description]#Users per exported file#"
msgstr ""

msgid ""
"*CLI:* `--spi-export-dir-users-per-file` +\n"
"*Env:* `KC_SPI_EXPORT_DIR_USERS_PER_FILE`"
msgstr ""

msgid "[.options-default]#`+50+`# (default) or any `+int+`"
msgstr ""

msgid "single-file"
msgstr ""

msgid "[.options-key]#``spi-export-single-file-file``#"
msgstr ""

msgid "[.options-description]#File to export to#"
msgstr ""

msgid ""
"*CLI:* `--spi-export-single-file-file` +\n"
"*Env:* `KC_SPI_EXPORT_SINGLE_FILE_FILE`"
msgstr ""

msgid "[.options-key]#``spi-export-single-file-realm-name``#"
msgstr ""

msgid ""
"*CLI:* `--spi-export-single-file-realm-name` +\n"
"*Env:* `KC_SPI_EXPORT_SINGLE_FILE_REALM_NAME`"
msgstr ""

msgid "global-lock"
msgstr ""

msgid "[.options-key]#``spi-global-lock-map-default-timeout-milliseconds``#"
msgstr ""

msgid "[.options-description]#Default timeout when waiting for a lock#"
msgstr ""

msgid ""
"*CLI:* `--spi-global-lock-map-default-timeout-milliseconds` +\n"
"*Env:* `KC_SPI_GLOBAL_LOCK_MAP_DEFAULT_TIMEOUT_MILLISECONDS`"
msgstr ""

msgid "[.options-default]#`+5000+`# (default) or any `+int+`"
msgstr ""

msgid "import"
msgstr ""

msgid "[.options-key]#``spi-import-dir-dir``#"
msgstr ""

msgid "[.options-description]#Directory to import from#"
msgstr ""

msgid ""
"*CLI:* `--spi-import-dir-dir` +\n"
"*Env:* `KC_SPI_IMPORT_DIR_DIR`"
msgstr ""

msgid "[.options-key]#``spi-import-dir-realm-name``#"
msgstr ""

msgid ""
"*CLI:* `--spi-import-dir-realm-name` +\n"
"*Env:* `KC_SPI_IMPORT_DIR_REALM_NAME`"
msgstr ""

msgid "[.options-key]#``spi-import-dir-strategy``#"
msgstr ""

msgid "[.options-description]#Strategy for import: IGNORE_EXISTING, OVERWRITE_EXISTING#"
msgstr ""

msgid ""
"*CLI:* `--spi-import-dir-strategy` +\n"
"*Env:* `KC_SPI_IMPORT_DIR_STRATEGY`"
msgstr ""

msgid "[.options-key]#``spi-import-single-file-file``#"
msgstr ""

msgid "[.options-description]#File to import from#"
msgstr ""

msgid ""
"*CLI:* `--spi-import-single-file-file` +\n"
"*Env:* `KC_SPI_IMPORT_SINGLE_FILE_FILE`"
msgstr ""

msgid "[.options-key]#``spi-import-single-file-realm-name``#"
msgstr ""

msgid ""
"*CLI:* `--spi-import-single-file-realm-name` +\n"
"*Env:* `KC_SPI_IMPORT_SINGLE_FILE_REALM_NAME`"
msgstr ""

msgid "[.options-key]#``spi-import-single-file-strategy``#"
msgstr ""

msgid ""
"*CLI:* `--spi-import-single-file-strategy` +\n"
"*Env:* `KC_SPI_IMPORT_SINGLE_FILE_STRATEGY`"
msgstr ""

msgid "map-storage"
msgstr ""

msgid "hotrod"
msgstr ""

msgid "[.options-key]#``spi-map-storage-hotrod-lock-timeout``#"
msgstr ""

msgid "[.options-description]#The maximum time to wait in milliseconds when waiting for acquiring a pessimistic read lock.#"
msgstr ""

msgid "[.options-description-extended]#If set to negative there is no timeout configured.#"
msgstr ""

msgid ""
"*CLI:* `--spi-map-storage-hotrod-lock-timeout` +\n"
"*Env:* `KC_SPI_MAP_STORAGE_HOTROD_LOCK_TIMEOUT`"
msgstr ""

msgid "[.options-default]#`+10000+`# (default) or any `+long+`"
msgstr ""

msgid "[.options-key]#``spi-map-storage-jpa-lock-timeout``#"
msgstr ""

msgid ""
"*CLI:* `--spi-map-storage-jpa-lock-timeout` +\n"
"*Env:* `KC_SPI_MAP_STORAGE_JPA_LOCK_TIMEOUT`"
msgstr ""

msgid "resource-encoding"
msgstr ""

msgid "gzip"
msgstr ""

msgid "[.options-key]#``spi-resource-encoding-gzip-excluded-content-types``#"
msgstr ""

msgid "[.options-description]#A space separated list of content-types to exclude from encoding.#"
msgstr ""

msgid ""
"*CLI:* `--spi-resource-encoding-gzip-excluded-content-types` +\n"
"*Env:* `KC_SPI_RESOURCE_ENCODING_GZIP_EXCLUDED_CONTENT_TYPES`"
msgstr ""

msgid "[.options-default]#`+image/png image/jpeg+`# (default) or any `+string+`"
msgstr ""

msgid "sticky-session-encoder"
msgstr ""

msgid "[.options-key]#``spi-sticky-session-encoder-infinispan-should-attach-route``#"
msgstr ""

msgid "[.options-description]#If the route should be attached to cookies to reflect the node that owns a particular session.#"
msgstr ""

msgid ""
"*CLI:* `--spi-sticky-session-encoder-infinispan-should-attach-route` +\n"
"*Env:* `KC_SPI_STICKY_SESSION_ENCODER_INFINISPAN_SHOULD_ATTACH_ROUTE`"
msgstr ""

msgid "truststore"
msgstr ""

msgid "file"
msgstr ""

msgid "[.options-key]#``spi-truststore-file-file``#"
msgstr ""

msgid "[.options-description]#The file path of the trust store from where the certificates are going to be read from to validate TLS connections.#"
msgstr ""

msgid ""
"*CLI:* `--spi-truststore-file-file` +\n"
"*Env:* `KC_SPI_TRUSTSTORE_FILE_FILE`"
msgstr ""

msgid "[.options-key]#``spi-truststore-file-hostname-verification-policy``#"
msgstr ""

msgid "[.options-description]#The hostname verification policy.#"
msgstr ""

msgid ""
"*CLI:* `--spi-truststore-file-hostname-verification-policy` +\n"
"*Env:* `KC_SPI_TRUSTSTORE_FILE_HOSTNAME_VERIFICATION_POLICY`"
msgstr ""

msgid "`+any+`, `+wildcard+` (default), `+strict+`"
msgstr ""

msgid "[.options-key]#``spi-truststore-file-password``#"
msgstr ""

msgid "[.options-description]#The trust store password.#"
msgstr ""

msgid ""
"*CLI:* `--spi-truststore-file-password` +\n"
"*Env:* `KC_SPI_TRUSTSTORE_FILE_PASSWORD`"
msgstr ""

msgid "[.options-key]#``spi-truststore-file-type``#"
msgstr ""

msgid "[.options-description]#Type of the truststore.#"
msgstr ""

msgid "[.options-description-extended]#If not provided, the type would be detected based on the truststore file extension or platform default type.#"
msgstr ""

msgid ""
"*CLI:* `--spi-truststore-file-type` +\n"
"*Env:* `KC_SPI_TRUSTSTORE_FILE_TYPE`"
msgstr ""

msgid "user-profile"
msgstr ""

msgid "declarative-user-profile"
msgstr ""

msgid "[.options-key]#``spi-user-profile-declarative-user-profile-admin-read-only-attributes``#"
msgstr ""

msgid "[.options-description]#Array of regular expressions to identify fields that should be treated read-only so administrators can't change them.#"
msgstr ""

msgid ""
"*CLI:* `--spi-user-profile-declarative-user-profile-admin-read-only-attributes` +\n"
"*Env:* `KC_SPI_USER_PROFILE_DECLARATIVE_USER_PROFILE_ADMIN_READ_ONLY_ATTRIBUTES`"
msgstr ""

msgid "any `+MultivaluedString+`"
msgstr ""

msgid "[.options-key]#``spi-user-profile-declarative-user-profile-read-only-attributes``#"
msgstr ""

msgid "[.options-description]#Array of regular expressions to identify fields that should be treated read-only so users can't change them.#"
msgstr ""

msgid ""
"*CLI:* `--spi-user-profile-declarative-user-profile-read-only-attributes` +\n"
"*Env:* `KC_SPI_USER_PROFILE_DECLARATIVE_USER_PROFILE_READ_ONLY_ATTRIBUTES`"
msgstr ""

msgid "well-known"
msgstr ""

msgid "openid-configuration"
msgstr ""

msgid "[.options-key]#``spi-well-known-openid-configuration-include-client-scopes``#"
msgstr ""

msgid "[.options-description]#If client scopes should be used to calculate the list of supported scopes.#"
msgstr ""

msgid ""
"*CLI:* `--spi-well-known-openid-configuration-include-client-scopes` +\n"
"*Env:* `KC_SPI_WELL_KNOWN_OPENID_CONFIGURATION_INCLUDE_CLIENT_SCOPES`"
msgstr ""

msgid "[.options-key]#``spi-well-known-openid-configuration-openid-configuration-override``#"
msgstr ""

msgid "[.options-description]#The file path from where the metadata should be loaded from.#"
msgstr ""

msgid "[.options-description-extended]#You can use an absolute file path or, if the file is in the server classpath, use the `classpath:` prefix to load the file from the classpath.#"
msgstr ""

msgid ""
"*CLI:* `--spi-well-known-openid-configuration-openid-configuration-override` +\n"
"*Env:* `KC_SPI_WELL_KNOWN_OPENID_CONFIGURATION_OPENID_CONFIGURATION_OVERRIDE`"
msgstr ""

msgid "Configuring TLS"
msgstr ""

msgid "Transport Layer Security (short: TLS) is crucial to exchange data over a secured channel. For production environments, you should never expose Keycloak endpoints through HTTP, as sensitive data is at the core of what Keycloak exchanges with other applications. In this {section}, you will learn how to configure Keycloak to use HTTPS/TLS."
msgstr ""

msgid "Configuring TLS in Keycloak"
msgstr ""

msgid "Keycloak can be configured to load the required certificate infrastructure using files in PEM format or from a Java Keystore. When both alternatives are configured, the PEM files takes precedence over the Java Keystores."
msgstr ""

msgid "Providing certificates in PEM format"
msgstr ""

msgid "When you use a pair of matching certificate and private key files in PEM format, you configure Keycloak to use them by running the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --https-certificate-file=/path/to/certfile.pem --https-certificate-key-file=/path/to/keyfile.pem"
msgstr ""

msgid "Keycloak creates a keystore out of these files in memory and uses this keystore afterwards."
msgstr ""

msgid "Providing a Java Keystore"
msgstr ""

msgid "When no keystore file is explicitly configured, but `http-enabled` is set to false, Keycloak looks for a `conf/server.keystore` file."
msgstr ""

msgid "As an alternative, you can use an existing keystore by running the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --https-key-store-file=/path/to/existing-keystore-file"
msgstr ""

msgid "Setting the Keystore password"
msgstr ""

msgid "You can set a secure password for your keystore using the `https-key-store-password` option:"
msgstr ""

msgid "bin/kc.[sh|bat] start --https-key-store-password=<value>"
msgstr ""

msgid "If no password is set, the default password `password` is used."
msgstr ""

msgid "Configuring TLS protocols"
msgstr ""

msgid "By default, Keycloak does not enable deprecated TLS protocols. If your client supports only deprecated protocols, consider upgrading the client. However, as a temporary work-around, you can enable deprecated protocols by running the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --https-protocols=<protocol>[,<protocol>]"
msgstr ""

msgid "To also allow TLSv1.2, use a command such as the following: `kc.sh start --https-protocols=TLSv1.3,TLSv1.2`."
msgstr ""

msgid "Switching the HTTPS port"
msgstr ""

msgid "Keycloak listens for HTTPS traffic on port `8443`. To change this port, use the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --https-port=<port>"
msgstr ""

msgid "Using a truststore"
msgstr ""

msgid "In order to properly validate client certificates and enable certain authentication methods like two-way TLS or mTLS, you can set a trust store with all the certificates (and certificate chain) the server should be trusting. There are number of capabilities that rely on this trust store to properly authenticate clients using certificates such as:"
msgstr ""

msgid "Mutual-TLS Client Authentication"
msgstr ""

msgid "End-User X.509 Browser Authentication"
msgstr ""

msgid "You can configure the location of this truststore by running the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --https-trust-store-file=/path/to/file"
msgstr ""

msgid "This trust store is targeted for authenticating clients where Keycloak is acting as a server. For configuring a trust store where Keycloak is acting as a client to external services through TLS, see link:{links_server_keycloak-truststore_url}[{links_server_keycloak-truststore_name}]."
msgstr ""

msgid "Setting the truststore password"
msgstr ""

msgid "You can set a secure password for your truststore using the `https-trust-store-password` option:"
msgstr ""

msgid "bin/kc.[sh|bat] start --https-trust-store-password=<value>"
msgstr ""

msgid "Securing credentials"
msgstr ""

msgid "Avoid setting a password in plaintext by using the CLI or adding it to `conf/keycloak.conf` file. Instead use good practices such as using a vault / mounted secret. For more detail, see link:{links_server_vault_url}[{links_server_vault_name}] and link:{links_server_configuration-production_url}[{links_server_configuration-production_name}]."
msgstr ""

msgid "Enabling mutual TLS"
msgstr ""

msgid "Authentication using mTLS is disabled by default. To enable mTLS certificate handling when Keycloak is the server and needs to validate certificates from requests made to Keycloaks endpoints, put the appropriate certificates in Keycloaks truststore and use the following command to enable mTLS:"
msgstr ""

msgid "bin/kc.[sh|bat] start --https-client-auth=<none|request|required>"
msgstr ""

msgid "Using the value `required` sets up Keycloak to always ask for certificates and fail if no certificate is provided in a request. By setting the value to `request`, Keycloak will also accept requests without a certificate and only validate the correctness of a certificate if it exists."
msgstr ""

msgid "Be aware that this is the basic certificate configuration for mTLS use cases where Keycloak acts as server. When Keycloak acts as client instead, e.g. when Keycloak tries to get a token from a token endpoint of a brokered identity provider that is secured by mTLS, you need to set up the HttpClient to provide the right certificates in the keystore for the outgoing request. To configure mTLS in these scenarios, see link:{links_server_outgoinghttp_url}[{links_server_outgoinghttp_name}]."
msgstr ""

msgid "Configuring distributed caches"
msgstr ""

msgid "Keycloak is designed for high availability and multi-node clustered setups. The current distributed cache implementation is built on top of https://infinispan.org[Infinispan], a high-performance, distributable in-memory data grid."
msgstr ""

msgid "Enable distributed caching"
msgstr ""

msgid "When you start Keycloak in production mode, by using the `start` command, caching is enabled and all Keycloak nodes in your network are discovered."
msgstr ""

msgid "By default, caches are using a `UDP` transport stack so that nodes are discovered using IP multicast transport based on UDP. For most production environments, there are better discovery alternatives to UDP available. Keycloak allows you to either choose from a set of pre-defined default transport stacks, or to define your own custom stack, as you will see later in this {section}."
msgstr ""

msgid "To explicitly enable distributed infinispan caching, enter this command:"
msgstr ""

msgid "bin/kc.[sh|bat] build --cache=ispn"
msgstr ""

msgid "When you start Keycloak in development mode, by using the `start-dev` command, Keycloak uses only local caches and distributed caches are completely disabled by implicitly setting the `--cache=local` option. The `local` cache mode is intended only for development and testing purposes."
msgstr ""

msgid "Configuring caches"
msgstr ""

msgid "Keycloak provides a cache configuration file with sensible defaults located at `conf/cache-ispn.xml`."
msgstr ""

msgid "The cache configuration is a regular https://infinispan.org/docs/stable/titles/configuring/configuring.html[Infinispan configuration file]."
msgstr ""

msgid "The following table gives an overview of the specific caches Keycloak uses. You configure these caches in `conf/cache-ispn.xml`:"
msgstr ""

msgid "Cache name"
msgstr ""

msgid "Cache Type"
msgstr ""

msgid "Description"
msgstr ""

msgid "realms"
msgstr ""

msgid "Local"
msgstr ""

msgid "Cache persisted realm data"
msgstr ""

msgid "users"
msgstr ""

msgid "Cache persisted user data"
msgstr ""

msgid "authorization"
msgstr ""

msgid "Cache persisted authorization data"
msgstr ""

msgid "keys"
msgstr ""

msgid "Cache external public keys"
msgstr ""

msgid "work"
msgstr ""

msgid "Replicated"
msgstr ""

msgid "Propagate invalidation messages across nodes"
msgstr ""

msgid "authenticationSessions"
msgstr ""

msgid "Distributed"
msgstr ""

msgid "Caches authentication sessions, created/destroyed/expired during the authentication process"
msgstr ""

msgid "sessions"
msgstr ""

msgid "Caches user sessions, created upon successful authentication and destroyed during logout, token revocation, or due to expiration"
msgstr ""

msgid "clientSessions"
msgstr ""

msgid "Caches client sessions, created upon successful authentication to a specific client and destroyed during logout, token revocation, or due to expiration"
msgstr ""

msgid "offlineSessions"
msgstr ""

msgid "Caches offline user sessions, created upon successful authentication and destroyed during logout, token revocation, or due to expiration"
msgstr ""

msgid "offlineClientSessions"
msgstr ""

msgid "loginFailures"
msgstr ""

msgid "keep track of failed logins, fraud detection"
msgstr ""

msgid "actionTokens"
msgstr ""

msgid "Caches action Tokens"
msgstr ""

msgid "Cache types and defaults"
msgstr ""

msgid "Local caches"
msgstr ""

msgid "Keycloak caches persistent data locally to avoid unnecessary round-trips to the database."
msgstr ""

msgid "The following data is kept local to each node in the cluster using local caches:"
msgstr ""

msgid "*realms* and related data like clients, roles, and groups."
msgstr ""

msgid "*users* and related data like granted roles and group memberships."
msgstr ""

msgid "*authorization* and related data like resources, permissions, and policies."
msgstr ""

msgid "*keys*"
msgstr ""

msgid "Local caches for realms, users, and authorization are configured to hold up to 10,000 entries per default. The local key cache can hold up to 1,000 entries per default and defaults to expire every one hour. Therefore, keys are forced to be periodically downloaded from external clients or identity providers."
msgstr ""

msgid "In order to achieve an optimal runtime and avoid additional round-trips to the database you should consider looking at the configuration for each cache to make sure the maximum number of entries is aligned with the size of your database. More entries you can cache, less often the server needs to fetch data from the database. You should evaluate the trade-offs between memory utilization and performance."
msgstr ""

msgid "Invalidation of local caches"
msgstr ""

msgid "Local caching improves performance, but adds a challenge in multi-node setups."
msgstr ""

msgid "When one Keycloak node updates data in the shared database, all other nodes need to be aware of it, so they invalidate that data from their caches."
msgstr ""

msgid "The `work` cache is a replicated cache and used for sending these invalidation messages. The entries/messages in this cache are very short-lived, and you should not expect this cache growing in size over time."
msgstr ""

msgid "Authentication sessions"
msgstr ""

msgid "Authentication sessions are created whenever a user tries to authenticate. They are automatically destroyed once the authentication process completes or due to reaching their expiration time."
msgstr ""

msgid "The `authenticationSessions` distributed cache is used to store authentication sessions and any other data associated with it during the authentication process."
msgstr ""

msgid "By relying on a distributable cache, authentication sessions are available to any node in the cluster so that users can be redirected to any node without losing their authentication state. However, production-ready deployments should always consider session affinity and favor redirecting users to the node where their sessions were initially created. By doing that, you are going to avoid unnecessary state transfer between nodes and improve CPU, memory, and network utilization."
msgstr ""

msgid "User sessions"
msgstr ""

msgid "Once the user is authenticated, a user session is created. The user session tracks your active users and their state so that they can seamlessly authenticate to any application without being asked for their credentials again. For each application, the user authenticates with a client session is created too, so that the server can track the applications the user is authenticated with and their state on a per-application basis."
msgstr ""

msgid "User and client sessions are automatically destroyed whenever the user performs a logout, the client performs a token revocation, or due to reaching their expiration time."
msgstr ""

msgid "The following caches are used to store both user and client sessions:"
msgstr ""

msgid "By relying on a distributable cache, user and client sessions are available to any node in the cluster so that users can be redirected to any node without loosing their state. However, production-ready deployments should always consider session affinity and favor redirecting users to the node where their sessions were initially created. By doing that, you are going to avoid unnecessary state transfer between nodes and improve CPU, memory, and network utilization."
msgstr ""

msgid "As an OpenID Connect Provider, the server is also capable of authenticating users and issuing offline tokens. Similarly to regular user and client sessions, when an offline token is issued by the server upon successful authentication, the server also creates a user and client sessions. However, due to the nature of offline tokens, offline sessions are handled differently as they are long-lived and should survive a complete cluster shutdown. Because of that, they are also persisted to the database."
msgstr ""

msgid "The following caches are used to store offline sessions:"
msgstr ""

msgid "Upon a cluster restart, offline sessions are lazily loaded from the database and kept in a shared cache using the two caches above."
msgstr ""

msgid "Password brute force detection"
msgstr ""

msgid "The `loginFailures` distributed cache is used to track data about failed login attempts. This cache is needed for the Brute Force Protection feature to work in a multi-node Keycloak setup."
msgstr ""

msgid "Action tokens"
msgstr ""

msgid "Action tokens are used for scenarios when a user needs to confirm an action asynchronously, for example in the emails sent by the forgot password flow. The `actionTokens` distributed cache is used to track metadata about action tokens."
msgstr ""

msgid "Configuring caches for availability"
msgstr ""

msgid "Distributed caches replicate cache entries on a subset of nodes in a cluster and assigns entries to fixed owner nodes."
msgstr ""

msgid "Each distributed cache has two owners per default, which means that two nodes have a copy of the specific cache entries. Non-owner nodes query the owners of a specific cache to obtain data. When both owner nodes are offline, all data is lost. This situation usually leads to users being logged out at the next request and having to log in again."
msgstr ""

msgid "The default number of owners is enough to survive 1 node (owner) failure in a cluster setup with at least three nodes. You are free to change the number of owners accordingly to better fit into your availability requirements. To change the number of owners, open `conf/cache-ispn.xml` and change the value for `owners=<value>` for the distributed caches to your desired value."
msgstr ""

msgid "Specify your own cache configuration file"
msgstr ""

msgid "To specify your own cache configuration file, enter this command:"
msgstr ""

msgid "bin/kc.[sh|bat] build --cache-config-file=my-cache-file.xml"
msgstr ""

msgid "The configuration file is relative to the `conf/` directory."
msgstr ""

msgid "Transport stacks"
msgstr ""

msgid "Transport stacks ensure that distributed cache nodes in a cluster communicate in a reliable fashion. Keycloak supports a wide range of transport stacks:"
msgstr ""

msgid "tcp"
msgstr ""

msgid "udp"
msgstr ""

msgid "kubernetes"
msgstr ""

msgid "ec2"
msgstr ""

msgid "azure"
msgstr ""

msgid "google"
msgstr ""

msgid "To apply a specific cache stack, enter this command:"
msgstr ""

msgid "bin/kc.[sh|bat] build --cache-stack=<stack>"
msgstr ""

msgid "The default stack is set to `UDP` when distributed caches are enabled."
msgstr ""

msgid "Available transport stacks"
msgstr ""

msgid "The following table shows transport stacks that are available without any further configuration than using the `--cache-stack` build option:"
msgstr ""

msgid "Stack name"
msgstr ""

msgid "Transport protocol"
msgstr ""

msgid "Discovery"
msgstr ""

msgid "TCP"
msgstr ""

msgid "MPING (uses UDP multicast)."
msgstr ""

msgid "UDP"
msgstr ""

msgid "UDP multicast"
msgstr ""

msgid "The following table shows transport stacks that are available using the `--cache-stack` build option and a minimum configuration:"
msgstr ""

msgid "DNS_PING (requires `-Djgroups.dns.query=<headless-service-FQDN>` to be added to JAVA_OPTS or JAVA_OPTS_APPEND environment variable)."
msgstr ""

msgid "Additional transport stacks"
msgstr ""

msgid "The following table shows transport stacks that are supported by Keycloak, but need some extra steps to work. Note that _none_  of these stacks are Kubernetes / OpenShift stacks, so no need exists to enable the \"google\" stack if you want to run Keycloak on top of the Google Kubernetes engine. In that case, use the `kubernetes` stack. Instead, when you have a distributed cache setup running on AWS EC2 instances, you would need to set the stack to `ec2`, because ec2 does not support a default discovery mechanism such as `UDP`."
msgstr ""

msgid "NATIVE_S3_PING"
msgstr ""

msgid "GOOGLE_PING2"
msgstr ""

msgid "AZURE_PING"
msgstr ""

msgid "Cloud vendor specific stacks have additional dependencies for Keycloak. For more information and links to repositories with these dependencies, see the https://infinispan.org/docs/dev/titles/embedding/embedding.html#jgroups-cloud-discovery-protocols_cluster-transport[Infinispan documentation]."
msgstr ""

msgid "To provide the dependencies to Keycloak, put the respective JAR in the `providers` directory and `build` Keycloak by entering this command:"
msgstr ""

msgid "bin/kc.[sh|bat] build --cache-stack=<ec2|google|azure>"
msgstr ""

msgid "Custom transport stacks"
msgstr ""

msgid "If none of the available transport stacks are enough for your deployment, you are able to change your cache configuration file and define your own transport stack."
msgstr ""

msgid "For more details, see https://infinispan.org/docs/stable/titles/server/server.html#using-inline-jgroups-stacks_cluster-transport[Using inline JGroups stacks]."
msgstr ""

msgid "defining a custom transport stack"
msgstr ""

msgid ""
"<jgroups>\n"
"    <stack name=\"my-encrypt-udp\" extends=\"udp\">\n"
"    <SSL_KEY_EXCHANGE keystore_name=\"server.jks\"\n"
"        keystore_password=\"password\"\n"
"        stack.combine=\"INSERT_AFTER\"\n"
"        stack.position=\"VERIFY_SUSPECT\"/>\n"
"        <ASYM_ENCRYPT asym_keylength=\"2048\"\n"
"        asym_algorithm=\"RSA\"\n"
"        change_key_on_coord_leave = \"false\"\n"
"        change_key_on_leave = \"false\"\n"
"        use_external_key_exchange = \"true\"\n"
"        stack.combine=\"INSERT_BEFORE\"\n"
"        stack.position=\"pbcast.NAKACK2\"/>\n"
"    </stack>\n"
"</jgroups>\n"
"\n"
"<cache-container name=\"keycloak\">\n"
"    <transport lock-timeout=\"60000\" stack=\"my-encrypt-udp\"/>\n"
"    ...\n"
"</cache-container>"
msgstr ""

msgid "By default, the value set to the `cache-stack` option has precedence over the transport stack you define in the cache configuration file. If you are defining a custom stack, make sure the `cache-stack` option is not used for the custom changes to take effect."
msgstr ""

msgid "Securing cache communication"
msgstr ""

msgid "The current Infinispan cache implementation should be secured by various security measures such as RBAC, ACLs, and Transport stack encryption. For more information about securing cache communication, see the https://infinispan.org/docs/dev/titles/security/security.html#[Infinispan security guide]."
msgstr ""

msgid "Exposing metrics from caches"
msgstr ""

msgid "By default, metrics from caches are not automatically exposed when the metrics are enabled. For more details about how to enable metrics, see link:{links_server_configuration-metrics_url}[{links_server_configuration-metrics_name}]."
msgstr ""

msgid "To enable global metrics for all caches within the `cache-container`, you need to change your cache configuration file (e.g.: `conf/cache-ispn.xml`) to enable `statistics` at the `cache-container` level as follows:"
msgstr ""

msgid "enabling metrics for all caches"
msgstr ""

msgid ""
"<cache-container name=\"keycloak\" statistics=\"true\">\n"
"    ...\n"
"</cache-container>"
msgstr ""

msgid "Similarly, you can enable metrics individually for each cache by enabling `statistics` as follows:"
msgstr ""

msgid "enabling metrics for a specific cache"
msgstr ""

msgid ""
"<local-cache name=\"realms\" statistics=\"true\">\n"
"    ...\n"
"</local-cache>"
msgstr ""

msgid "Configuring logging"
msgstr ""

msgid "Keycloak uses the JBoss Logging framework. The following is a high-level overview for the available log handlers:"
msgstr ""

msgid "root"
msgstr ""

msgid "console (_default_)"
msgstr ""

msgid "GELF"
msgstr ""

msgid "Logging configuration"
msgstr ""

msgid "Logging is done on a per-category basis in Keycloak. You can configure logging for the root log level or for more specific categories such as `org.hibernate` or `org.keycloak`. This {section} describes how to configure logging."
msgstr ""

msgid "Log levels"
msgstr ""

msgid "The following table defines the available log levels."
msgstr ""

msgid "Level"
msgstr ""

msgid "FATAL"
msgstr ""

msgid "Critical failures with complete inability to serve any kind of request."
msgstr ""

msgid "ERROR"
msgstr ""

msgid "A significant error or problem leading to the inability to process requests."
msgstr ""

msgid "WARN"
msgstr ""

msgid "A non-critical error or problem that might not require immediate correction."
msgstr ""

msgid "INFO"
msgstr ""

msgid "Keycloak lifecycle events or important information. Low frequency."
msgstr ""

msgid "DEBUG"
msgstr ""

msgid "More detailed information for debugging purposes, such as database logs. Higher frequency."
msgstr ""

msgid "TRACE"
msgstr ""

msgid "Most detailed debugging information. Very high frequency."
msgstr ""

msgid "ALL"
msgstr ""

msgid "Special level for all log messages."
msgstr ""

msgid "OFF"
msgstr ""

msgid "Special level to turn logging off entirely (not recommended)."
msgstr ""

msgid "Configuring the root log level"
msgstr ""

msgid "When no log level configuration exists for a more specific category logger, the enclosing category is used instead. When there is no enclosing category, the root logger level is used."
msgstr ""

msgid "To set the root log level, enter the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log-level=<root-level>"
msgstr ""

msgid "Use these guidelines for this command:"
msgstr ""

msgid "For `_<root-level>_`, supply a level defined in the preceding table."
msgstr ""

msgid "The log level is case-insensitive. For example, you could either use `DEBUG` or `debug`."
msgstr ""

msgid "If you were to accidentally set the log level twice, the last occurrence in the list becomes the log level. For example, if you included the syntax `--log-level=\"info,...,DEBUG,...\"`, the root logger would be `DEBUG`."
msgstr ""

msgid "Configuring category-specific log levels"
msgstr ""

msgid "You can set different log levels for specific areas in Keycloak. Use this command to provide a comma-separated list of categories for which you want a different log level:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log-level=\"<root-level>,<org.category1>:<org.category1-level>\""
msgstr ""

msgid "A configuration that applies to a category also applies to its sub-categories unless you include a more specific matching sub-category."
msgstr ""

msgid "Example"
msgstr ""

msgid "bin/kc.[sh|bat] start --log-level=\"INFO,org.hibernate:debug,org.hibernate.hql.internal.ast:info\""
msgstr ""

msgid "This example sets the following log levels:"
msgstr ""

msgid "Root log level for all loggers is set to INFO."
msgstr ""

msgid "The hibernate log level in general is set to debug."
msgstr ""

msgid "To keep SQL abstract syntax trees from creating verbose log output, the specific subcategory `org.hibernate.hql.internal.ast` is set to info. As a result, the SQL abstract syntax trees are omitted instead of appearing at the `debug` level."
msgstr ""

msgid "Enabling log handlers"
msgstr ""

msgid "To enable log handlers, enter the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log=\"<handler1>,<handler2>\""
msgstr ""

msgid "The available handlers are `console`, `file` and `gelf`. The more specific handler configuration mentioned below will only take effect when the handler is added to this comma-separated list."
msgstr ""

msgid "Console log handler"
msgstr ""

msgid "The console log handler is enabled by default, providing unstructured log messages for the console."
msgstr ""

msgid "Configuring the console log format"
msgstr ""

msgid "Keycloak uses a pattern-based logging formatter that generates human-readable text logs by default."
msgstr ""

msgid "The logging format template for these lines can be applied at the root level. The default format template is:"
msgstr ""

msgid "`%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n`"
msgstr ""

msgid "The format string supports the symbols in the following table:"
msgstr ""

msgid "Symbol"
msgstr ""

msgid "Summary"
msgstr ""

msgid "%%"
msgstr ""

msgid "%"
msgstr ""

msgid "Renders a simple % character."
msgstr ""

msgid "%c"
msgstr ""

msgid "Category"
msgstr ""

msgid "Renders the log category name."
msgstr ""

msgid "++%d{xxx}++"
msgstr ""

msgid "Date"
msgstr ""

msgid "Renders a date with the given date format string.String syntax defined by `java.text.SimpleDateFormat`"
msgstr ""

msgid "%e"
msgstr ""

msgid "Exception"
msgstr ""

msgid "Renders a thrown exception."
msgstr ""

msgid "%h"
msgstr ""

msgid "Renders the simple host name."
msgstr ""

msgid "%H"
msgstr ""

msgid "Qualified host name"
msgstr ""

msgid "Renders the fully qualified hostname, which may be the same as the simple host name, depending on the OS configuration."
msgstr ""

msgid "%i"
msgstr ""

msgid "Process ID"
msgstr ""

msgid "Renders the current process PID."
msgstr ""

msgid "%m"
msgstr ""

msgid "Full Message"
msgstr ""

msgid "Renders the log message and an exception, if thrown."
msgstr ""

msgid "%n"
msgstr ""

msgid "Newline"
msgstr ""

msgid "Renders the platform-specific line separator string."
msgstr ""

msgid "%N"
msgstr ""

msgid "Process name"
msgstr ""

msgid "Renders the name of the current process."
msgstr ""

msgid "%p"
msgstr ""

msgid "Renders the log level of the message."
msgstr ""

msgid "%r"
msgstr ""

msgid "Relative time"
msgstr ""

msgid "Render the time in milliseconds since the start of the application log."
msgstr ""

msgid "%s"
msgstr ""

msgid "Simple message"
msgstr ""

msgid "Renders only the log message without exception trace."
msgstr ""

msgid "%t"
msgstr ""

msgid "Thread name"
msgstr ""

msgid "Renders the thread name."
msgstr ""

msgid "%t++{id}++"
msgstr ""

msgid "Thread ID"
msgstr ""

msgid "Render the thread ID."
msgstr ""

msgid "%z{<zone name>}"
msgstr ""

msgid "Timezone"
msgstr ""

msgid "Set the time zone of log output to <zone name>."
msgstr ""

msgid "%L"
msgstr ""

msgid "Line number"
msgstr ""

msgid "Render the line number of the log message."
msgstr ""

msgid "Setting the logging format"
msgstr ""

msgid "To set the logging format for a logged line, perform these steps:"
msgstr ""

msgid "Build your desired format template using the preceding table."
msgstr ""

msgid "Enter the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log-console-format=\"'<format>'\""
msgstr ""

msgid "Note that you need to escape characters when invoking commands containing special shell characters such as `;` using the CLI. Therefore, consider setting it in the configuration file instead."
msgstr ""

msgid "Example: Abbreviate the fully qualified category name"
msgstr ""

msgid "bin/kc.[sh|bat] start --log-console-format=\"'%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c{3.}] (%t) %s%e%n'\""
msgstr ""

msgid "This example abbreviates the category name to three characters by setting `[%c{3.}]` in the template instead of the default `[%c]`."
msgstr ""

msgid "Configuring JSON or plain console logging"
msgstr ""

msgid "By default, the console log handler logs plain unstructured data to the console. To use structured JSON log output instead, enter the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log-console-output=json"
msgstr ""

msgid "Example Log Message"
msgstr ""

msgid "{\"timestamp\":\"2022-02-25T10:31:32.452+01:00\",\"sequence\":8442,\"loggerClassName\":\"org.jboss.logging.Logger\",\"loggerName\":\"io.quarkus\",\"level\":\"INFO\",\"message\":\"Keycloak 18.0.0-SNAPSHOT on JVM (powered by Quarkus 2.7.2.Final) started in 3.253s. Listening on: http://0.0.0.0:8080\",\"threadName\":\"main\",\"threadId\":1,\"mdc\":{},\"ndc\":\"\",\"hostName\":\"host-name\",\"processName\":\"QuarkusEntryPoint\",\"processId\":36946}"
msgstr ""

msgid "When using JSON output, colors are disabled and the format settings set by `--log-console-format` will not apply."
msgstr ""

msgid "To use unstructured logging, enter the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log-console-output=default"
msgstr ""

msgid "Example Log Message:"
msgstr ""

msgid "2022-03-02 10:36:50,603 INFO  [io.quarkus] (main) Keycloak 18.0.0-SNAPSHOT on JVM (powered by Quarkus 2.7.2.Final) started in 3.615s. Listening on: http://0.0.0.0:8080"
msgstr ""

msgid "Colors"
msgstr ""

msgid "Colored console log output for unstructured logs is disabled by default. Colors may improve readability, but they can cause problems when shipping logs to external log aggregation systems. To enable or disable color-coded console log output, enter following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log-console-color=<false|true>"
msgstr ""

msgid "File logging"
msgstr ""

msgid "As an alternative to logging to the console, you can use unstructured logging to a file."
msgstr ""

msgid "Enable file logging"
msgstr ""

msgid "Logging to a file is disabled by default. To enable it, enter the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log=\"console,file\""
msgstr ""

msgid "A log file named `keycloak.log` is created inside the `data/log` directory of your Keycloak installation."
msgstr ""

msgid "Configuring the location and name of the log file"
msgstr ""

msgid "To change where the log file is created and the file name, perform these steps:"
msgstr ""

msgid "Create a writable directory to store the log file."
msgstr ""

msgid "If the directory is not writable, Keycloak will start correctly, but it will issue an error and no log file will be created."
msgstr ""

msgid "Enter this command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log=\"console,file\" --log-file=<path-to>/<your-file.log>"
msgstr ""

msgid "Configuring the file handler format"
msgstr ""

msgid "To configure a different logging format for the file log handler, enter the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log-file-format=\"<pattern>\""
msgstr ""

msgid "See <<Configuring the console log format>> for more information and a table of the available pattern configuration."
msgstr ""

msgid "Centralized logging using GELF"
msgstr ""

msgid "Keycloak can send logs to a centralized log management system such as the following:"
msgstr ""

msgid "Graylog"
msgstr ""

msgid "Logstash, inside the Elasticsearch, Logstash, Kibana (ELK) logging stack"
msgstr ""

msgid "Fluentd, inside the Elasticsearch, Fluentd, Kibana (EFK) logging stack"
msgstr ""

msgid "Keycloak uses the https://quarkus.io/guides/centralized-log-management[Quarkus Logging GELF] extension to support these environments."
msgstr ""

msgid "Enabling the GELF handler"
msgstr ""

msgid "To enable logging using GELF, add it to the list of activated log handlers."
msgstr ""

msgid "Example:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log=\"console,gelf\""
msgstr ""

msgid "Configuring the GELF handler"
msgstr ""

msgid "To configure the Host and Port of your centralized logging system, enter the following command and substitute the values with your specific values: .Host and port of the GELF server:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log=\"console,gelf\" --log-gelf-host=myhost --log-gelf-port=12345"
msgstr ""

msgid "When the GELF handler is enabled, the host is using `localhost` as host value and UDP for communication. To use TCP instead of UDP, prefix the host value with `tcp:`. The Default port is `12201`."
msgstr ""

msgid "Include or exclude Stacktraces"
msgstr ""

msgid "Keycloak includes the complete Stacktrace inside the `StackTrace` field. To exclude this field, enter the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log=\"console,gelf\" --log-gelf-include-stack-trace=false"
msgstr ""

msgid "Configure the timestamp format"
msgstr ""

msgid "You can change the format of the `timestamp` field. For example, you can include the date and time down to seconds by entering the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log=\"console,gelf\" --log-gelf-timestamp-format=\"'yyyy-MM-dd HH:mm:ss'\""
msgstr ""

msgid "Alternatively, you could use the config file to avoid escaping:"
msgstr ""

msgid "log-gelf-timestamp-format=yyyy-MM-dd HH:mm:ss"
msgstr ""

msgid "The default timestamp format is `yyyy-MM-dd HH:mm:ss,SSS`. You can use the https://docs.oracle.com/javase/10/docs/api/java/text/SimpleDateFormat.html[available SimpleDateFormat patterns] to define an appropriate timestamp."
msgstr ""

msgid "Configure the facility"
msgstr ""

msgid "The `facility` field is an indicator of the process or program that is the source of log messages. The default value is `keycloak`. To set this field to your preferred identifier, enter the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log=\"console,gelf\" --log-gelf-facility=MyKeycloak"
msgstr ""

msgid "To use the CLI to configure Keycloak and use whitespaces for `facility`, enter the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log=\"console,gelf\" --log-gelf-facility=\"'my keycloak'\""
msgstr ""

msgid "log-gelf-facility=my keycloak"
msgstr ""

msgid "Configure the default message size"
msgstr ""

msgid "To change the default message size of 8kb (8192 bytes) of GELF log messages for Keycloak, enter the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log=\"console,gelf\" --log-gelf-max-message-size=16384"
msgstr ""

msgid "The maximum size of one GELF log message is set in Bytes. The preceding example increases the size to 16kb. When messages exceed the maximum size, GELF submits the message in multiple chunks."
msgstr ""

msgid "Configure sending of message parameters"
msgstr ""

msgid "Keycloak includes message parameters of the occurred log event. These fields appear in the output as `MessageParam0`, `MessageParam1`, and so on, depending on the parameter length. To switch off this behavior, enter the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log=\"console,gelf\" --log-gelf-include-message-parameters=false"
msgstr ""

msgid "Configure sending of source code location"
msgstr ""

msgid "Keycloak includes the `SourceClassName`, `SourceMethodName` and `SourceSimpleClassName` fields in the GELF log messages. These fields provide detail on the location of an exception that occurred. To stop sending these fields, enter the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log=\"console,gelf\" --log-gelf-include-location=false"
msgstr ""

msgid "Example: Send logs to Graylog"
msgstr ""

msgid "The following example shows how to send Keycloak logs to the Graylog centralized logging stack. This example assumes you have a container tool such as https://www.docker.com/[docker] installed to start the `compose.yml`."
msgstr ""

msgid "Starting the Graylog stack"
msgstr ""

msgid "The composed stack consists of:"
msgstr ""

msgid "ElasticSearch"
msgstr ""

msgid "MongoDB"
msgstr ""

msgid ""
"version: '3.8'\n"
"\n"
"services:\n"
"  elasticsearch:\n"
"    image: docker.io/elastic/elasticsearch:7.10.2\n"
"    ports:\n"
"      - \"9200:9200\"\n"
"    environment:\n"
"      ES_JAVA_OPTS: \"-Xms512m -Xmx512m\"\n"
"      discovery.type: \"single-node\"\n"
"    networks:\n"
"      - graylog\n"
"\n"
"  mongo:\n"
"    image: mongo:4.4\n"
"    networks:\n"
"      - graylog\n"
"\n"
"  graylog:\n"
"    image: graylog/graylog:4.3.3\n"
"    ports:\n"
"      - \"9000:9000\"\n"
"      - \"12201:12201/udp\"\n"
"      - \"1514:1514\"\n"
"    environment:\n"
"      GRAYLOG_HTTP_EXTERNAL_URI: \"http://127.0.0.1:9000/\"\n"
"      # CHANGE ME (must be at least 16 characters)!\n"
"      GRAYLOG_PASSWORD_SECRET: \"forpasswordencryption\"\n"
"      # Password: admin\n"
"      GRAYLOG_ROOT_PASSWORD_SHA2: \"8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918\"\n"
"    networks:\n"
"      - graylog\n"
"    depends_on:\n"
"      - elasticsearch\n"
"      - mongo\n"
"\n"
"networks:\n"
"  graylog:\n"
"    driver: bridge"
msgstr ""

msgid "Copy and save the example locally into a `compose.yml` file and enter this command:"
msgstr ""

msgid "docker compose up -d"
msgstr ""

msgid "After a few seconds, the Stack is ready to serve requests."
msgstr ""

msgid "Creating a Graylog UDP Input"
msgstr ""

msgid "Once the stack is running, you need to create a UDP Input Graylog listens to. You can create it from the Graylog web UI (System → Input → Select GELF UDP) available at http://localhost:9000 or using the API:"
msgstr ""

msgid "This `curl` example creates a new GELF UDP Input using the API and the default Graylog login credentials (admin/admin)."
msgstr ""

msgid ""
"curl -H \"Content-Type: application/json\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H \"X-Requested-By: curl\" -X POST -v -d \\\n"
"'{\"title\":\"udp input\",\"configuration\":{\"recv_buffer_size\":262144,\"bind_address\":\"0.0.0.0\",\"port\":12201,\"decompress_size_limit\":8388608},\"type\":\"org.graylog2.inputs.gelf.udp.GELFUDPInput\",\"global\":true}' \\\n"
"http://localhost:9000/api/system/inputs"
msgstr ""

msgid "If the stack is still in the bootstrap phase, you receive a response containing `* Empty reply from server`. A successful response includes `HTTP/1.1 201 Created` to indicate that the UDP input is created."
msgstr ""

msgid "Configure Keycloak to send logs using GELF"
msgstr ""

msgid "Keycloak needs to be configured to send logs using GELF. The appropriate configuration can be seen in the following keycloak.conf example. The example includes the `log-gelf-host` and `log-gelf-port` values. These are optional values that are included for illustration purposes; default values exist."
msgstr ""

msgid "Keycloak GELF Configuration"
msgstr ""

msgid ""
"log=console,gelf\n"
"log-gelf-host=localhost\n"
"log-gelf-port=12201"
msgstr ""

msgid "Graylog: See the results"
msgstr ""

msgid "Open your web browser, go to `http://localhost:9000`."
msgstr ""

msgid "Log in to the Graylog web UI using the administrator credentials (admin/admin)."
msgstr ""

msgid "Go to Streams, All Messages."
msgstr ""

msgid "Start updating the stream by pressing the Play button in the upper right corner."
msgstr ""

msgid "Start Keycloak using `start` or `start-dev` and your GELF config."
msgstr ""

msgid "After a few seconds, Keycloak messages appear in the Graylog dashboard."
msgstr ""

msgid "Example Setup using the ELK Stack"
msgstr ""

msgid "The following example shows how to send Keycloak logs to the ELK centralized logging stack. It assumes you have a container tool such as https://www.docker.com/[docker] installed to start the `compose.yml`."
msgstr ""

msgid "Enable the logstash GELF plugin and create a pipeline"
msgstr ""

msgid "Logstash uses an input plugin that understands and parses the GELF format. To activate this plugin when you are starting the ELK stack later on, create a directory `pipelines` and a file `gelf.conf` located in this directory. Then create an empty `compose.yml` in the parent directory."
msgstr ""

msgid "File Structure:"
msgstr ""

msgid ""
"/ELK\n"
"  - compose.yml\n"
"  - pipelines/\n"
"    - gelf.conf"
msgstr ""

msgid "Add the following contents to `pipelines/gelf.conf` and save it:"
msgstr ""

msgid ""
"input {\n"
"  gelf {\n"
"    port => 12201\n"
"  }\n"
"}\n"
"output {\n"
"  stdout {}\n"
"  elasticsearch {\n"
"    hosts => [\"http://elasticsearch:9200\"]\n"
"  }\n"
"}"
msgstr ""

msgid "This file activates and configures the logstash GELF plugin and points it to the right elasticsearch instance."
msgstr ""

msgid "Starting the ELK stack"
msgstr ""

msgid "Logstash"
msgstr ""

msgid "Kibana"
msgstr ""

msgid "Copy the following content to your `compose.yml` file:"
msgstr ""

msgid ""
"# Launch Elasticsearch\n"
"version: '3.8'\n"
"\n"
"services:\n"
"  elasticsearch:\n"
"    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.2\n"
"    ports:\n"
"      - \"9200:9200\"\n"
"      - \"9300:9300\"\n"
"    environment:\n"
"      ES_JAVA_OPTS: \"-Xms512m -Xmx512m\"\n"
"    networks:\n"
"      - elk\n"
"\n"
"  logstash:\n"
"    image: docker.elastic.co/logstash/logstash-oss:6.8.2\n"
"    volumes:\n"
"      - source: ./pipelines #the source dir gelf.conf resides\n"
"        target: /usr/share/logstash/pipeline\n"
"        type: bind\n"
"    ports:\n"
"      - \"12201:12201/udp\"\n"
"      - \"5000:5000\"\n"
"      - \"9600:9600\"\n"
"    networks:\n"
"      - elk\n"
"    depends_on:\n"
"      - elasticsearch\n"
"\n"
"  kibana:\n"
"    image: docker.elastic.co/kibana/kibana-oss:6.8.2\n"
"    ports:\n"
"      - \"5601:5601\"\n"
"    networks:\n"
"      - elk\n"
"    depends_on:\n"
"      - elasticsearch\n"
"\n"
"networks:\n"
"  elk:\n"
"    driver: bridge"
msgstr ""

msgid "Start the stack by entering the following command:"
msgstr ""

msgid "After a few seconds the Stack should be ready to serve requests."
msgstr ""

msgid "Configuring Keycloak to send logs using GELF"
msgstr ""

msgid "Keycloak needs to be configured to send logs using GELF. The appropriate configuration can be seen in the following keycloak.conf example. This example includes the `log-gelf-host` and `log-gelf-port` values. These are optional values, which are included for illustration purposes; default values exist."
msgstr ""

msgid "Keycloak Gelf Configuration"
msgstr ""

msgid "With this configuration applied, start keycloak using `start-dev` or `start`."
msgstr ""

msgid "Kibana: See the results"
msgstr ""

msgid "Open http://localhost:5601 to reach the Kibana dashboard. The exact configuration of a good monitoring dashboard is out of scope for this guide. To find out if logs sent by Keycloak are delivered to Kibana, open the http://localhost:5601/app/kibana#/dev_tools/console?_g=()[Dev Tools] and execute the default `match_all` query. The logs should appear in the result field."
msgstr ""

msgid "Configure a different log level for the GELF logger"
msgstr ""

msgid "To keep log storage costs and verbosity low, it is often wanted to only store a subset of the verbose application logs inside a centralized log management system. To configure Keycloak to use a different log level for the logs you want to ingest, use the following configuration:"
msgstr ""

msgid ""
"log=console,gelf\n"
"log-gelf-level=<desired-log-level>\n"
"..."
msgstr ""

msgid "To only see occurred log levels of warn and above in your centralized logging stack, but still see INFO level logs on the applications console logs, use the following configuration:"
msgstr ""

msgid ""
"log=console,gelf\n"
"log-level=INFO\n"
"log-gelf-level=warn\n"
"..."
msgstr ""

msgid "Looking at your ingested logs, you will see only messages of level warn or above will appear."
msgstr ""

msgid "Keep in mind that `--log-level` is setting the leading log level, so for example when you invoke the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --log=\"console,gelf\" --log-level=error --log-gelf-level=info"
msgstr ""

msgid "nothing below the error level will be sent to your logging stack. That means that even GELF in this example will receive only error level log messages."
msgstr ""

msgid "Configure additional key values"
msgstr ""

msgid "Currently, the Keycloak configuration does not support partly dynamic configuration keys, as they are used in quarkus properties. For example, they are used when defining `quarkus.log.handler.gelf.additional-field.<my-name>.value`."
msgstr ""

msgid "To add user-defined fields, you can provide these fields through a quarkus.properties file. See link:{links_server_configuration_url}[{links_server_configuration_name}] and the _Using raw Quarkus properties_ section."
msgstr ""

msgid "Configuring outgoing HTTP requests"
msgstr ""

msgid "Keycloak often needs to make requests to the applications and services that it secures. Keycloak manages these outgoing connections using an HTTP client. This guide shows how to configure the client, connection pool, proxy environment settings, timeouts, and more."
msgstr ""

msgid "Client Configuration Command"
msgstr ""

msgid "The HTTP client that Keycloak uses for outgoing communication is highly configurable. To configure the Keycloak outgoing HTTP client, enter this command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --spi-connections-http-client-default-<configurationoption>=<value>"
msgstr ""

msgid "The following are the command options:"
msgstr ""

msgid "*establish-connection-timeout-millis*"
msgstr ""

msgid "Maximum time in milliseconds until establishing a connection times out. Default: Not set."
msgstr ""

msgid "*socket-timeout-millis*"
msgstr ""

msgid "Maximum time of inactivity between two data packets until a socket connection times out, in milliseconds. Default: 5000ms"
msgstr ""

msgid "*connection-pool-size*"
msgstr ""

msgid "Size of the connection pool for outgoing connections. Default: 128."
msgstr ""

msgid "*max-pooled-per-route*"
msgstr ""

msgid "How many connections can be pooled per host. Default: 64."
msgstr ""

msgid "*connection-ttl-millis*"
msgstr ""

msgid "Maximum connection time to live in milliseconds. Default: Not set."
msgstr ""

msgid "*max-connection-idle-time-millis*"
msgstr ""

msgid "Maximum time an idle connection stays in the connection pool, in milliseconds. Idle connections will be removed from the pool by a background cleaner thread. Set this option to -1 to disable this check. Default: 900000."
msgstr ""

msgid "*disable-cookies*"
msgstr ""

msgid "Enable or disable caching of cookies. Default: true."
msgstr ""

msgid "*client-keystore*"
msgstr ""

msgid "File path to a Java keystore file. This keystore contains client certificates for two-way SSL."
msgstr ""

msgid "*client-keystore-password*"
msgstr ""

msgid "Password for the client keystore. REQUIRED, when `client-keystore` is set."
msgstr ""

msgid "*client-key-password*"
msgstr ""

msgid "Password for the private key of the client. REQUIRED, when client-keystore is set."
msgstr ""

msgid "*proxy-mappings*"
msgstr ""

msgid "Specify proxy configurations for outgoing HTTP requests. For more details, see <<Proxy mappings for outgoing HTTP requests>>."
msgstr ""

msgid "*disable-trust-manager*"
msgstr ""

msgid "If an outgoing request requires HTTPS and this configuration option is set to true, you do not have to specify a truststore. This setting should be used only during development and *never in production* because it will disable verification of SSL certificates. Default: false."
msgstr ""

msgid "Proxy mappings for outgoing HTTP requests"
msgstr ""

msgid "To configure outgoing requests to use a proxy, you can use the following standard proxy environment variables to configure the proxy mappings: `HTTP_PROXY`, `HTTPS_PROXY`, and `NO_PROXY`."
msgstr ""

msgid "The `HTTP_PROXY` and `HTTPS_PROXY` variables represent the proxy server that is used for outgoing HTTP requests. Keycloak does not differentiate between the two variables. If you define both variables, `HTTPS_PROXY` takes precedence regardless of the actual scheme that the proxy server uses."
msgstr ""

msgid "The `NO_PROXY` variable defines a comma separated list of hostnames that should not use the proxy. For each hostname that you specify, all its subdomains are also excluded from using proxy."
msgstr ""

msgid "The environment variables can be lowercase or uppercase. Lowercase takes precedence. For example, if you define both `HTTP_PROXY` and `http_proxy`, `http_proxy` is used."
msgstr ""

msgid "Example of proxy mappings and environment variables"
msgstr ""

msgid ""
"HTTPS_PROXY=https://www-proxy.acme.com:8080\n"
"NO_PROXY=google.com,login.facebook.com"
msgstr ""

msgid "In this example, the following results occur:"
msgstr ""

msgid "All outgoing requests use the proxy `https://www-proxy.acme.com:8080` except for requests to google.com or any subdomain of google.com, such as auth.google.com."
msgstr ""

msgid "login.facebook.com and all its subdomains do not use the defined proxy, but groups.facebook.com uses the proxy because it is not a subdomain of login.facebook.com."
msgstr ""

msgid "Proxy mappings using regular expressions"
msgstr ""

msgid "An alternative to using environment variables for proxy mappings is to configure a comma-delimited list of proxy-mappings for outgoing requests sent by Keycloak. A proxy-mapping consists of a regex-based hostname pattern and a proxy-uri, using the format `hostname-pattern;proxy-uri`."
msgstr ""

msgid "For example, consider the following regex:"
msgstr ""

msgid ".*\\.(google|googleapis)\\.com"
msgstr ""

msgid "You apply a regex-based hostname pattern by entering this command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --spi-connections-http-client-default-proxy-mappings=\"'*\\\\\\.(google|googleapis)\\\\\\.com;http://www-proxy.acme.com:8080'\""
msgstr ""

msgid "To determine the proxy for the outgoing HTTP request, the following occurs:"
msgstr ""

msgid "The target hostname is matched against all configured hostname patterns."
msgstr ""

msgid "The proxy-uri of the first matching pattern is used."
msgstr ""

msgid "If no configured pattern matches the hostname, no proxy is used."
msgstr ""

msgid "When your proxy server requires authentication, include the credentials of the proxy user in the format `username:password@`. For example:"
msgstr ""

msgid ".*\\.(google|googleapis)\\.com;http://proxyuser:password@www-proxy.acme.com:8080"
msgstr ""

msgid "Example of regular expressions for proxy-mapping:"
msgstr ""

msgid ""
"# All requests to Google APIs use http://www-proxy.acme.com:8080 as proxy\n"
".*\\.(google|googleapis)\\.com;http://www-proxy.acme.com:8080\n"
"\n"
"# All requests to internal systems use no proxy\n"
".*\\.acme\\.com;NO_PROXY\n"
"\n"
"# All other requests use http://fallback:8080 as proxy\n"
".*;http://fallback:8080"
msgstr ""

msgid "In this example, the following occurs:"
msgstr ""

msgid "The special value NO_PROXY for the proxy-uri is used, which means that no proxy is used for hosts matching the associated hostname pattern."
msgstr ""

msgid "A catch-all pattern ends the proxy-mappings, providing a default proxy for all outgoing requests."
msgstr ""

msgid "Configuring trusted certificates for TLS connections"
msgstr ""

msgid "See link:{links_server_keycloak-truststore_url}[{links_server_keycloak-truststore_name}] for how to configure a Keycloak Truststore so that Keycloak is able to perform outgoing requests using TLS."
msgstr ""

msgid "Configuring providers"
msgstr ""

msgid "The server is built with extensibility in mind and for that it provides a number of Service Provider Interfaces or SPIs, each one responsible for providing a specific capability to the server. In this {section}, you are going to understand the core concepts around the configuration of SPIs and their respective providers."
msgstr ""

msgid "After reading this guide, you should be able to use the concepts and the steps herein explained to install, uninstall, enable, disable, and configure any provider, including those you have implemented to extend the server capabilities in order to better fulfill your requirements."
msgstr ""

msgid "Configuration option format"
msgstr ""

msgid "Providers can be configured by using a specific configuration format. The format consists of:"
msgstr ""

msgid "spi-<spi-id>-<provider-id>-<property>=<value>"
msgstr ""

msgid "The `<spi-id>` is the name of the SPI you want to configure."
msgstr ""

msgid "The `<provider-id>` is the id of the provider you want to configure. This is the id set to the corresponding provider factory implementation."
msgstr ""

msgid "The `<property>` is the actual name of the property you want to set for a given provider."
msgstr ""

msgid "All those names (for spi, provider, and property) should be in lower case and if the name is in camel-case such as `myKeycloakProvider`, it should include dashes (`-`) before upper-case letters as follows: `my-keycloak-provider`."
msgstr ""

msgid "Taking the `HttpClientSpi` SPI as an example, the name of the SPI is `connectionsHttpClient` and one of the provider implementations available is named `default`. In order to set the `connectionPoolSize` property you would use a configuration option as follows:"
msgstr ""

msgid "spi-connections-http-client-default-connection-pool-size=10"
msgstr ""

msgid "Setting a provider configuration option"
msgstr ""

msgid "Provider configuration options are provided when starting the server, as shown in the following example:"
msgstr ""

msgid "Setting the `connection-pool-size` for the `default` provider of the `connections-http-client` SPI"
msgstr ""

msgid "bin/kc.[sh|bat] start --spi-connections-http-client-default-connection-pool-size=10"
msgstr ""

msgid "Configuring a default provider"
msgstr ""

msgid "Depending on the SPI, multiple provider implementations can co-exist but only one of them is going to be used at runtime. For these SPIs, a default provider is the primary implementation that is going to be active and used at runtime."
msgstr ""

msgid "To configure a provider as the default you should run the `build` command as follows:"
msgstr ""

msgid "Marking the `mycustomprovider` provider as the default provider for the `email-template` SPI"
msgstr ""

msgid "bin/kc.[sh|bat] build --spi-email-template-provider=mycustomprovider"
msgstr ""

msgid "In the example above, we are using the `provider` property to set the id of the provider we want to mark as the default."
msgstr ""

msgid "Enabling and disabling a provider"
msgstr ""

msgid "To enable or disable a provider you should run the `build` command as follows:"
msgstr ""

msgid "Enabling a provider"
msgstr ""

msgid "bin/kc.[sh|bat] build --spi-email-template-mycustomprovider-enabled=true"
msgstr ""

msgid "To disable a provider, use the same command and set the `enabled` property to `false`."
msgstr ""

msgid "Installing and uninstalling a provider"
msgstr ""

msgid "Custom providers should be packaged in a Java Archive (JAR) file and copied to the `providers` directory of the distribution. After that, you must run the `build` command in order to update the server's provider registry with the implementations from the JAR file."
msgstr ""

msgid "This step is needed in order to optimize the server runtime so that all providers are known ahead-of-time rather than discovered only when starting the server or at runtime."
msgstr ""

msgid "To uninstall a provider, you should remove the JAR file from the `providers` directory and run the `build` command again."
msgstr ""

msgid "Using third-party dependencies"
msgstr ""

msgid "When implementing a provider you might need to use some third-party dependency that is not available from the server distribution."
msgstr ""

msgid "In this case, you should copy any additional dependency to the `providers` directory and run the `build` command. Once you do that, the server is going to make these additional dependencies available at runtime for any provider that depends on them."
msgstr ""

msgid "References"
msgstr ""

msgid "https://www.keycloak.org/server/configuration[Configuring Keycloak]"
msgstr ""

msgid "https://www.keycloak.org/docs/latest/server_development/#_providers[Server Developer Documentation]"
msgstr ""

msgid "Configuring the database"
msgstr ""

msgid "This {section} explains how to configure the Keycloak server to store data in a relational database."
msgstr ""

msgid "Supported databases"
msgstr ""

msgid "The server has built-in support for different databases. You can query the available databases by viewing the expected values for the `db` configuration option. The following table lists the supported databases and their tested versions."
msgstr ""

msgid "Tested Version"
msgstr ""

msgid "mariadb"
msgstr ""

msgid "10"
msgstr ""

msgid "mssql"
msgstr ""

msgid "2016"
msgstr ""

msgid "mysql"
msgstr ""

msgid "8"
msgstr ""

msgid "oracle"
msgstr ""

msgid "12c"
msgstr ""

msgid "postgres"
msgstr ""

msgid "By default, the server uses the `dev-file` database. This is the default database that the server will use to persist data and only exists for development use-cases. The `dev-file` database is not suitable for production use-cases, and must be replaced before deploying to production."
msgstr ""

msgid "Configuring a database"
msgstr ""

msgid "For each supported database, the server provides some opinionated defaults to simplify database configuration. You complete the configuration by providing some key settings such as the database host and credentials."
msgstr ""

msgid "Start the server and set the basic options to configure a database"
msgstr ""

msgid "bin/kc.[sh|bat] start --db postgres --db-url-host mypostgres --db-username myuser --db-password change_me"
msgstr ""

msgid "This command includes the minimum settings needed to connect to the database."
msgstr ""

msgid "The default schema is `keycloak`, but you can change it by using the `db-schema` configuration option."
msgstr ""

msgid "Do NOT use the `--optimized` flag for the `start` command if you want to use a particular DB (except the H2). Executing the build phase before starting the server instance is necessary. You can achieve it either by starting the instance without the `--optimized` flag, or by executing the `build` command before the optimized start. For more information, see link:{links_server_configuration_url}[{links_server_configuration_name}]."
msgstr ""

msgid "Overriding default connection settings"
msgstr ""

msgid "The server uses JDBC as the underlying technology to communicate with the database. If the default connection settings are insufficient, you can specify a JDBC URL using the `db-url` configuration option."
msgstr ""

msgid "The following is a sample command for a PostgreSQL database."
msgstr ""

msgid "bin/kc.[sh|bat] start --db postgres --db-url jdbc:postgresql://mypostgres/mydatabase"
msgstr ""

msgid "Be aware that you need to escape characters when invoking commands containing special shell characters such as `;` using the CLI, so you might want to set it in the configuration file instead."
msgstr ""

msgid "Overriding the default JDBC driver"
msgstr ""

msgid "The server uses a default JDBC driver accordingly to the database you chose."
msgstr ""

msgid "To set a different driver you can set the `db-driver` with the fully qualified class name of the JDBC driver:"
msgstr ""

msgid "bin/kc.[sh|bat] start --db postgres --db-driver=my.Driver"
msgstr ""

msgid "Regardless of the driver you set, the default driver is always available at runtime."
msgstr ""

msgid "Only set this property if you really need to. For instance, when leveraging the capabilities from a JDBC Driver Wrapper for a specific cloud database service."
msgstr ""

msgid "Configuring Unicode support for the database"
msgstr ""

msgid "Unicode support for all fields depends on whether the database allows VARCHAR and CHAR fields to use the Unicode character set."
msgstr ""

msgid "If these fields can be set, Unicode is likely to work, usually at the expense of field length."
msgstr ""

msgid "If the database only supports Unicode in the NVARCHAR and NCHAR fields, Unicode support for all text fields is unlikely to work because the server schema uses VARCHAR and CHAR fields extensively."
msgstr ""

msgid "The database schema provides support for Unicode strings only for the following special fields:"
msgstr ""

msgid "*Realms*: display name, HTML display name, localization texts (keys and values)"
msgstr ""

msgid "*Federation* Providers: display name"
msgstr ""

msgid "*Users*: username, given name, last name, attribute names and values"
msgstr ""

msgid "*Groups*: name, attribute names and values"
msgstr ""

msgid "*Roles*: name"
msgstr ""

msgid "Descriptions of objects"
msgstr ""

msgid "Otherwise, characters are limited to those contained in database encoding, which is often 8-bit. However, for some database systems, you can enable UTF-8 encoding of Unicode characters and use the full Unicode character set in all text fields. For a given database, this choice might result in a shorter maximum string length than the maximum string length supported by 8-bit encodings."
msgstr ""

msgid "Configuring Unicode support for an Oracle database"
msgstr ""

msgid "Unicode characters are supported in an Oracle database if the database was created with Unicode support in the VARCHAR and CHAR fields. For example, you configured AL32UTF8 as the database character set. In this case, the JDBC driver requires no special settings."
msgstr ""

msgid "If the database was not created with Unicode support, you need to configure the JDBC driver to support Unicode characters in the special fields. You configure two properties. Note that you can configure these properties as system properties or as connection properties."
msgstr ""

msgid "Set `oracle.jdbc.defaultNChar` to `true`."
msgstr ""

msgid "Optionally, set `oracle.jdbc.convertNcharLiterals` to `true`."
msgstr ""

msgid "For details on these properties and any performance implications, see the Oracle JDBC driver configuration documentation."
msgstr ""

msgid "Unicode support for a Microsoft SQL Server database"
msgstr ""

msgid "Unicode characters are supported only for the special fields for a Microsoft SQL Server database. The database requires no special settings."
msgstr ""

msgid "The `sendStringParametersAsUnicode` property of JDBC driver should be set to `false` to significantly improve performance. Without this parameter, the Microsoft SQL Server might be unable to use indexes."
msgstr ""

msgid "Configuring Unicode support for a MySQL database"
msgstr ""

msgid "Unicode characters are supported in a MySQL database if the database was created with Unicode support in the VARCHAR and CHAR fields when using the CREATE DATABASE command."
msgstr ""

msgid "Note that the utf8mb4 character set is not supported due to different storage requirements for the utf8 character set. See MySQL documentation for details. In that situation, the length restriction on non-special fields does not apply because columns are created to accommodate the number of characters, not bytes.  If the database default character set does not allow Unicode storage, only the special fields allow storing Unicode values."
msgstr ""

msgid "Start MySQL Server."
msgstr ""

msgid "Under JDBC driver settings, locate the *JDBC connection settings*."
msgstr ""

msgid "Add this connection property: `characterEncoding=UTF-8`"
msgstr ""

msgid "Configuring Unicode support for a PostgreSQL database"
msgstr ""

msgid "Unicode is supported for a PostgreSQL database when the database character set is UTF8. Unicode characters can be used in any field with no reduction of field length for non-special fields. The JDBC driver requires no special settings. The character set is determined when the PostgreSQL database is created."
msgstr ""

msgid "Check the default character set for a PostgreSQL cluster by entering the following SQL command."
msgstr ""

msgid "show server_encoding;"
msgstr ""

msgid "If the default character set is not UTF 8, create the database with the UTF8 as the default character set using a command such as:"
msgstr ""

msgid "create database keycloak with encoding 'UTF8';"
msgstr ""

msgid "Changing database locking timeout in a cluster configuration"
msgstr ""

msgid "Because cluster nodes can boot concurrently, they take extra time for database actions. For example, a booting server instance may perform some database migration, importing, or first time initializations. A database lock prevents start actions from conflicting with each other when cluster nodes boot up concurrently."
msgstr ""

msgid "The maximum timeout for this lock is 900 seconds. If a node waits on this lock for more than the timeout, the boot fails. The need to change the default value is unlikely, but you can change it by entering this command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --spi-dblock-jpa-lock-wait-timeout 900"
msgstr ""

msgid "Using Database Vendors without XA transaction support"
msgstr ""

msgid "Keycloak uses XA transactions and the appropriate database drivers by default. Certain vendors, such as Azure SQL and MariaDB Galera, do not support or rely on the XA transaction mechanism. To use Keycloak without XA transaction support using the appropriate JDBC driver, enter the following command:"
msgstr ""

msgid "bin/kc.[sh|bat] build --db=<vendor> --transaction-xa-enabled=false"
msgstr ""

msgid "Keycloak automatically chooses the appropriate JDBC driver for your vendor."
msgstr ""

msgid "Setting JPA provider configuration option for migrationStrategy"
msgstr ""

msgid "To setup the JPA migrationStrategy (manual/update/validate) you should setup JPA provider as follows:"
msgstr ""

msgid "Setting the `migration-strategy` for the `quarkus` provider of the `connections-jpa` SPI"
msgstr ""

msgid "bin/kc.[sh|bat] start --spi-connections-jpa-legacy-migration-strategy=manual"
msgstr ""

msgid "If you want to get a SQL file for DB initialization, too, you have to add this additional SPI initializeEmpty (true/false):"
msgstr ""

msgid "Setting the `initialize-empty` for the `quarkus` provider of the `connections-jpa` SPI"
msgstr ""

msgid "bin/kc.[sh|bat] start --spi-connections-jpa-legacy-initialize-empty=false"
msgstr ""

msgid "In the same way the migrationExport to point to a specific file and location:"
msgstr ""

msgid "Setting the `migration-export` for the `quarkus` provider of the `connections-jpa` SPI"
msgstr ""

msgid "bin/kc.[sh|bat] start --spi-connections-jpa-legacy-migration-export=<path>/<file.sql>"
msgstr ""

msgid "Configuring the hostname"
msgstr ""

msgid "Server Endpoints"
msgstr ""

msgid "Keycloak exposes different endpoints to talk with applications as well as to allow accessing the administration console. These endpoints can be categorized into three main groups:"
msgstr ""

msgid "Frontend"
msgstr ""

msgid "Backend"
msgstr ""

msgid "Administration Console"
msgstr ""

msgid "The base URL for each group has an important impact on how tokens are issued and validated, on how links are created for actions that require the user to be redirected to Keycloak (for example, when resetting password through email links), and, most importantly, how applications will discover these endpoints when fetching the OpenID Connect Discovery Document from `realms/++{realm-name}++/.well-known/openid-configuration`."
msgstr ""

msgid "The frontend endpoints are those accessible through a public domain and usually related to authentication/authorization flows that happen through the front-channel. For instance, when an SPA wants to authenticate their users it redirects them to the `authorization_endpoint` so that users can authenticate using their browsers through the front-channel."
msgstr ""

msgid "By default, when the hostname settings are not set, the base URL for these endpoints is based on the incoming request so that the HTTP scheme, host, port, and path, are the same from the request. The default behavior also has a direct impact on how the server is going to issue tokens given that the issuer is also based on the URL set to the frontend endpoints. If the hostname settings are not set, the token issuer will also be based on the incoming request and also lack consistency if the client is requesting tokens using different URLs."
msgstr ""

msgid "When deploying to production you usually want a consistent URL for the frontend endpoints and the token issuer regardless of how the request is constructed. In order to achieve this consistency, you can set either the `hostname` or the `hostname-url` options."
msgstr ""

msgid "Most of the time, it should be enough to set the `hostname` option in order to change only the *host* of the frontend URLs:"
msgstr ""

msgid "bin/kc.[sh|bat] start --hostname=<host>"
msgstr ""

msgid "When using the `hostname` option the server is going to resolve the HTTP scheme, port, and path, automatically so that:"
msgstr ""

msgid "`https` scheme is used unless you set `hostname-strict-https=false`"
msgstr ""

msgid "Use the standard HTTP ports (e.g.: `80` and `443`) if a `proxy` is set or use the port you set to the `hostname-port` option"
msgstr ""

msgid "However, if you want to set not only the host but also a scheme, port, and path, you can set the `hostname-url` option:"
msgstr ""

msgid "bin/kc.[sh|bat] start --hostname-url=<scheme>://<host>:<port>/<path>"
msgstr ""

msgid "This option gives you more flexibility as you can set the different parts of the URL from a single option. Note that the `hostname` and `hostname-url` are mutually exclusive."
msgstr ""

msgid "The backend endpoints are those accessible through a public domain or through a private network. They are used for a direct communication between the server and clients without any intermediary but plain HTTP requests. For instance, after the user is authenticated an SPA wants to exchange the `code` sent by the server with a set of tokens by sending a token request to `token_endpoint`."
msgstr ""

msgid "By default, the URLs for backend endpoints are also based on the incoming request. To override this behavior, set the `hostname-strict-backchannel` configuration option by entering this command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --hostname=<value> --hostname-strict-backchannel=true"
msgstr ""

msgid "By setting the `hostname-strict-backchannel` option, the URLs for the backend endpoints are going to be exactly the same as the frontend endpoints."
msgstr ""

msgid "When all applications connected to Keycloak communicate through the public URL, set `hostname-strict-backchannel` to `true`. Otherwise, leave this parameter as `false` to allow client-server communication through a private network."
msgstr ""

msgid "The server exposes the administration console and static resources using a specific URL."
msgstr ""

msgid "By default, the URLs for the administration console are also based on the incoming request. However, you can set a specific host or base URL if you want to restrict access to the administration console using a specific URL. Similarly to how you set the frontend URLs, you can use the `hostname-admin` and `hostname-admin-url` options to achieve that."
msgstr ""

msgid "Most of the time, it should be enough to set the `hostname-admin` option in order to change only the *host* of the administration console URLs:"
msgstr ""

msgid "bin/kc.[sh|bat] start --hostname-admin=<host>"
msgstr ""

msgid "However, if you want to set not only the host but also a scheme, port, and path, you can set the `hostname-admin-url` option:"
msgstr ""

msgid "bin/kc.[sh|bat] start --hostname-admin-url=<scheme>://<host>:<port>/<path>"
msgstr ""

msgid "Note that the `hostname-admin` and `hostname-admin-url` are mutually exclusive."
msgstr ""

msgid "To reduce attack surface, the administration endpoints for Keycloak and the Admin Console should not be publicly accessible. Therefore, you can secure them by using a reverse proxy. For more information about which paths to expose using a reverse proxy, see link:{links_server_reverseproxy_url}[{links_server_reverseproxy_name}]."
msgstr ""

msgid "Example Scenarios"
msgstr ""

msgid "The following are more example scenarios and the corresponding commands for setting up a hostname."
msgstr ""

msgid "Note that the `start` command requires setting up TLS. The corresponding options are not shown for example purposes. For more details, see link:{links_server_enabletls_url}[{links_server_enabletls_name}]."
msgstr ""

msgid "Exposing the server behind a TLS termination proxy"
msgstr ""

msgid "In this example, the server is running behind a TLS termination proxy and publicly available from `https://mykeycloak`."
msgstr ""

msgid "Configuration:"
msgstr ""

msgid "bin/kc.[sh|bat] start --hostname=mykeycloak --proxy=edge"
msgstr ""

msgid "Exposing the server without a proxy"
msgstr ""

msgid "In this example, the server is running without a proxy and exposed using a URL using HTTPS."
msgstr ""

msgid "Keycloak configuration:"
msgstr ""

msgid "bin/kc.[sh|bat] start --hostname-url=https://mykeycloak"
msgstr ""

msgid "It is highly recommended using a TLS termination proxy in front of the server for security and availability reasons. For more details, see link:{links_server_reverseproxy_url}[{links_server_reverseproxy_name}]."
msgstr ""

msgid "Forcing backend endpoints to use the same URL the server is exposed"
msgstr ""

msgid "In this example, backend endpoints are exposed using the same URL used by the server so that clients always fetch the same URL regardless of the origin of the request."
msgstr ""

msgid "bin/kc.[sh|bat] start --hostname=mykeycloak --hostname-strict-backchannel=true"
msgstr ""

msgid "Exposing the server using a port other than the default ports"
msgstr ""

msgid "In this example, the server is accessible using a port other than the default ports."
msgstr ""

msgid "bin/kc.[sh|bat] start --hostname-url=https://mykeycloak:8989"
msgstr ""

msgid "Configuring trusted certificates for outgoing requests"
msgstr ""

msgid "When Keycloak communicates with external services through TLS, it has to validate the remote server’s certificate in order to ensure it is connecting to a trusted server. This is necessary in order to prevent man-in-the-middle attacks. The certificates of these remote server’s or the CA that signed these certificates must be put in a truststore. This truststore is managed by the Keycloak server."
msgstr ""

msgid "The truststore is used when connecting securely to identity brokers, LDAP identity providers, when sending emails, and for backchannel communication with client applications. It is also useful when you want to change the policy on how host names are verified and trusted by the server."
msgstr ""

msgid "By default, a truststore provider is not configured, and any TLS/HTTPS connections fall back to standard Java Truststore configuration. If there is no trust established, then these outgoing requests will fail."
msgstr ""

msgid "Configuring the Keycloak Truststore"
msgstr ""

msgid "You can add your truststore configuration by entering this command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --spi-truststore-file-file=myTrustStore.jks --spi-truststore-file-password=password --spi-truststore-file-hostname-verification-policy=ANY"
msgstr ""

msgid "The following are possible configuration options for this setting:"
msgstr ""

msgid "The path to a Java keystore file. HTTPS requests need a way to verify the host of the server to which they are talking. This is what the truststore does. The keystore contains one or more trusted host certificates or certificate authorities. This truststore file should only contain public certificates of your secured hosts. This is _REQUIRED_ if any of these properties are defined."
msgstr ""

msgid "password"
msgstr ""

msgid "Password of the keystore. This option is _REQUIRED_ if any of these properties are defined."
msgstr ""

msgid "hostname-verification-policy"
msgstr ""

msgid "For HTTPS requests, this option verifies the hostname of the server's certificate. Default: `WILDCARD`"
msgstr ""

msgid "`ANY` means that the hostname is not verified."
msgstr ""

msgid "`WILDCARD` allows wildcards in subdomain names, such as *.foo.com."
msgstr ""

msgid "When using `STRICT`, the Common Name (CN) must match the hostname exactly."
msgstr ""

msgid "type"
msgstr ""

msgid "The type of truststore, such as `jks`, `pkcs12` or `bcfks`. If not provided, the type would be detected based on the truststore file extension or platform default type."
msgstr ""

msgid "Example of a truststore configuration"
msgstr ""

msgid "The following is an example configuration for a truststore that allows you to create trustful connections to all `mycompany.org` domains and its subdomains:"
msgstr ""

msgid "bin/kc.[sh|bat] start --spi-truststore-file-file=path/to/truststore.jks --spi-truststore-file-password=change_me --spi-truststore-file-hostname-verification-policy=WILDCARD"
msgstr ""

msgid "Enabling Keycloak Health checks"
msgstr ""

msgid "Keycloak has built in support for health checks. This {section} describes how to enable and use the Keycloak health checks."
msgstr ""

msgid "Keycloak Health checks"
msgstr ""

msgid "Keycloak exposed health endpoints are three:"
msgstr ""

msgid "`/health`"
msgstr ""

msgid "`/health/live`"
msgstr ""

msgid "`/health/ready`"
msgstr ""

msgid "The result is returned in json format and it looks as follows:"
msgstr ""

msgid ""
"{\n"
"    \"status\": \"UP\",\n"
"    \"checks\": []\n"
"}"
msgstr ""

msgid "Enabling the health checks"
msgstr ""

msgid "It is possible to enable the health checks using the build time option `health-enabled`:"
msgstr ""

msgid "bin/kc.[sh|bat] build --health-enabled=true"
msgstr ""

msgid "By default, no check is returned from the health endpoints."
msgstr ""

msgid "Using the health checks"
msgstr ""

msgid "It is recommended that the health endpoints be monitored by external HTTP requests. Due to security measures that remove `curl` and other packages from the Keycloak container image, local command-based monitoring will not function easily."
msgstr ""

msgid "If you are not using Keycloak in a container, use whatever you want to access the health check endpoints."
msgstr ""

msgid "curl"
msgstr ""

msgid "You may use a simple HTTP HEAD request to determine the `+live+` or `+ready+` state of Keycloak. `+curl+` is a good HTTP client for this purpose."
msgstr ""

msgid "If Keycloak is deployed in a container, you must run this command from outside it due to the previously mentioned security measures. For example:"
msgstr ""

msgid "curl --head -fsS http://localhost:8080/health/ready"
msgstr ""

msgid "If the command returns with status 0, then Keycloak is `+live+` or `+ready+`, depending on which endpoint you called. Otherwise there is a problem."
msgstr ""

msgid "Kubernetes"
msgstr ""

msgid "Define a https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#http-probes[HTTP Probe] so that Kubernetes may externally monitor the health endpoints. Do not use a liveness command."
msgstr ""

msgid "HEALTHCHECK"
msgstr ""

msgid "The Dockerfile image `+HEALTHCHECK+` instruction defines a command that will be periodically executed inside the container as it runs. The Keycloak container does not have any CLI HTTP clients installed. Consider installing `+curl+` as an additional RPM, as detailed by the link:{links_server_containers_url}[{links_server_containers_name}] {section}. Note that your container may be less secure because of this."
msgstr ""

msgid "Available Checks"
msgstr ""

msgid "The table below shows the available checks."
msgstr ""

msgid "*Check*"
msgstr ""

msgid "*Description*"
msgstr ""

msgid "*Requires Metrics*"
msgstr ""

msgid "Returns the status of the database connection pool."
msgstr ""

msgid "Yes"
msgstr ""

msgid "For some checks, you'll need to also enable metrics as indicated by the `Requires Metrics` column. To enable metrics use the `metrics-enabled` option as follows:"
msgstr ""

msgid "bin/kc.[sh|bat] build --health-enabled=true --metrics-enabled=true"
msgstr ""

msgid "Enabling Keycloak Metrics"
msgstr ""

msgid "Keycloak has built in support for metrics. This {section} describes how to enable and configure server metrics."
msgstr ""

msgid "Enabling Metrics"
msgstr ""

msgid "It is possible to enable metrics using the build time option `metrics-enabled`:"
msgstr ""

msgid "bin/kc.[sh|bat] start --metrics-enabled=true"
msgstr ""

msgid "Querying Metrics"
msgstr ""

msgid "Keycloak exposes metrics at the following endpoint:"
msgstr ""

msgid "`/metrics`"
msgstr ""

msgid "The response from the endpoint uses a `text/plain` content type and it is based on the Prometheus text format. The snippet bellow is an example of a response:"
msgstr ""

msgid ""
"# HELP base_gc_total Displays the total number of collections that have occurred. This attribute lists -1 if the collection count is undefined for this collector.\n"
"# TYPE base_gc_total counter\n"
"base_gc_total{name=\"G1 Young Generation\",} 14.0\n"
"# HELP jvm_memory_usage_after_gc_percent The percentage of long-lived heap pool used after the last GC event, in the range [0..1]\n"
"# TYPE jvm_memory_usage_after_gc_percent gauge\n"
"jvm_memory_usage_after_gc_percent{area=\"heap\",pool=\"long-lived\",} 0.0\n"
"# HELP jvm_threads_peak_threads The peak live thread count since the Java virtual machine started or peak was reset\n"
"# TYPE jvm_threads_peak_threads gauge\n"
"jvm_threads_peak_threads 113.0\n"
"# HELP agroal_active_count Number of active connections. These connections are in use and not available to be acquired.\n"
"# TYPE agroal_active_count gauge\n"
"agroal_active_count{datasource=\"default\",} 0.0\n"
"# HELP base_memory_maxHeap_bytes Displays the maximum amount of memory, in bytes, that can be used for memory management.\n"
"# TYPE base_memory_maxHeap_bytes gauge\n"
"base_memory_maxHeap_bytes 1.6781410304E10\n"
"# HELP process_start_time_seconds Start time of the process since unix epoch.\n"
"# TYPE process_start_time_seconds gauge\n"
"process_start_time_seconds 1.675188449054E9\n"
"# HELP system_load_average_1m The sum of the number of runnable entities queued to available processors and the number of runnable entities running on the available processors averaged over a period of time\n"
"# TYPE system_load_average_1m gauge\n"
"system_load_average_1m 4.005859375\n"
"\n"
"..."
msgstr ""

msgid "Available Metrics"
msgstr ""

msgid "The table below summarizes the available metrics groups:"
msgstr ""

msgid "*Metric*"
msgstr ""

msgid "System"
msgstr ""

msgid "A set of system-level metrics related to CPU and memory usage."
msgstr ""

msgid "JVM"
msgstr ""

msgid "A set of metrics from the Java Virtual Machine (JVM) related to GC, and heap."
msgstr ""

msgid "A set of metrics from the database connection pool, if using a database."
msgstr ""

msgid "HTTP"
msgstr ""

msgid "A set of global and individual metrics from the HTTP endpoints"
msgstr ""

msgid "A set of metrics from Infinispan caches. See link:{links_server_caching_url}[{links_server_caching_name}] for more details."
msgstr ""

msgid "FIPS 140-2 support"
msgstr ""

msgid "The Federal Information Processing Standard Publication 140-2, (FIPS 140-2), is a U.S. government computer security standard used to approve cryptographic modules. Keycloak supports to run in FIPS 140-2 compliant mode. In this case, Keycloak will use only FIPS approved cryptography algorithms for it's functionality."
msgstr ""

msgid "To run in FIPS 140-2, Keycloak should run on a FIPS 140-2 enabled system. This requirement usually assumes RHEL or Fedora where FIPS was enabled during installation. See https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html-single/security_hardening/index#assembly_installing-the-system-in-fips-mode_security-hardening[RHEL documentation] for the details. When the system is in FIPS mode, it makes sure that the underlying OpenJDK is in FIPS mode as well and would use only https://access.redhat.com/documentation/en-us/openjdk/17/html/configuring_openjdk_17_on_rhel_with_fips/openjdk-default-fips-configuration[FIPS enabled security providers]."
msgstr ""

msgid "BouncyCastle library"
msgstr ""

msgid "Keycloak internally uses the BouncyCastle library for many cryptography utilities. However, the default flavor of the BouncyCastle library that shipped with Keycloak is not FIPS compliant, but, BouncyCastle also provides a FIPS validated version of it's library. The FIPS validated BouncyCastle library cannot be shipped with Keycloak due to license constraints and Keycloak cannot provide official support of it. Therefore, to run in FIPS compliant mode, you need to download BouncyCastle-FIPS bits and add them to the Keycloak distribution. When Keycloak executes in fips-mode, it will use the BCFIPS bits instead of the default BouncyCastle bits, which achieves FIPS compliance."
msgstr ""

msgid "BouncyCastle FIPS bits"
msgstr ""

msgid "BouncyCastle FIPS can be downloaded from the https://www.bouncycastle.org/fips-java/[BouncyCastle official page]. Then you can add them to the directory `KEYCLOAK_HOME/providers` of your distribution. Make sure to use proper versions compatible with BouncyCastle Keycloak dependencies. The supported BCFIPS bits needed are:"
msgstr ""

msgid "`bc-fips-1.0.2.3.jar`"
msgstr ""

msgid "`bctls-fips-1.0.14.jar`"
msgstr ""

msgid "`bcpkix-fips-1.0.7.jar`"
msgstr ""

msgid "Generating keystore"
msgstr ""

msgid "You can create either `pkcs12` or `bcfks` keystore to be used for the Keycloak server SSL. The `pkcs12` works well in BCFIPS non-approved mode."
msgstr ""

msgid "PKCS12 keystore can be generated with OpenJDK 17 Java on RHEL 9 in the standard way."
msgstr ""

msgid "BCFKS keystore generation requires the use of the BouncyCastle FIPS libraries and a custom security file."
msgstr ""

msgid "You can start with create a helper file, such as `/tmp/kc.keystore-create.java.security`. The content of the file needs only to have the following property:"
msgstr ""

msgid "securerandom.strongAlgorithms=PKCS11:SunPKCS11-NSS-FIPS"
msgstr ""

msgid "Next enter a command such as the following to generate the keystore:"
msgstr ""

msgid ""
"keytool -keystore $KEYCLOAK_HOME/conf/server.keystore \\\n"
"  -storetype bcfks \\\n"
"  -providername BCFIPS \\\n"
"  -providerclass org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider \\\n"
"  -provider org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider \\\n"
"  -providerpath $KEYCLOAK_HOME/providers/bc-fips-*.jar \\\n"
"  -alias localhost \\\n"
"  -genkeypair -sigalg SHA512withRSA -keyalg RSA -storepass passwordpassword \\\n"
"  -dname CN=localhost -keypass passwordpassword \\\n"
"  -J-Djava.security.properties=/tmp/kc.keystore-create.java.security"
msgstr ""

msgid "Using self-signed certificates is for demonstration purposes only, so replace these certificates with proper certificates when you move to a production environment."
msgstr ""

msgid "Similar options are needed when you are doing any other manipulation with keystore/truststore of `bcfks` type."
msgstr ""

msgid "Running the server."
msgstr ""

msgid "To run the server with BCFIPS in non-approved mode, enter the following command"
msgstr ""

msgid "bin/kc.[sh|bat] start --features=fips --hostname=localhost --https-key-store-password=passwordpassword --log-level=INFO,org.keycloak.common.crypto:TRACE,org.keycloak.crypto:TRACE"
msgstr ""

msgid "You can disable logging in production if everything works as expected."
msgstr ""

msgid "Strict mode"
msgstr ""

msgid "There is the `fips-mode` option, which is automatically set to `non-strict` when the `fips` feature is enabled. This means to run BCFIPS in the \"non-approved mode\". The more secure alternative is to use `--features=fips --fips-mode=strict` in which case BouncyCastle FIPS will use \"approved mode\". Using that option results in stricter security requirements on cryptography and security algorithms."
msgstr ""

msgid "When starting server, you can check that the startup log contains `KC` provider with the note about `Approved Mode` such as the following:"
msgstr ""

msgid "KC(BCFIPS version 1.000203 Approved Mode, FIPS-JVM: enabled) version 1.0 - class org.keycloak.crypto.fips.KeycloakFipsSecurityProvider,"
msgstr ""

msgid "Cryptography restrictions in strict mode"
msgstr ""

msgid "As mentioned in the previous section, strict mode may not work with `pkcs12` keystore. It is needed to use another keystore (like `bcfks`) as mentioned earlier. Also `jks` and `pkcs12` keystores are not supported in Keycloak when using strict mode. Some examples are importing or generating a keystore of an OIDC or SAML client in the Admin Console or for a `java-keystore` provider in the realm keys."
msgstr ""

msgid "User passwords must be 14 characters or longer. Keycloak uses PBKDF2 based password encoding by default. BCFIPS approved mode requires passwords to be at least 112 bits (effectively 14 characters) with PBKDF2 algorithm. If you want to allow a shorter password, set the property `max-padding-length` of provider `pbkdf2-sha256` of SPI `password-hashing` to value 14 to provide additional padding when verifying a hash created by this algorithm. This setting is also backwards compatible with previously stored passwords. For example, if the user's database is in a non-FIPS environment and you have shorter passwords and you want to verify them now with Keycloak using BCFIPS in approved mode, the passwords should work. So effectively, you can use an option such as the following when starting the server:"
msgstr ""

msgid "--spi-password-hashing-pbkdf2-sha256-max-padding-length=14"
msgstr ""

msgid "Using the option above does not break FIPS compliance. However, note that longer passwords are good practice anyway. For example, passwords auto-generated by modern browsers match this requirement as they are longer than 14 characters."
msgstr ""

msgid "RSA keys of 1024 bits do not work (2048 is the minimum). This applies for keys used by the Keycloak realm itself (Realm keys from the `Keys` tab in the admin console), but also client keys and IDP keys"
msgstr ""

msgid "HMAC SHA-XXX keys must be at least 112 bits (or 14 characters long). For example if you use OIDC clients with the client authentication `Signed Jwt with Client Secret` (or `client-secret-jwt` in the OIDC notation), then your client secrets should be at least 14 characters long. Note that for good security, it is recommended to use client secrets generated by Keycloak server, which always match this requirement."
msgstr ""

msgid "Other restrictions"
msgstr ""

msgid "To have SAML working, make sure that a `XMLDSig` security provider is available in your security providers. To have Kerberos working, make sure that a `SunJGSS` security provider is available. In FIPS enabled RHEL 9 in OpenJDK 17.0.6, these security providers are not present in the `java.security`, which means that they effectively cannot work."
msgstr ""

msgid "To have SAML working, you can manually add the provider into `JAVA_HOME/conf/security/java.security` into the list fips providers. For example, add the line such as the following:"
msgstr ""

msgid "fips.provider.7=XMLDSig"
msgstr ""

msgid "Adding this security provider should work well. In fact, it is FIPS compliant and likely will be added by default in the future OpenJDK 17 micro version. Details are in the https://bugzilla.redhat.com/show_bug.cgi?id=1940064[bugzilla]."
msgstr ""

msgid "It is recommended to look at `JAVA_HOME/conf/security/java.security` and check all configured providers here and make sure that the number matches. In other words, `fips.provider.7` assumes that there are already 6 providers configured with prefix like `fips.provider.N` in this file."
msgstr ""

msgid "If prefer not to edit your `java.security` file inside java itself, you can create a custom java security file (for example named `kc.java.security`) and add only the single property above for adding XMLDSig provider into that file. Then start your Keycloak server with this property file attached:"
msgstr ""

msgid "-Djava.security.properties=/location/to/your/file/kc.java.security"
msgstr ""

msgid "For Kerberos/SPNEGO, the security provider `SunJGSS` is not yet fully FIPS compliant. Hence it is not recommended to add it to your list of security providers if you want to be FIPS compliant. The `KERBEROS` feature is disabled by default in Keycloak when it is executed on FIPS platform and when security provider is not available. Details are in the https://bugzilla.redhat.com/show_bug.cgi?id=2051628[bugzilla]."
msgstr ""

msgid "Run the CLI on the FIPS host"
msgstr ""

msgid "If you want to run Client Registration CLI (`kcreg.sh|bat` script) or Admin CLI (`kcadm.sh|bat` script),  the CLI must also use the BouncyCastle FIPS dependencies instead of plain BouncyCastle dependencies. To achieve this, you may copy the jars to the CLI library folder and that is enough. CLI tool will automatically use BCFIPS dependencies instead of plain BC when it detects that corresponding BCFIPS jars are present (see above for the versions used). For example, use command such as the following before running the CLI:"
msgstr ""

msgid ""
"cp $KEYCLOAK_HOME/providers/bc-fips-*.jar $KEYCLOAK_HOME/bin/client/lib/\n"
"cp $KEYCLOAK_HOME/providers/bctls-fips-*.jar $KEYCLOAK_HOME/bin/client/lib/"
msgstr ""

msgid "When trying to use BCFKS truststore/keystore with CLI, you may see issues due this truststore is not the default java keystore type. It can be good to specify it as default in java security properties. For example run this command on unix based systems before doing any operation with kcadm|kcreg clients:"
msgstr ""

msgid ""
"echo \"keystore.type=bcfks\n"
"fips.keystore.type=bcfks\" > /tmp/kcadm.java.security\n"
"export KC_OPTS=\"-Djava.security.properties=/tmp/kcadm.java.security\""
msgstr ""

msgid "Keycloak server in FIPS mode in the container"
msgstr ""

msgid "When you want Keycloak in FIPS mode to be executed inside a container, your \"host\" must be using FIPS mode as well. The container will then \"inherit\" FIPS mode from the parent host. See https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/9/html/security_hardening/using-the-system-wide-cryptographic-policies_security-hardening#enabling-fips-mode-in-a-container_using-the-system-wide-cryptographic-policies[this section] in the RHEL documentation for the details."
msgstr ""

msgid "The keycloak container image will be just automatically in fips mode when executed from the host in FIPS mode. However, make sure that the Keycloak container also uses BCFIPS jars (instead of BC jars) and proper options when started."
msgstr ""

msgid "Regarding this, it is best to build your own container image as described in the link:{links_server_containers_url}[{links_server_containers_name}] and tweak it to use BCFIPS etc."
msgstr ""

msgid "For example in the current directory, you can create sub-directory `files` and add:"
msgstr ""

msgid "BC FIPS jar files as described above"
msgstr ""

msgid "Custom keystore file - named for example `keycloak-fips.keystore.bcfks`"
msgstr ""

msgid "Security file `kc.java.security` with added provider for SAML"
msgstr ""

msgid "Then create `Dockerfile` in the current directory similar to this:"
msgstr ""

msgid ""
"FROM quay.io/keycloak/keycloak:latest as builder\n"
"\n"
"ADD files /tmp/files/\n"
"\n"
"WORKDIR /opt/keycloak\n"
"RUN cp /tmp/files/*.jar /opt/keycloak/providers/\n"
"RUN cp /tmp/files/keycloak-fips.keystore.* /opt/keycloak/conf/server.keystore\n"
"RUN cp /tmp/files/kc.java.security /opt/keycloak/conf/\n"
"\n"
"RUN /opt/keycloak/bin/kc.sh build --features=fips --fips-mode=strict\n"
"\n"
"FROM quay.io/keycloak/keycloak:latest\n"
"COPY --from=builder /opt/keycloak/ /opt/keycloak/\n"
"\n"
"ENTRYPOINT [\"/opt/keycloak/bin/kc.sh\"]"
msgstr ""

msgid "Then build FIPS an optimized docker image and start it as described in the link:{links_server_containers_url}[{links_server_containers_name}]. These steps require that you use arguments as described above when starting the image."
msgstr ""

msgid "Migration from non-fips environment"
msgstr ""

msgid "If you previously used Keycloak in the non-fips environment, it is possible to migrate it to FIPS environment including it's data. However, restrictions and considerations exist as mentioned in previous sections. To highlight some of them:"
msgstr ""

msgid "Make sure all the Keycloak functionality relying on keystores uses only supported keystore types. This differs based on whether strict or non-strict mode is used."
msgstr ""

msgid "Kerberos authentication may not work. If your authentication flow uses `Kerberos` authenticator, this authenticator will be automatically switched to `DISABLED` when migrated to FIPS environment. It is recommended to remove any `Kerberos` user storage providers from your realm and disable `Kerberos` related functionality in LDAP providers before switching to FIPS environment."
msgstr ""

msgid "In addition to the preceding requirements, be sure to doublecheck this before switching to FIPS strict mode:"
msgstr ""

msgid "Make sure that all the Keycloak functionality relying on keys (for example, realm or client keys) use RSA keys of at least 2048 bits"
msgstr ""

msgid "Make sure that clients relying on `Signed JWT with Client Secret` use at least 14 characters long secrets (ideally generated secrets)"
msgstr ""

msgid "Password length restriction as described earlier. In case your users have shorter passwords, be sure to start the server with the max padding length set to 14 of PBKDF2 provider as mentioned earlier. If you prefer to avoid this option, you can for instance ask all your users to reset their password (for example by the `Forget password` link) during the first authentication in the new environment."
msgstr ""

msgid "Keycloak FIPS mode on the non-fips system"
msgstr ""

msgid "Keycloak is tested on a FIPS enabled RHEL 9 system and `ubi9` image. Running on the non-RHEL compatible platform or on the non-FIPS enabled platform, the FIPS compliance cannot be strictly guaranteed and cannot be officially supported."
msgstr ""

msgid "If you are still restricted to run Keycloak on such a system, you can at least update your security providers configured in `java.security` file. This update does not mean FIPS compliance, but at least the setup is closer to it. It can be done by providing a custom security file with only an overriden list of security providers as described earlier. For a list of recommended providers, see the https://access.redhat.com/documentation/en-us/openjdk/17/html/configuring_openjdk_17_on_rhel_with_fips/openjdk-default-fips-configuration[OpenJDK 17 documentation]."
msgstr ""

msgid "You can check the Keycloak server log at startup to see if the correct security providers are used. TRACE logging should be enabled for crypto-related Keycloak packages as described in the Keycloak startup command earlier."
msgstr ""

msgid "Importing and Exporting Realms"
msgstr ""

msgid "In this guide, you are going to understand the different approaches for importing and exporting realms using JSON files."
msgstr ""

msgid "Exporting a Realm to a Directory"
msgstr ""

msgid "To export a realm, you can use the `export` command. Your Keycloak server instance must not be started when invoking this command."
msgstr ""

msgid "bin/kc.[sh|bat] export --help"
msgstr ""

msgid "To export a realm to a directory, you can use the `--dir <dir>` option."
msgstr ""

msgid "bin/kc.[sh|bat] export --dir <dir>"
msgstr ""

msgid "When exporting realms to a directory, the server is going to create separate files for each realm being exported."
msgstr ""

msgid "Configuring how users are exported"
msgstr ""

msgid "You are also able to configure how users are going to be exported by setting the `--users <strategy>` option. The values available for this option are:"
msgstr ""

msgid "*different_files*: Users export into different json files, depending on the maximum number of users per file set by `--users-per-file`. This is the default value."
msgstr ""

msgid "*skip*: Skips exporting users."
msgstr ""

msgid "*realm_file*:  Users will be exported to the same file as the realm settings. For a realm named \"foo\", this would be \"foo-realm.json\" with realm data and users."
msgstr ""

msgid "*same_file*:  All users are exported to one explicit file. So you will get two json files for a realm, one with realm data and one with users."
msgstr ""

msgid "If you are exporting users using the `different_files` strategy, you can set how many users per file you want by setting the `--users-per-file` option. The default value is `50`."
msgstr ""

msgid "bin/kc.[sh|bat] export --dir <dir> --users different_files --users-per-file 100"
msgstr ""

msgid "Exporting a Realm to a File"
msgstr ""

msgid "To export a realm to a file, you can use the `--file <file>` option."
msgstr ""

msgid "bin/kc.[sh|bat] export --file <file>"
msgstr ""

msgid "When exporting realms to a file, the server is going to use the same file to store the configuration for all the realms being exported."
msgstr ""

msgid "Exporting a specific realm"
msgstr ""

msgid "If you do not specify a specific realm to export, all realms are exported. To export a single realm, you can use the `--realm` option as follows:"
msgstr ""

msgid "bin/kc.[sh|bat] export [--dir|--file] <path> --realm my-realm"
msgstr ""

msgid "Importing a Realm from a Directory"
msgstr ""

msgid "To import a realm, you can use the `import` command. Your Keycloak server instance must not be started when invoking this command."
msgstr ""

msgid "bin/kc.[sh|bat] import --help"
msgstr ""

msgid "After exporting a realm to a directory, you can use the `--dir <dir>` option to import the realm back to the server as follows:"
msgstr ""

msgid "bin/kc.[sh|bat] import --dir <dir>"
msgstr ""

msgid "When importing realms using the `import` command, you are able to set if existing realms should be skipped, or if they should be overridden with the new configuration. For that, you can set the `--override` option as follows:"
msgstr ""

msgid "bin/kc.[sh|bat] import --dir <dir> --override false"
msgstr ""

msgid "By default, the `--override` option is set to `true` so that realms are always overridden with the new configuration."
msgstr ""

msgid "Importing a Realm from a File"
msgstr ""

msgid "To import a realm previously exported in a single file, you can use the `--file <file>` option as follows:"
msgstr ""

msgid "bin/kc.[sh|bat] import --file <file>"
msgstr ""

msgid "Importing a Realm during Startup"
msgstr ""

msgid "You are also able to import realms when the server is starting by using the `--import-realm` option."
msgstr ""

msgid "bin/kc.[sh|bat] start --import-realm"
msgstr ""

msgid "When you set the `--import-realm` option, the server is going to try to import any realm configuration file from the `data/import` directory. Only regular files using the `.json` extension are read from this directory, sub-directories are ignored."
msgstr ""

msgid "For the https://quay.io/keycloak/keycloak[published containers], the import directory is `/opt/keycloak/data/import`"
msgstr ""

msgid "If a realm already exists in the server, the import operation is skipped. The main reason behind this behavior is to avoid re-creating realms and potentially loose state between server restarts."
msgstr ""

msgid "To re-create realms you should explicitly run the `import` command prior to starting the server."
msgstr ""

msgid "Importing the `master` realm is not supported because as it is a very sensitive operation."
msgstr ""

msgid "Using Environment Variables within the Realm Configuration Files"
msgstr ""

msgid "When importing a realm at startup, you are able to use placeholders to resolve values from environment variables for any realm configuration."
msgstr ""

msgid "Realm configuration using placeholders"
msgstr ""

msgid ""
"{\n"
"    \"realm\": \"${MY_REALM_NAME}\",\n"
"    \"enabled\": true,\n"
"    ...\n"
"}"
msgstr ""

msgid "In the example above, the value set to the `MY_REALM_NAME` environment variable is going to be used to set the `realm` property."
msgstr ""

msgid "Using Kubernetes secrets"
msgstr ""

msgid "Keycloak supports a file-based vault implementation for Kubernetes/OpenShift secrets. Mount Kubernetes secrets into the Keycloak Container, and the data fields will be available in the mounted folder with a flat-file structure."
msgstr ""

msgid "Available integrations"
msgstr ""

msgid "You can use Kubernetes/OpenShift secrets for the following purposes:"
msgstr ""

msgid "Obtain the SMTP Mail server Password"
msgstr ""

msgid "Obtain the LDAP Bind Credential when using LDAP-based User Federation"
msgstr ""

msgid "Obtain the OIDC identity providers Client Secret when integrating external identity providers"
msgstr ""

msgid "Enabling the vault"
msgstr ""

msgid "Enable the file based vault by building Keycloak using the following build option:"
msgstr ""

msgid "bin/kc.[sh|bat] build --vault=file"
msgstr ""

msgid "Setting the base directory to lookup secrets"
msgstr ""

msgid "Kubernetes/OpenShift secrets are basically mounted files. To configure a directory where these files should be mounted, enter this command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --vault-dir=/my/path"
msgstr ""

msgid "Realm-specific secret files"
msgstr ""

msgid "Kubernetes/OpenShift Secrets are used on a per-realm basis in Keycloak, which requires a naming convention for the file in place:"
msgstr ""

msgid "${vault.<realmname>_<secretname>}"
msgstr ""

msgid "Using underscores in the Name"
msgstr ""

msgid "To process the secret correctly, you double all underscores in the <realmname> or the <secretname>, separated by a single underscore."
msgstr ""

msgid "Realm Name: `sso_realm`"
msgstr ""

msgid "Desired Name: `ldap_credential`"
msgstr ""

msgid "Resulting file Name:"
msgstr ""

msgid "sso__realm_ldap__credential"
msgstr ""

msgid "Note the doubled underscores between __sso__ and __realm__ and also between __ldap__ and __credential__."
msgstr ""

msgid "Example: Use an LDAP bind credential secret in the Admin Console"
msgstr ""

msgid "Example setup"
msgstr ""

msgid "A realm named `secrettest`"
msgstr ""

msgid "A desired Name `ldapBc` for the bind Credential"
msgstr ""

msgid "Resulting file name: `secrettest_ldapBc`"
msgstr ""

msgid "Usage in Admin Console"
msgstr ""

msgid "You can then use this secret from the Admin Console by using `${vault.ldapBc}` as the value for the `Bind Credential` when configuring your LDAP User federation."
msgstr ""

msgid "Using a reverse proxy"
msgstr ""

msgid "Distributed environments frequently require the use of a reverse proxy. For Keycloak, your choice of proxy modes depends on the TLS termination in your environment."
msgstr ""

msgid "Proxy modes"
msgstr ""

msgid "The following proxy modes are available:"
msgstr ""

msgid "edge"
msgstr ""

msgid "Enables communication through HTTP between the proxy and Keycloak. This mode is suitable for deployments with a highly secure internal network where the reverse proxy keeps a secure connection (HTTP over TLS) with clients while communicating with Keycloak using HTTP."
msgstr ""

msgid "reencrypt"
msgstr ""

msgid "Requires communication through HTTPS between the proxy and Keycloak. This mode is suitable for deployments where internal communication between the reverse proxy and Keycloak should also be protected. Different keys and certificates are used on the reverse proxy as well as on Keycloak."
msgstr ""

msgid "passthrough"
msgstr ""

msgid "Enables communication through HTTP or HTTPS between the proxy and Keycloak. This mode is suitable for deployments where the reverse proxy is not terminating TLS. The proxy instead is forwarding requests to the Keycloak server so that secure connections between the server and clients are based on the keys and certificates used by the Keycloak server."
msgstr ""

msgid "Configure the proxy mode in Keycloak"
msgstr ""

msgid "To select the proxy mode, enter this command:"
msgstr ""

msgid "bin/kc.[sh|bat] start --proxy <mode>"
msgstr ""

msgid "Configure the reverse proxy"
msgstr ""

msgid "Some Keycloak features rely on the assumption that the remote address of the HTTP request connecting to Keycloak is the real IP address of the clients machine."
msgstr ""

msgid "When you have a reverse proxy or a load balancer in front of Keycloak, please make sure your reverse proxy is overriding the following headers:"
msgstr ""

msgid "`Forwarded` as per https://www.rfc-editor.org/rfc/rfc7239.html[RFC7239]"
msgstr ""

msgid "Non-standard `X-Forwarded`"
msgstr ""

msgid "Non-standard `X-Forwarded-*`, such as `X-Forwarded-For`, `X-Forwarded-Proto`, `X-Forwarded-Host`, and `X-Forwarded-Port`"
msgstr ""

msgid "To set these headers, consult the documentation for your reverse proxy."
msgstr ""

msgid "Take extra precautions to ensure that the client address is properly set by your reverse proxy via the `Forwarded` or `X-Forwarded-For` headers. If this header is incorrectly configured, rogue clients can set this header and trick Keycloak into thinking the client is connected from a different IP address than the actual address. This precaution can be more critical if you do any deny or allow listing of IP addresses."
msgstr ""

msgid "Different context-path on reverse proxy"
msgstr ""

msgid "Keycloak assumes it is exposed through the reverse proxy under the same context path as Keycloak is configured for. By default Keycloak is exposed through the root (`/`), which means it expects to be exposed through the reverse proxy on `/` as well. You can use `hostname-path` or `hostname-url` in these cases, for example using `--hostname-path=/auth` if Keycloak is exposed through the reverse proxy on `/auth`."
msgstr ""

msgid "Alternatively you can also change the context path of Keycloak itself to match the context path for the reverse proxy using the `http-relative-path` option, which will change the context-path of Keycloak itself to match the context path used by the reverse proxy."
msgstr ""

msgid "Trust the proxy to set hostname"
msgstr ""

msgid "By default, Keycloak needs to know under which hostname it will be called. If your reverse proxy is configured to check for the correct hostname, you can set Keycloak to accept any hostname."
msgstr ""

msgid "bin/kc.[sh|bat] start --proxy <mode> --hostname-strict=false"
msgstr ""

msgid "Enable sticky sessions"
msgstr ""

msgid "Typical cluster deployment consists of the load balancer (reverse proxy) and 2 or more Keycloak servers on private network. For performance purposes, it may be useful if load balancer forwards all requests related to particular browser session to the same Keycloak backend node."
msgstr ""

msgid "The reason is, that Keycloak is using Infinispan distributed cache under the covers for save data related to current authentication session and user session. The Infinispan distributed caches are configured with two owners by default. That means that particular session is primarily stored on two cluster nodes and the other nodes need to lookup the session remotely if they want to access it."
msgstr ""

msgid "For example if authentication session with ID 123 is saved in the Infinispan cache on node1, and then node2 needs to lookup this session, it needs to send the request to node1 over the network to return the particular session entity."
msgstr ""

msgid "It is beneficial if particular session entity is always available locally, which can be done with the help of sticky sessions. The workflow in the cluster environment with the public frontend load balancer and two backend Keycloak nodes can be like this:"
msgstr ""

msgid "User sends initial request to see the Keycloak login screen"
msgstr ""

msgid "This request is served by the frontend load balancer, which forwards it to some random node (eg. node1). Strictly said, the node doesn't need to be random, but can be chosen according to some other criterias (client IP address etc). It all depends on the implementation and configuration of underlying load balancer (reverse proxy)."
msgstr ""

msgid "Keycloak creates authentication session with random ID (eg. 123) and saves it to the Infinispan cache."
msgstr ""

msgid "Infinispan distributed cache assigns the primary owner of the session based on the hash of session ID. See Infinispan documentation for more details around this. Let's assume that Infinispan assigned node2 to be the owner of this session."
msgstr ""

msgid "Keycloak creates the cookie AUTH_SESSION_ID with the format like <session-id>.<owner-node-id> . In our example case, it will be 123.node2 ."
msgstr ""

msgid "Response is returned to the user with the Keycloak login screen and the AUTH_SESSION_ID cookie in the browser"
msgstr ""

msgid "From this point, it is beneficial if load balancer forwards all the next requests to the node2 as this is the node, who is owner of the authentication session with ID 123 and hence Infinispan can lookup this session locally. After authentication is finished, the authentication session is converted to user session, which will be also saved on node2 because it has same ID 123 ."
msgstr ""

msgid "The sticky session is not mandatory for the cluster setup, however it is good for performance for the reasons mentioned above. You need to configure your loadbalancer to sticky over the AUTH_SESSION_ID cookie. How exactly do this is dependent on your loadbalancer."
msgstr ""

msgid "If your proxy supports session affinity without processing cookies from backend nodes, you should set the `spi-sticky-session-encoder-infinispan-should-attach-route` option to `false` in order to avoid attaching the node to cookies and just rely on the reverse proxy capabilities."
msgstr ""

msgid "bin/kc.[sh|bat] start --spi-sticky-session-encoder-infinispan-should-attach-route=false"
msgstr ""

msgid "By default, the `spi-sticky-session-encoder-infinispan-should-attach-route` option value is `true` so that the node name is attached to cookies to indicate to the reverse proxy the node that subsequent requests should be sent to."
msgstr ""

msgid "Exposing the administration console"
msgstr ""

msgid "By default, the administration console URLs are created solely based on the requests to resolve the proper scheme, host name, and port. For instance, if you are using the `edge` proxy mode and your proxy is misconfigured, backend requests from your TLS termination proxy are going to use plain HTTP and potentially cause the administration console from being accessible because URLs are going to be created using the `http` scheme and the proxy does not support plain HTTP."
msgstr ""

msgid "In order to proper expose the administration console, you should make sure that your proxy is setting the `X-Forwarded-*` headers herein mentioned in order to create URLs using the scheme, host name, and port, being exposed by your proxy."
msgstr ""

msgid "Exposed path recommendations"
msgstr ""

msgid "When using a reverse proxy, Keycloak only requires certain paths need to be exposed. The following table shows the recommended paths to expose."
msgstr ""

msgid "Keycloak Path"
msgstr ""

msgid "Reverse Proxy Path"
msgstr ""

msgid "Exposed"
msgstr ""

msgid "Reason"
msgstr ""

msgid "/"
msgstr ""

msgid "-"
msgstr ""

msgid "No"
msgstr ""

msgid "When exposing all paths, admin paths are exposed unnecessarily."
msgstr ""

msgid "/admin/"
msgstr ""

msgid "Exposed admin paths lead to an unnecessary attack vector."
msgstr ""

msgid "/js/"
msgstr ""

msgid "Yes (see note below)"
msgstr ""

msgid "Access to keycloak.js needed for \"internal\" clients, e.g. the account console"
msgstr ""

msgid "/welcome/"
msgstr ""

msgid "No need exists to expose the welcome page after initial installation."
msgstr ""

msgid "/realms/"
msgstr ""

msgid "This path is needed to work correctly, for example, for OIDC endpoints."
msgstr ""

msgid "/resources/"
msgstr ""

msgid "This path is needed to serve assets correctly. It may be served from a CDN instead of the Keycloak path."
msgstr ""

msgid "/robots.txt"
msgstr ""

msgid "Search engine rules"
msgstr ""

msgid "/metrics"
msgstr ""

msgid "Exposed metrics lead to an unnecessary attack vector."
msgstr ""

msgid "/health"
msgstr ""

msgid "Exposed health checks lead to an unnecessary attack vector."
msgstr ""

msgid "As it's true that the `js` path is needed for internal clients like the account console, it's good practice to use `keycloak.js` from a JavaScript package manager like npm or yarn for your external clients."
msgstr ""

msgid "We assume you run Keycloak on the root path `/` on your reverse proxy/gateway's public API. If not, prefix the path with your desired one."
msgstr ""

msgid "Enabling client certificate lookup"
msgstr ""

msgid "When the proxy is configured as a TLS termination proxy the client certificate information can be forwarded to the server through specific HTTP request headers and then used to authenticate clients. You are able to configure how the server is going to retrieve client certificate information depending on the proxy you are using."
msgstr ""

msgid "The server supports some of the most commons TLS termination proxies such as:"
msgstr ""

msgid "Provider"
msgstr ""

msgid "Apache HTTP Server"
msgstr ""

msgid "apache"
msgstr ""

msgid "HAProxy"
msgstr ""

msgid "haproxy"
msgstr ""

msgid "NGINX"
msgstr ""

msgid "nginx"
msgstr ""

msgid "To configure how client certificates are retrieved from the requests you need to:"
msgstr ""

msgid "Enable the corresponding proxy provider"
msgstr ""

msgid "bin/kc.[sh|bat] build --spi-x509cert-lookup-provider=<provider>"
msgstr ""

msgid "Configure the HTTP headers"
msgstr ""

msgid "bin/kc.[sh|bat] start --spi-x509cert-lookup-<provider>-ssl-client-cert=SSL_CLIENT_CERT --spi-x509cert-lookup-<provider>-ssl-cert-chain-prefix=CERT_CHAIN --spi-x509cert-lookup-<provider>-certificate-chain-length=10"
msgstr ""

msgid "When configuring the HTTP headers, you need to make sure the values you are using correspond to the name of the headers forwarded by the proxy with the client certificate information."
msgstr ""

msgid "The available options for configuring a provider are:"
msgstr ""

msgid "Option"
msgstr ""

msgid "ssl-client-cert"
msgstr ""

msgid "The name of the header holding the client certificate"
msgstr ""

msgid "ssl-cert-chain-prefix"
msgstr ""

msgid ""
"The prefix of the headers holding additional certificates in the chain and used to retrieve individual\n"
"certificates accordingly to the length of the chain. For instance, a value `CERT_CHAIN` will tell the server\n"
"to load additional certificates from headers `CERT_CHAIN_0` to `CERT_CHAIN_9` if `certificate-chain-length` is set to `10`."
msgstr ""

msgid "certificate-chain-length"
msgstr ""

msgid "The maximum length of the certificate chain."
msgstr ""

msgid "trust-proxy-verification"
msgstr ""

msgid "Enable trusting NGINX proxy certificate verification, instead of forwarding the certificate to keycloak and verifying it in keycloak."
msgstr ""

msgid "Configuring the NGINX provider"
msgstr ""

msgid "The NGINX SSL/TLS module does not expose the client certificate chain. Keycloak's NGINX certificate lookup provider rebuilds it by using the Keycloak truststore."
msgstr ""

msgid "If you are using this provider, see link:{links_server_keycloak-truststore_url}[{links_server_keycloak-truststore_name}] for how to configure a Keycloak Truststore."
msgstr ""
