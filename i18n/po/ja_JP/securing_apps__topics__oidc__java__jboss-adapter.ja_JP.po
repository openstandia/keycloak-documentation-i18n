msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"POT-Creation-Date: 2017-09-21 04:04+0000\n"
"PO-Revision-Date: 2017-09-21 00:27-0400\n"
"Last-Translator: wadahiro <wadahiro@gmail.com>\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: keycloak-documentation-i18n\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /develop/i18n/po/ja_JP/securing_apps__topics__oidc__java__jboss-adapter.ja_JP.po\n"

#. type: Plain text
msgid "ifeval::[{project_community}==true]"
msgstr ""

#. type: Plain text
msgid "endif::[]"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "JBoss EAP/Wildfly Adapter"
msgstr ""

#. type: Plain text
#| msgid "ifeval::[{project_community}==true]"
msgid "endif::[] ifeval::[{project_product}==true]"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "JBoss EAP Adapter"
msgstr ""

#. type: Plain text
msgid "ifeval::[{project_community}==true] To be able to secure WAR apps deployed on JBoss EAP, WildFly or JBoss AS, you must install and configure the {project_name} adapter subsystem. You then have two options to secure your WARs.  endif::[] ifeval::[{project_product}==true] To be able to secure WAR apps deployed on JBoss EAP, you must install and configure the {project_name} adapter subsystem. You then have two options to secure your WARs.  endif::[]"
msgstr ""

#. type: Plain text
msgid "You can provide an adapter config file in your WAR and change the auth-method to KEYCLOAK within web.xml."
msgstr ""

#. type: Plain text
msgid "Alternatively, you don't have to modify your WAR at all and you can secure it via the {project_name} adapter subsystem configuration in `standalone.xml`.  Both methods are described in this section."
msgstr ""

#. type: Title =====
#| msgid "Installing the Server"
msgid "Installing the adapter"
msgstr ""

#. type: Plain text
msgid "Adapters are available as a separate archive depending on what server version you are using."
msgstr ""

#. type: Plain text
#| msgid "ifeval::[{project_community}==true]"
msgid "ifeval::[{project_community}==true] Install on Wildfly 9, 10 or 11:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ cd $WILDFLY_HOME\n"
"$ unzip keycloak-wildfly-adapter-dist-{project_version}.zip\n"
msgstr ""

#. type: Plain text
msgid "Install on Wildfly 8:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ cd $WILDFLY_HOME\n"
"$ unzip keycloak-wf8-adapter-dist-{project_version}.zip\n"
msgstr ""

#. type: Plain text
msgid "Install on JBoss EAP 7:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ cd $EAP_HOME\n"
"$ unzip keycloak-eap7-adapter-dist-{project_version}.zip\n"
msgstr ""

#. type: Plain text
msgid "Install on JBoss EAP 6:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ cd $EAP_HOME\n"
"$ unzip keycloak-eap6-adapter-dist-{project_version}.zip\n"
msgstr ""

#. type: Plain text
msgid "Install on JBoss AS 7.1:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ cd $JBOSS_HOME\n"
"$ unzip keycloak-as7-adapter-dist-{project_version}.zip\n"
msgstr ""

#. type: Plain text
#| msgid "ifeval::[{project_community}==true]"
msgid "ifeval::[{project_product}==true] Install on JBoss EAP 7:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ cd $EAP_HOME\n"
"$ unzip rh-sso-{project_version}-eap7-adapter.zip\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "$ cd $EAP_HOME\n"
"$ unzip rh-sso-{project_version}-eap6-adapter.zip\n"
msgstr ""

#. type: Plain text
msgid "This ZIP archive contains JBoss Modules specific to the {project_name} adapter. It also contains JBoss CLI scripts to configure the adapter subsystem."
msgstr ""

#. type: Plain text
msgid "To configure the adapter subsystem if the server is not running execute:"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Wildfly 11"
msgstr ""

msgid "$ ./bin/jboss-cli.sh --file=adapter-elytron-install-offline.cli\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Any other server but Wildfly 11"
msgstr ""

msgid "$ ./bin/jboss-cli.sh --file=adapter-install-offline.cli\n"
msgstr ""

#. type: Plain text
msgid "The offline script is not available for JBoss EAP 6"
msgstr ""

#. type: Plain text
msgid "Alternatively, if the server is running execute:"
msgstr ""

msgid "$ ./bin/jboss-cli.sh --file=adapter-elytron-install.cli\n"
msgstr ""

msgid "$ ./bin/jboss-cli.sh --file=adapter-install.cli\n"
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Required Per WAR Configuration"
msgstr ""

#. type: Plain text
msgid "This section describes how to secure a WAR directly by adding configuration and editing files within your WAR package."
msgstr ""

#. type: Plain text
msgid "The first thing you must do is create a `keycloak.json` adapter configuration file within the `WEB-INF` directory of your WAR."
msgstr ""

#. type: Plain text
msgid "The format of this configuration file is described in the <<_java_adapter_config,Java adapter configuration>> section."
msgstr ""

#. type: Plain text
msgid "Next you must set the `auth-method` to `KEYCLOAK` in `web.xml`.  You also have to use standard servlet security to specify role-base constraints on your URLs."
msgstr ""

#. type: Plain text
msgid "Here's an example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\"\n"
"      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"      xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n"
"      version=\"3.0\">\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "    <module-name>application</module-name>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "    <security-constraint>\n"
"        <web-resource-collection>\n"
"            <web-resource-name>Admins</web-resource-name>\n"
"            <url-pattern>/admin/*</url-pattern>\n"
"        </web-resource-collection>\n"
"        <auth-constraint>\n"
"            <role-name>admin</role-name>\n"
"        </auth-constraint>\n"
"        <user-data-constraint>\n"
"            <transport-guarantee>CONFIDENTIAL</transport-guarantee>\n"
"        </user-data-constraint>\n"
"    </security-constraint>\n"
"    <security-constraint>\n"
"        <web-resource-collection>\n"
"            <web-resource-name>Customers</web-resource-name>\n"
"            <url-pattern>/customers/*</url-pattern>\n"
"        </web-resource-collection>\n"
"        <auth-constraint>\n"
"            <role-name>user</role-name>\n"
"        </auth-constraint>\n"
"        <user-data-constraint>\n"
"            <transport-guarantee>CONFIDENTIAL</transport-guarantee>\n"
"        </user-data-constraint>\n"
"    </security-constraint>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "    <login-config>\n"
"        <auth-method>KEYCLOAK</auth-method>\n"
"        <realm-name>this is ignored currently</realm-name>\n"
"    </login-config>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "    <security-role>\n"
"        <role-name>admin</role-name>\n"
"    </security-role>\n"
"    <security-role>\n"
"        <role-name>user</role-name>\n"
"    </security-role>\n"
"</web-app>\n"
msgstr ""

#. type: Title =====
#| msgid "Configuring the Subsystem"
msgid "Securing WARs via Adapter Subsystem"
msgstr ""

#. type: Plain text
msgid "You do not have to modify your WAR to secure it with {project_name}. Instead you can externally secure it via the {project_name} Adapter Subsystem.  While you don't have to specify KEYCLOAK as an `auth-method`, you still have to define the `security-constraints` in `web.xml`.  You do not, however, have to create a `WEB-INF/keycloak.json` file.  This metadata is instead defined within server configuration (i.e. `standalone.xml`) in the {project_name} subsystem definition."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "<extensions>\n"
"  <extension module=\"org.keycloak.keycloak-adapter-subsystem\"/>\n"
"</extensions>\n"
msgstr ""

msgid "<profile>\n"
"  <subsystem xmlns=\"urn:jboss:domain:keycloak:1.1\">\n"
"     <secure-deployment name=\"WAR MODULE NAME.war\">\n"
"        <realm>demo</realm>\n"
"        <auth-server-url>http://localhost:8081/auth</auth-server-url>\n"
"        <ssl-required>external</ssl-required>\n"
"        <resource>customer-portal</resource>\n"
"        <credential name=\"secret\">password</credential>\n"
"     </secure-deployment>\n"
"  </subsystem>\n"
"</profile>\n"
msgstr ""

#. type: Plain text
msgid "The `secure-deployment` `name` attribute identifies the WAR you want to secure.  Its value is the `module-name` defined in `web.xml` with `.war` appended. The rest of the configuration corresponds pretty much one to one with the `keycloak.json` configuration options defined in <<_java_adapter_config,Java adapter configuration>>."
msgstr ""

#. type: Plain text
msgid "The exception is the `credential` element."
msgstr ""

#. type: Plain text
msgid "To make it easier for you, you can go to the {project_name} Administration Console and go to the Client/Installation tab of the application this WAR is aligned with.  It provides an example XML file you can cut and paste."
msgstr ""

#. type: Plain text
msgid "If you have multiple deployments secured by the same realm you can share the realm configuration in a separate element. For example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "<subsystem xmlns=\"urn:jboss:domain:keycloak:1.1\">\n"
"    <realm name=\"demo\">\n"
"        <auth-server-url>http://localhost:8080/auth</auth-server-url>\n"
"        <ssl-required>external</ssl-required>\n"
"    </realm>\n"
"    <secure-deployment name=\"customer-portal.war\">\n"
"        <realm>demo</realm>\n"
"        <resource>customer-portal</resource>\n"
"        <credential name=\"secret\">password</credential>\n"
"    </secure-deployment>\n"
"    <secure-deployment name=\"product-portal.war\">\n"
"        <realm>demo</realm>\n"
"        <resource>product-portal</resource>\n"
"        <credential name=\"secret\">password</credential>\n"
"    </secure-deployment>\n"
"    <secure-deployment name=\"database.war\">\n"
"        <realm>demo</realm>\n"
"        <resource>database-service</resource>\n"
"        <bearer-only>true</bearer-only>\n"
"    </secure-deployment>\n"
"</subsystem>\n"
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Security Domain"
msgstr ""

#. type: Plain text
msgid "To propagate the security context to the EJB tier you need to configure it to use the \"keycloak\" security domain. This can be achieved with the @SecurityDomain annotation:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "import org.jboss.ejb3.annotation.SecurityDomain;\n"
"...\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "@Stateless\n"
"@SecurityDomain(\"keycloak\")\n"
"public class CustomerService {\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "    @RolesAllowed(\"user\")\n"
"    public List<String> getCustomers() {\n"
"        return db.getCustomers();\n"
"    }\n"
"}\n"
msgstr ""

