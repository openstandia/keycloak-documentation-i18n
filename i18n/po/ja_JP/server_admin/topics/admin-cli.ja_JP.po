# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"Last-Translator: katakura__pro <h.katakura@pro-japan.co.jp>, 2017\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/openstandia/teams/79437/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Plain text
msgid "For example, on:"
msgstr "以下に例を示します。"

#. type: Plain text
msgid "Linux:"
msgstr "Linuxの場合："

#. type: Plain text
msgid "Windows:"
msgstr "Windowsの場合："

#. type: Title ===
#, no-wrap
msgid "Working with alternative configurations"
msgstr "代替設定の使用"

#. type: Plain text
msgid "For example:"
msgstr "例："

#. type: Title ==
#, no-wrap
msgid "The Admin CLI"
msgstr "管理CLI"

#. type: Plain text
msgid ""
"In previous chapters, we described how to use the {project_name} Admin "
"Console to perform administrative tasks. You can also perform those tasks "
"from the command-line interface (CLI) by using the Admin CLI command-line "
"tool."
msgstr ""
"前の章では、{project_name}管理コンソールを使用して管理タスクを実行する方法について説明しました。管理CLIツールを使用して、コマンドライン・インターフェイス（CLI）からこれらの管理タスクを実行することもできます。"

#. type: Title ===
#, no-wrap
msgid "Installing the Admin CLI"
msgstr "管理CLIのインストール"

#. type: Plain text
msgid ""
"The Admin CLI is packaged inside {project_name} Server distribution. You can"
" find execution scripts inside the [filename]`bin` directory."
msgstr ""
"管理CLIは、{project_name}サーバーの配布物に含まれています。実行スクリプトは [filename]`bin` ディレクトリーにあります。"

#. type: Plain text
msgid ""
"The Linux script is called [filename]`kcadm.sh`, and the script for Windows "
"is called [filename]`kcadm.bat`."
msgstr ""
"Linuxのスクリプトは [filename]`kcadm.sh` 、Windowsのスクリプトは [filename]`kcadm.bat` です。"

#. type: Plain text
msgid ""
"You can add the {project_name} server directory to your [filename]`PATH` to "
"use the client from any location on your file system."
msgstr ""
"{project_name}サーバー・ディレクトリーを [filename]`PATH` "
"に追加することで、ファイルシステム上の任意の場所からクライアントを使用することができます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ export PATH=$PATH:$KEYCLOAK_HOME/bin\n"
"$ kcadm.sh\n"
msgstr ""
"$ export PATH=$PATH:$KEYCLOAK_HOME/bin\n"
"$ kcadm.sh\n"

#. type: delimited block -
#, no-wrap
msgid ""
"c:\\> set PATH=%PATH%;%KEYCLOAK_HOME%\\bin\n"
"c:\\> kcadm\n"
msgstr ""
"c:\\> set PATH=%PATH%;%KEYCLOAK_HOME%\\bin\n"
"c:\\> kcadm\n"

#. type: Plain text
msgid ""
"We assume the `KEYCLOAK_HOME` environment (env) variable is set to the path "
"where you extracted the {project_name} Server distribution."
msgstr "`KEYCLOAK_HOME` 環境変数は、{project_name}サーバーの配布物を解凍したパスに設定されているものとします。"

#. type: delimited block =
msgid ""
"To avoid repetition, the rest of this document only gives Windows examples "
"in places where the difference in the CLI is more than just in the "
"[command]`kcadm` command name."
msgstr ""
"これ以降、繰り返しの説明を避けるため、CLIの違いが [command]`kcadm` コマンド名だけである場合は、Windowsの例を示しています。"

#. type: Title ===
#, no-wrap
msgid "Using the Admin CLI"
msgstr "管理CLIの利用"

#. type: Plain text
msgid ""
"The Admin CLI works by making HTTP requests to Admin REST endpoints. Access "
"to them is protected and requires authentication."
msgstr ""
"管理CLIは、管理RESTエンドポイントへのHTTPリクエストを作成することによって動作します。エンドポイントへのアクセスは保護されており、認証が必要です。"

#. type: delimited block =
msgid ""
"Consult the Admin REST API documentation for details about JSON attributes "
"for specific endpoints."
msgstr "特定のエンドポイントのJSON属性の詳細については、Admin REST APIのドキュメントを参照してください。"

#. type: Plain text
msgid ""
"Start an authenticated session by providing credentials, that is, logging "
"in. You are ready to perform create, read, update, and delete (CRUD) "
"operations."
msgstr ""
"クレデンシャルを提供すること、つまりログインすることで、認証セッションを開始します。作成、読み取り、更新、および削除（CRUD）操作を実行する準備ができました。"

#. type: Plain text
msgid "For example, on"
msgstr "たとえば"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh config credentials --server http://localhost:8080/auth --realm demo --user admin --client admin\n"
"$ kcadm.sh create realms -s realm=demorealm -s enabled=true -o\n"
"$ C=$(kcadm.sh create clients -r demorealm -s clientId=my_client -s 'redirectUris=[\"http://localhost:8980/myapp/*\"]' -i)\n"
"$ kcadm.sh get clients/$CID/installation/providers/keycloak-oidc-keycloak-json\n"
msgstr ""
"$ kcadm.sh config credentials --server http://localhost:8080/auth --realm demo --user admin --client admin\n"
"$ kcadm.sh create realms -s realm=demorealm -s enabled=true -o\n"
"$ C=$(kcadm.sh create clients -r demorealm -s clientId=my_client -s 'redirectUris=[\"http://localhost:8980/myapp/*\"]' -i)\n"
"$ kcadm.sh get clients/$CID/installation/providers/keycloak-oidc-keycloak-json\n"

#. type: delimited block -
#, no-wrap
msgid ""
"c:\\> kcadm config credentials --server http://localhost:8080/auth --realm demo --user admin --client admin\n"
"c:\\> kcadm create realms -s realm=demorealm -s enabled=true -o\n"
"c:\\> kcadm create clients -r demorealm -s clientId=my_client -s \"redirectUris=[\\\"http://localhost:8980/myapp/*\\\"]\" -i > clientid.txt\n"
"c:\\> set /p CID=<clientid.txt\n"
"c:\\> kcadm get clients/%CID%/installation/providers/keycloak-oidc-keycloak-json\n"
msgstr ""
"c:\\> kcadm config credentials --server http://localhost:8080/auth --realm demo --user admin --client admin\n"
"c:\\> kcadm create realms -s realm=demorealm -s enabled=true -o\n"
"c:\\> kcadm create clients -r demorealm -s clientId=my_client -s \"redirectUris=[\\\"http://localhost:8980/myapp/*\\\"]\" -i > clientid.txt\n"
"c:\\> set /p CID=<clientid.txt\n"
"c:\\> kcadm get clients/%CID%/installation/providers/keycloak-oidc-keycloak-json\n"

#. type: Plain text
msgid ""
"In a production environment, you must access {project_name} with `https:` to"
" avoid exposing tokens to network sniffers. If a server's certificate is not"
" issued by one of the trusted certificate authorities (CAs) that are "
"included in Java's default certificate truststore, prepare a "
"[filename]`truststore.jks` file and instruct the Admin CLI to use it."
msgstr ""
"プロダクション環境では、ネットワーク・スニファーによりトークンが漏洩しないように、{project_name}に `https:` "
"でアクセスする必要があります。サーバーの証明書が、Javaのデフォルトの証明書トラストストアに含まれる信頼できる認証局（CA）のいずれかによって発行されていない場合は、"
" [filename]`truststore.jks` ファイルを準備し、管理CLIに使用するよう指示します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh config truststore --trustpass $PASSWORD "
"~/.keycloak/truststore.jks\n"
msgstr ""
"$ kcadm.sh config truststore --trustpass $PASSWORD "
"~/.keycloak/truststore.jks\n"

#. type: delimited block -
#, no-wrap
msgid ""
"c:\\> kcadm config truststore --trustpass %PASSWORD% "
"%HOMEPATH%\\.keycloak\\truststore.jks\n"
msgstr ""
"c:\\> kcadm config truststore --trustpass %PASSWORD% "
"%HOMEPATH%\\.keycloak\\truststore.jks\n"

#. type: Title ===
#, no-wrap
msgid "Authenticating"
msgstr "認証"

#. type: Plain text
msgid ""
"When you log in with the Admin CLI, you specify a server endpoint URL and a "
"realm, and then you specify a user name. Another option is to specify only a"
" clientId, which results in using a special \"service account.\" When you "
"log in using a user name, you must use a password for the specified user. "
"When you log in using a clientId, you only need the client secret, not the "
"user password. You could also use [command]`Signed JWT` instead of the "
"client secret."
msgstr ""
"管理CLIでログインするときは、サーバーのエンドポイントURLとレルムを指定してから、ユーザー名を指定します。別のオプションはclientIdのみを指定することで、特別な「サービスアカウント」を使用することになります。ユーザー名を使用してログインするときは、指定したユーザーのパスワードを使用する必要があります。clientIdを使用してログインする場合、ユーザーのパスワードではなくクライアント・シークレットのみが必要です。また、クライアント・シークレットの代わりに"
" [command]`Signed JWT` を使用することもできます。"

#. type: Plain text
msgid ""
"Make sure the account used for the session has the proper permissions to "
"invoke Admin REST API operations. For example, the `realm-admin` role of the"
" `realm-management` client allows the user to administer the realm within "
"which the user is defined."
msgstr ""
"セッションに使用されるアカウントに、管理REST API操作を呼び出すための適切な権限があることを確認します。たとえば、 `realm-"
"management` クライアントの `realm-admin` ロールは、ユーザーが定義されているレルムを管理することを許可します。"

#. type: Plain text
msgid ""
"There are two primary mechanisms for authentication. One mechanism uses "
"[command]`kcadm config credentials` to start an authenticated session."
msgstr ""
"認証には主に2つの機構があります。1つ目の機構は、[command]`kcadm config credentials` "
"を使用して認証セッションを開始します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh config credentials --server http://localhost:8080/auth --realm "
"master --user admin --password admin\n"
msgstr ""
"$ kcadm.sh config credentials --server http://localhost:8080/auth --realm "
"master --user admin --password admin\n"

#. type: Plain text
msgid ""
"This approach maintains an authenticated session between the "
"[command]`kcadm` command invocations by saving the obtained access token and"
" the associated refresh token. It may also maintain other secrets in a "
"private configuration file. See <<_working_with_alternative_configurations, "
"next chapter>> for more information on the configuration file."
msgstr ""
"このアプローチは、取得したアクセストークンと関連するリフレッシュ・トークンを保存することによって、 [command]`kcadm` "
"コマンドの呼び出し間で認証されたセッションを維持します。また、プライベート設定ファイルに他のシークレットを保持することもできます。設定ファイルの詳細については、<<_working_with_alternative_configurations,"
" 次の章>>を参照してください。"

#. type: Plain text
msgid ""
"The second approach only authenticates each command invocation for the "
"duration of that invocation. This approach increases the load on the server "
"and the time spent with roundtrips obtaining tokens. The benefit of this "
"approach is not needing to save any tokens between invocations, which means "
"nothing is saved to disk. This mode is used when the [command]`--no-config` "
"argument is specified."
msgstr ""
"2番目のアプローチは、各コマンド呼び出しごとに認証する方法です。この方法は、サーバーへの負荷とトークンを取得するやり取りに費やされる時間を増加させます。利点としては、呼び出しの間にトークンを保存する必要がないため、何もディスクに保存されないことです。このモードは、"
" [command]`--no-config` 引数が指定されている場合に使用されます。"

#. type: Plain text
msgid ""
"For example, when performing an operation, we specify all the information "
"required for authentication."
msgstr "たとえば、操作を実行するときに、認証に必要なすべての情報を指定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get realms --no-config --server http://localhost:8080/auth "
"--realm master --user admin --password admin\n"
msgstr ""
"$ kcadm.sh get realms --no-config --server http://localhost:8080/auth "
"--realm master --user admin --password admin\n"

#. type: Plain text
msgid ""
"Run the [command]`kcadm.sh help` command for more information on using the "
"Admin CLI."
msgstr "管理CLIの使用方法の詳細については、 [command]`kcadm.sh help` コマンドを実行してください。"

#. type: Plain text
msgid ""
"Run the [command]`kcadm.sh config credentials --help` command for more "
"information about starting an authenticated session."
msgstr ""
"認証されたセッションの開始については、[command]`kcadm.sh config credentials --help` "
"コマンドを実行してください。"

#. type: Plain text
msgid ""
"By default, the Admin CLI automatically maintains a configuration file "
"called [filename]kcadm.config located under the user's home directory. In "
"Linux-based systems, the full path name is "
"[filename]$HOME/.keycloak/kcadm.config. On Windows, the full path name is "
"[filename]%HOMEPATH%\\.keycloak\\kcadm.config. You can use the "
"[command]`--config` option to point to a different file or location so you "
"can maintain multiple authenticated sessions in parallel."
msgstr ""
"デフォルトでは、管理CLIはユーザーのホーム・ディレクトリーにある [filename]`kcadm.config` "
"という設定ファイルを自動的に維持します。Linuxベースのシステムでは、フルパス名は[filename]`$HOME/.keycloak/kcadm.config`"
" です。 Windowsでは、フルパス名は [filename]`%HOMEPATH%\\.keycloak\\kcadm.config` です。 "
"[command]`--config` "
"オプションを使うと、別のファイルや場所を指し示すことができるので、複数の認証されたセッションを並行して維持することができます。"

#. type: delimited block =
msgid ""
"It is best to perform operations tied to a single configuration file from a "
"single thread."
msgstr "単一のスレッドから単一の設定ファイルに結び付けられた操作を実行することが最善の方法です。"

#. type: Plain text
msgid ""
"Make sure you do not make the configuration file visible to other users on "
"the system. It contains access tokens and secrets that should be kept "
"private. By default, the [filename]`~/.keycloak` directory and its content "
"are created automatically with proper access limits. If the directory "
"already exists, its permissions are not updated."
msgstr ""
"システム上の他のユーザーが設定ファイルを参照できないようにしてください。プライベートにしておくべきアクセストークンとシークレットが含まれています。デフォルトでは、[filename]`~/.keycloak`"
" ディレクトリーとその内容は適切なアクセス制限で自動的に作成されます。ディレクトリーがすでに存在する場合、そのパーミッションは更新されません。"

#. type: Plain text
msgid ""
"If your unique circumstances require you to avoid storing secrets inside a "
"configuration file, you can do so. It will be less convenient and you will "
"have to make more token requests. To not store secrets, use the [command"
"]`--no-config` option with all your commands and specify all the "
"authentication information needed by the [command]`config credentials` "
"command with each [command]`kcadm` invocation."
msgstr ""
"特殊な状況で、シークレットを設定ファイルに保管しないようにする必要がある場合は、そうすることが可能です。この方法はあまり便利ではなく、トークン・リクエストが多くなります。シークレットを保存しないためには、すべてのコマンドで"
" [command]`--no-config` オプションを使用し、 [command]`config credentials` "
"コマンドで必要とされるすべての認証情報を [command]`kcadm` 呼び出しごとに指定します。"

#. type: Title ===
#, no-wrap
msgid "Basic operations and resource URIs"
msgstr "基本操作とリソースURI"

#. type: Plain text
msgid ""
"The Admin CLI allows you to generically perform CRUD operations against "
"Admin REST API endpoints with additional commands that simplify performing "
"certain tasks."
msgstr ""
"管理CLIでは、特定のタスクの実行を簡略化するために追加されたコマンドを使用して、管理REST APIエンドポイントに対してCRUD操作を実行できます。"

#. type: Plain text
msgid ""
"The main usage pattern is listed below, where the [command]`create`, "
"[command]`get`, [command]`update`, and [command]`delete` commands are mapped"
" to the HTTP verbs `POST`, `GET`, `PUT`, and `DELETE`, respectively."
msgstr ""
"主な使用パターンを以下に示します。 [command]`create` 、 [command]`get` 、 [command]`update` 、 "
"[command]`delete` コマンドは、それぞれHTTP動詞の `POST` 、 `GET` 、 `PUT` 、 `DELETE` "
"に該当します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create ENDPOINT [ARGUMENTS]\n"
"$ kcadm.sh get ENDPOINT [ARGUMENTS]\n"
"$ kcadm.sh update ENDPOINT [ARGUMENTS]\n"
"$ kcadm.sh delete ENDPOINT [ARGUMENTS]\n"
msgstr ""
"$ kcadm.sh create ENDPOINT [ARGUMENTS]\n"
"$ kcadm.sh get ENDPOINT [ARGUMENTS]\n"
"$ kcadm.sh update ENDPOINT [ARGUMENTS]\n"
"$ kcadm.sh delete ENDPOINT [ARGUMENTS]\n"

#. type: Plain text
msgid ""
"ENDPOINT is a target resource URI and can either be absolute (starting with "
"`http:` or `https:`) or relative, used to compose an absolute URL of the "
"following format:"
msgstr ""
"ENDPOINTはターゲット・リソースURIであり、 `http:` または `https:` "
"で始まる絶対URL、もしくは相対URLで、次の形式の絶対URLを構成するために使用されます。"

#. type: delimited block -
#, no-wrap
msgid "SERVER_URI/admin/realms/REALM/ENDPOINT\n"
msgstr "SERVER_URI/admin/realms/REALM/ENDPOINT\n"

#. type: Plain text
msgid ""
"For example, if you authenticate against the server "
"http://localhost:8080/auth and realm is [filename]`master`, then using "
"[filename]`users` as ENDPOINT results in the resource URL "
"http://localhost:8080/auth/admin/realms/master/users."
msgstr ""
"たとえば、http://localhost:8080/authのサーバーに対して認証し、レルムが [filename]`master` "
"の場合、エンドポイントとして [filename]`users` "
"を使用すると、リソースURLはhttp://localhost:8080/auth/admin/realms/master/usersとなります。"

#. type: Plain text
msgid ""
"If you set ENDPOINT to [filename]`clients`, the effective resource URI would"
" be http://localhost:8080/auth/admin/realms/master/clients."
msgstr ""
"エンドポイントに [filename]`clients` "
"を設定すると、有効なリソースURIはhttp://localhost:8080/auth/admin/realms/master/clientsになります。"

#. type: Plain text
msgid ""
"There is a [filename]`realms` endpoint that is treated slightly differently "
"because it is the container for realms. It resolves to:"
msgstr ""
"レルムのコンテナーであるため、少し異なる方法で扱われる [filename]`realms` "
"エンドポイントがあります。このエンドポイントは次のようになります。"

#. type: delimited block -
#, no-wrap
msgid "SERVER_URI/admin/realms\n"
msgstr "SERVER_URI/admin/realms\n"

#. type: Plain text
msgid ""
"There is also a [filename]`serverinfo` endpoint, which is treated the same "
"way because it is independent of realms."
msgstr "同様のエンドポイントとして、[filename]`serverinfo` エンドポイントも存在します。"

#. type: Plain text
msgid ""
"When you authenticate as a user with realm-admin powers, you might need to "
"perform commands on multiple realms. In that case, specify the [command]`-r`"
" option to tell explicitly which realm the command should be executed "
"against. Instead of using [filename]`REALM` as specified via the "
"[command]`--realm` option of [command]`kcadm.sh config credentials`, the "
"[filename]`TARGET_REALM` is used."
msgstr ""
"レルムの管理者権限を持つユーザーとして認証する場合は、複数のレルムでコマンドを実行する必要があります。その場合、 [command]`-r` "
"オプションを指定して、どのレルムに対してコマンドを実行するかを明示的に指示します。 [command]`kcadm.sh config "
"credentials` の [command]`--realm` オプションで指定した [filename]`REALM` を使う代わりに "
"[filename]`TARGET_REALM` が使われます。"

#. type: delimited block -
#, no-wrap
msgid "SERVER_URI/admin/realms/TARGET_REALM/ENDPOINT\n"
msgstr "SERVER_URI/admin/realms/TARGET_REALM/ENDPOINT\n"

#. type: Plain text
msgid "For example,"
msgstr "たとえば"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh config credentials --server http://localhost:8080/auth --realm master --user admin --password admin\n"
"$ kcadm.sh create users -s username=testuser -s enabled=true -r demorealm\n"
msgstr ""
"$ kcadm.sh config credentials --server http://localhost:8080/auth --realm master --user admin --password admin\n"
"$ kcadm.sh create users -s username=testuser -s enabled=true -r demorealm\n"

#. type: Plain text
msgid ""
"In this example, you start a session authenticated as the [filename]`admin` "
"user in the [filename]`master` realm. You then perform a POST call against "
"the resource URL "
"[filename]`http://localhost:8080/auth/admin/realms/demorealm/users`."
msgstr ""
"この例では、 [filename]`master` レルムの [filename]`admin` "
"ユーザーとして認証されたセッションを開始します。その後、リソースURL "
"[filename]`http://localhost:8080/auth/admin/realms/demorealm/users` "
"に対してPOST呼び出しを実行します。"

#. type: Plain text
msgid ""
"The [command]`create` and [command]`update` commands send a JSON body to the"
" server by default. You can use [filename]`-f FILENAME` to read a premade "
"document from a file. When you can use [command]`-f -` option, the message "
"body is read from standard input. You can also specify individual attributes"
" and their values as seen in the previous [command]`create users` example. "
"They are composed into a JSON body and sent to the server."
msgstr ""
"[command]`create` と [command]`update` コマンドは、デフォルトでJSON本体をサーバーに送信します。 "
"[filename]`-f FILENAME` を使うと、ファイルから作成しておいたJSONを読みこむことができます。 [command]`-f -` "
"オプションを使うことができる場合、メッセージ本文は標準入力から読み込まれます。前の [command]`create users` "
"の例に見られるように、個々の属性とその値を指定することもできます。それらはJSONで構成され、サーバーに送信されます。"

#. type: Plain text
msgid ""
"There are several ways to update a resource using the [command]`update` "
"command. You can first determine the current state of a resource and save it"
" to a file, and then edit that file and send it to the server for updating."
msgstr ""
"[command]`update` "
"コマンドを使ってリソースを更新する方法はいくつかあります。リソースの現在の状態をファイルに保存し、そのファイルを編集してサーバーに送信することで更新できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get realms/demorealm > demorealm.json\n"
"$ vi demorealm.json\n"
"$ kcadm.sh update realms/demorealm -f demorealm.json\n"
msgstr ""
"$ kcadm.sh get realms/demorealm > demorealm.json\n"
"$ vi demorealm.json\n"
"$ kcadm.sh update realms/demorealm -f demorealm.json\n"

#. type: Plain text
msgid ""
"This method updates the resource on the server with all the attributes in "
"the sent JSON document."
msgstr "この方法は、送信されたJSONドキュメントのすべての属性を使用してサーバー上のリソースを更新します。"

#. type: Plain text
msgid ""
"Another option is to perform an on-the-fly update using the [command]`-s, "
"--set` options to set new values."
msgstr "もう1つの方法は、 [command]`-s, --set` オプションにより、新しい値を設定して更新することです。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh update realms/demorealm -s enabled=false\n"
msgstr "$ kcadm.sh update realms/demorealm -s enabled=false\n"

#. type: Plain text
msgid "That method only updates the [command]`enabled` attribute to `false`."
msgstr "これは [command]`enabled` 属性を `false` に更新するだけです。"

#. type: Plain text
msgid ""
"By default, the [commamd]`update` command first performs a [command]`get` "
"and then merges the new attribute values with existing values. This is the "
"preferred behavior. In some cases, the endpoint may support the "
"[command]`PUT` command but not the [command]`GET` command. You can use the "
"[command]`-n` option to perform a \"no-merge\" update, which performs a "
"[command]`PUT` command without first running a [command]`GET` command."
msgstr ""
"デフォルトでは、 [commamd]`update` コマンドは最初に [command]`get` "
"を実行し、新しい属性値を既存の値とマージします。これが推奨動作です。場合によっては、エンドポイントは [command]`PUT` "
"コマンドをサポートすることができますが、 [command]`GET` コマンドはサポートしない場合があります。 [command]`-n` "
"オプションを使用して、 [command]`GET` コマンドを最初に実行することなく [command]`PUT` "
"コマンドを実行する\"マージしない\"更新を実行することができます。"

#. type: Title ===
#, no-wrap
msgid "Realm operations"
msgstr "レルム操作"

#. type: Title ====
#, no-wrap
msgid "Creating a new realm"
msgstr "新しいレルムを作成する"

#. type: Plain text
msgid ""
"Use the [command]`create` command on the `realms` endpoint to create a new "
"enabled realm, and set the attributes to `realm` and `enabled`."
msgstr ""
"`realms` エンドポイントで [command]`create` コマンドを使用して新しいレルムを作成し、 `realm` と `enabled`"
" に属性を設定します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh create realms -s realm=demorealm -s enabled=true\n"
msgstr "$ kcadm.sh create realms -s realm=demorealm -s enabled=true\n"

#. type: Plain text
msgid ""
"A realm is not enabled by default. By enabling it, you can use a realm "
"immediately for authentication."
msgstr "レルムはデフォルトで有効になっていません。有効にすることで、認証のためにレルムをすぐに使用できます。"

#. type: Plain text
msgid "A description for a new object can also be in a JSON format."
msgstr "新しいオブジェクトの説明は、JSON形式で記述することもできます。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh create realms -f demorealm.json\n"
msgstr "$ kcadm.sh create realms -f demorealm.json\n"

#. type: Plain text
msgid ""
"You can send a JSON document with realm attributes directly from a file or "
"piped to a standard input."
msgstr "レルム属性を持つJSONドキュメントをファイルや標準入力のパイプから直接送信することもできます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create realms -f - << EOF\n"
"{ \"realm\": \"demorealm\", \"enabled\": true }\n"
"EOF\n"
msgstr ""
"$ kcadm.sh create realms -f - << EOF\n"
"{ \"realm\": \"demorealm\", \"enabled\": true }\n"
"EOF\n"

#. type: delimited block -
#, no-wrap
msgid ""
"c:\\> echo { \"realm\": \"demorealm\", \"enabled\": true } | kcadm create "
"realms -f -\n"
msgstr ""
"c:\\> echo { \"realm\": \"demorealm\", \"enabled\": true } | kcadm create "
"realms -f -\n"

#. type: Title ====
#, no-wrap
msgid "Listing existing realms"
msgstr "既存レルムの一覧表示"

#. type: Plain text
msgid "The following command returns a list of all realms."
msgstr "次のコマンドは、すべてのレルムの一覧を返します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get realms\n"
msgstr "$ kcadm.sh get realms\n"

#. type: delimited block =
msgid ""
"A list of realms is additionally filtered on the server to return only "
"realms a user can see."
msgstr "レルムの一覧は、サーバー上でフィルターされ、ユーザーが見ることができるレルムだけを返します。"

#. type: Plain text
msgid ""
"Returning the entire realm description often provides too much information. "
"Most users are interested only in a subset of attributes, such as realm name"
" and whether the realm is enabled. You can specify which attributes to "
"return by using the [command]`--fields` option."
msgstr ""
"レルムの詳細全体を取得することができますが、レルム名やレルムが有効かどうかなど、一部の属性のみ取得したい場合があります。 "
"[command]`--fields` オプションを使用すると、返す属性を指定することができます。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get realms --fields realm,enabled\n"
msgstr "$ kcadm.sh get realms --fields realm,enabled\n"

#. type: Plain text
msgid "You can also display the result as comma separated values."
msgstr "結果をカンマ区切りの値として表示することもできます。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get realms --fields realm --format csv --noquotes\n"
msgstr "$ kcadm.sh get realms --fields realm --format csv --noquotes\n"

#. type: Title ====
#, no-wrap
msgid "Getting a specific realm"
msgstr "特定のレルムを取得する"

#. type: Plain text
msgid ""
"You append a realm name to a collection URI to get an individual realm."
msgstr "コレクションURIにレルム名を指定し、個々のレルムを取得することができます。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get realms/master\n"
msgstr "$ kcadm.sh get realms/master\n"

#. type: Title ====
#, no-wrap
msgid "Updating a realm"
msgstr "レルムの更新"

#. type: Plain text
msgid ""
"Use the [command]`-s` option to set new values for the attributes when you "
"want to change only some of the realm's attributes."
msgstr "レルムの属性の一部だけを変更したい場合は、 [command]`-s` オプションを使用して属性の新しい値を設定します。"

#. type: Plain text
msgid ""
"If you want to set all writable attributes with new values, run a "
"[command]`get` command, edit the current values in the JSON file, and "
"resubmit."
msgstr ""
"書き込み可能なすべての属性を新しい値に設定するには、 [command]`get` コマンドを実行し、JSONファイルの現在の値を編集して送信します。"

#. type: Title ====
#, no-wrap
msgid "Deleting a realm"
msgstr "レルムの削除"

#. type: Plain text
msgid "Run the following command to delete a realm."
msgstr "レルムを削除するには、次のコマンドを実行します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh delete realms/demorealm\n"
msgstr "$ kcadm.sh delete realms/demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Turning on all login page options for the realm"
msgstr "レルムのすべてのログイン・ページ・オプションを有効にする"

#. type: Plain text
msgid "Set the attributes controlling specific capabilities to `true`."
msgstr "特定の機能を制御する属性を `true` に設定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh update realms/demorealm -s registrationAllowed=true -s "
"registrationEmailAsUsername=true -s rememberMe=true -s verifyEmail=true -s "
"resetPasswordAllowed=true -s editUsernameAllowed=true\n"
msgstr ""
"$ kcadm.sh update realms/demorealm -s registrationAllowed=true -s "
"registrationEmailAsUsername=true -s rememberMe=true -s verifyEmail=true -s "
"resetPasswordAllowed=true -s editUsernameAllowed=true\n"

#. type: Title ====
#, no-wrap
msgid "Listing the realm keys"
msgstr "レルム鍵の一覧表示"

#. type: Plain text
msgid ""
"Use the [command]`get` operation on the [filename]`keys` endpoint of the "
"target realm."
msgstr "対象レルムの [filename]`keys` エンドポイントで [command]`get` 操作を使用してください。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get keys -r demorealm\n"
msgstr "$ kcadm.sh get keys -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Generating new realm keys"
msgstr "新しいレルム鍵の生成"

#. type: Plain text
msgid ""
"Get the ID of the target realm before adding a new RSA-generated key pair."
msgstr "新しいRSA生成キーペアを追加する前に、対象レルムのIDを取得します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get realms/demorealm --fields id --format csv --noquotes\n"
msgstr "$ kcadm.sh get realms/demorealm --fields id --format csv --noquotes\n"

#. type: Plain text
msgid ""
"Add a new key provider with a higher priority than the existing providers as"
" revealed by [command]`kcadm.sh get keys -r demorealm`."
msgstr ""
"[command]`kcadm.sh get keys -r demorealm` "
"で取得した既存のプロバイダーよりも優先度の高い、新しい鍵プロバイダーを追加してください。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create components -r demorealm -s name=rsa-generated -s "
"providerId=rsa-generated -s providerType=org.keycloak.keys.KeyProvider -s "
"parentId=959844c1-d149-41d7-8359-6aa527fca0b0 -s 'config.priority=[\"101\"]'"
" -s 'config.enabled=[\"true\"]' -s 'config.active=[\"true\"]' -s "
"'config.keySize=[\"2048\"]'\n"
msgstr ""
"$ kcadm.sh create components -r demorealm -s name=rsa-generated -s "
"providerId=rsa-generated -s providerType=org.keycloak.keys.KeyProvider -s "
"parentId=959844c1-d149-41d7-8359-6aa527fca0b0 -s 'config.priority=[\"101\"]'"
" -s 'config.enabled=[\"true\"]' -s 'config.active=[\"true\"]' -s "
"'config.keySize=[\"2048\"]'\n"

#. type: delimited block -
#, no-wrap
msgid ""
"c:\\> kcadm create components -r demorealm -s name=rsa-generated -s "
"providerId=rsa-generated -s providerType=org.keycloak.keys.KeyProvider -s "
"parentId=959844c1-d149-41d7-8359-6aa527fca0b0 -s "
"\"config.priority=[\\\"101\\\"]\" -s \"config.enabled=[\\\"true\\\"]\" -s "
"\"config.active=[\\\"true\\\"]\" -s \"config.keySize=[\\\"2048\\\"]\"\n"
msgstr ""
"c:\\> kcadm create components -r demorealm -s name=rsa-generated -s "
"providerId=rsa-generated -s providerType=org.keycloak.keys.KeyProvider -s "
"parentId=959844c1-d149-41d7-8359-6aa527fca0b0 -s "
"\"config.priority=[\\\"101\\\"]\" -s \"config.enabled=[\\\"true\\\"]\" -s "
"\"config.active=[\\\"true\\\"]\" -s \"config.keySize=[\\\"2048\\\"]\"\n"

#. type: Plain text
msgid "Set the `parentId` attribute to the value of the target realm's ID."
msgstr "`parentId` 属性を対象レルムのIDの値に設定します。"

#. type: Plain text
msgid ""
"The newly added key should now become the active key as revealed by "
"[command]`kcadm.sh get keys -r demorealm`."
msgstr ""
"新しく追加された鍵は、 [command]`kcadm.sh get keys -r demorealm` "
"によって取得したとおり、アクティブな鍵になります。"

#. type: Title ====
#, no-wrap
msgid "Adding new realm keys from a Java Key Store file"
msgstr "Javaキーストア・ファイルから新しいレルム鍵を追加する"

#. type: Plain text
msgid ""
"Add a new key provider to add a new key pair already prepared as a JKS file "
"on the server."
msgstr "新しい鍵プロバイダーを追加して、すでにサーバー上にJKSファイルとして用意されている新しい鍵ペアを追加します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create components -r demorealm -s name=java-keystore -s "
"providerId=java-keystore -s providerType=org.keycloak.keys.KeyProvider -s "
"parentId=959844c1-d149-41d7-8359-6aa527fca0b0 -s 'config.priority=[\"101\"]'"
" -s 'config.enabled=[\"true\"]' -s 'config.active=[\"true\"]' -s "
"'config.keystore=[\"/opt/keycloak/keystore.jks\"]' -s "
"'config.keystorePassword=[\"secret\"]' -s 'config.keyPassword=[\"secret\"]' "
"-s 'config.alias=[\"localhost\"]'\n"
msgstr ""
"$ kcadm.sh create components -r demorealm -s name=java-keystore -s "
"providerId=java-keystore -s providerType=org.keycloak.keys.KeyProvider -s "
"parentId=959844c1-d149-41d7-8359-6aa527fca0b0 -s 'config.priority=[\"101\"]'"
" -s 'config.enabled=[\"true\"]' -s 'config.active=[\"true\"]' -s "
"'config.keystore=[\"/opt/keycloak/keystore.jks\"]' -s "
"'config.keystorePassword=[\"secret\"]' -s 'config.keyPassword=[\"secret\"]' "
"-s 'config.alias=[\"localhost\"]'\n"

#. type: delimited block -
#, no-wrap
msgid ""
"c:\\> kcadm create components -r demorealm -s name=java-keystore -s "
"providerId=java-keystore -s providerType=org.keycloak.keys.KeyProvider -s "
"parentId=959844c1-d149-41d7-8359-6aa527fca0b0 -s "
"\"config.priority=[\\\"101\\\"]\" -s \"config.enabled=[\\\"true\\\"]\" -s "
"\"config.active=[\\\"true\\\"]\" -s "
"\"config.keystore=[\\\"/opt/keycloak/keystore.jks\\\"]\" -s "
"\"config.keystorePassword=[\\\"secret\\\"]\" -s "
"\"config.keyPassword=[\\\"secret\\\"]\" -s "
"\"config.alias=[\\\"localhost\\\"]\"\n"
msgstr ""
"c:\\> kcadm create components -r demorealm -s name=java-keystore -s "
"providerId=java-keystore -s providerType=org.keycloak.keys.KeyProvider -s "
"parentId=959844c1-d149-41d7-8359-6aa527fca0b0 -s "
"\"config.priority=[\\\"101\\\"]\" -s \"config.enabled=[\\\"true\\\"]\" -s "
"\"config.active=[\\\"true\\\"]\" -s "
"\"config.keystore=[\\\"/opt/keycloak/keystore.jks\\\"]\" -s "
"\"config.keystorePassword=[\\\"secret\\\"]\" -s "
"\"config.keyPassword=[\\\"secret\\\"]\" -s "
"\"config.alias=[\\\"localhost\\\"]\"\n"

#. type: Plain text
msgid ""
"Make sure to change the attribute values for `keystore`, `keystorePassword`,"
" `keyPassword`, and `alias` to match your specific keystore."
msgstr ""
"特定のキーストアに一致するように、 `keystore` 、 ` keystorePassword` 、`keyPassword` 、および "
"`alias` の属性値を変更してください。"

#. type: Title ====
#, no-wrap
msgid "Making the key passive or disabling the key"
msgstr "鍵をパッシブにする、または無効にする"

#. type: Plain text
msgid "Identify the key you want to make passive"
msgstr "パッシブにしたい鍵を特定する"

#. type: Plain text
msgid ""
"Use the key's `providerId` attribute to construct an endpoint URI, such as "
"[filename]`components/PROVIDER_ID`."
msgstr ""
"鍵の `providerId` 属性を使用して、 [filename]`components/PROVIDER_ID` "
"のようなエンドポイントURIを構築します。"

#. type: Plain text
msgid "Perform an [command]`update`."
msgstr "[command]`update` を実行します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh update components/PROVIDER_ID -r demorealm -s "
"'config.active=[\"false\"]'\n"
msgstr ""
"$ kcadm.sh update components/PROVIDER_ID -r demorealm -s "
"'config.active=[\"false\"]'\n"

#. type: delimited block -
#, no-wrap
msgid ""
"c:\\> kcadm update components/PROVIDER_ID -r demorealm -s "
"\"config.active=[\\\"false\\\"]\"\n"
msgstr ""
"c:\\> kcadm update components/PROVIDER_ID -r demorealm -s "
"\"config.active=[\\\"false\\\"]\"\n"

#. type: Plain text
msgid "You can update other key attributes."
msgstr "他のキー属性を更新することができます。"

#. type: Plain text
msgid ""
"Set a new `enabled` value to disable the key, for example, "
"`config.enabled=[\"false\"]`."
msgstr "たとえば、 `config.enabled=[\"false\"]` のように、鍵を無効にするために `enabled` の値を設定してください。"

#. type: Plain text
msgid ""
"Set a new `priority` value to change the key's priority, for example, "
"`config.priority=[\"110\"]`."
msgstr "鍵の優先度を変更するために新しい `priority` 値を設定します。たとえば、 `config.priority=[\"110\"]` です。"

#. type: Title ====
#, no-wrap
msgid "Deleting an old key"
msgstr "古い鍵を削除する"

#. type: Plain text
msgid ""
"Make sure the key you are deleting has been passive and disabled to prevent "
"any existing tokens held by applications and users from abruptly failing to "
"work."
msgstr "削除している鍵がパッシブで無効になっていることを確認して、アプリケーションやユーザーが保持している既存のトークンを無効にします。"

#. type: Plain text
msgid "Identify the key you want to make passive."
msgstr "パッシブにする鍵を特定します。"

#. type: Plain text
msgid "Use the `providerId` of that key to perform a delete."
msgstr "その鍵の `providerId` を使用して削除を行います。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh delete components/PROVIDER_ID -r demorealm\n"
msgstr "$ kcadm.sh delete components/PROVIDER_ID -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Configuring event logging for a realm"
msgstr "レルムのイベントログの設定"

#. type: Plain text
msgid ""
"Use the [command]`update` command on the [filename]`events/config` endpoint."
msgstr "[filename]`events/config` エンドポイントで [command]`update` コマンドを使用してください。"

#. type: Plain text
msgid ""
"The `eventsListeners` attribute contains a list of "
"EventListenerProviderFactory IDs that specify all event listeners receiving "
"events. Separately, there are attributes that control a built-in event "
"storage, which allows querying past events via the Admin REST API. There is "
"separate control over logging of service calls (`eventsEnabled`) and "
"auditing events triggered during Admin Console or Admin REST API "
"(`adminEventsEnabled`). You may want to set up expiry of old events so that "
"your database does not fill up; `eventsExpiration` is set to time-to-live "
"expressed in seconds."
msgstr ""
"`eventsListeners` "
"属性には、イベントを受け取るすべてのイベントリスナーを指定するEventListenerProviderFactory "
"IDのリストが含まれています。これとは別に、組み込みイベント・ストレージを制御する属性があり、管理REST "
"APIを介して過去のイベントを照会することができます。`eventsEnabled`と呼ばれるサービス呼び出しログと、`adminEventsEnabled`"
" と呼ばれる管理コンソールまたは管理REST "
"APIをトリガーとするイベント監査という独立した制御があります。古いイベントの有効期限を設定してデータベースがいっぱいにならないようにすることができます。"
" `eventsExpiration` は有効期限を秒で表します。"

#. type: Plain text
msgid ""
"Here is an example of setting up a built-in event listener that receives all"
" the events and logs them through jboss-logging. (Using a logger called "
"`org.keycloak.events`, error events are logged as `WARN`, and others are "
"logged as `DEBUG`.)"
msgstr ""
"ここでは、すべてのイベントを受け取り、jboss-loggingを通じてそれらを記録する組み込みのイベント・リスナーを設定する例を示します。 "
"`org.keycloak.events` というロガーを使うと、エラー・イベントは `WARN` として記録され、他は`DEBUG` "
"として記録されます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh update events/config -r demorealm -s 'eventsListeners=[\"jboss-"
"logging\"]'\n"
msgstr ""
"$ kcadm.sh update events/config -r demorealm -s 'eventsListeners=[\"jboss-"
"logging\"]'\n"

#. type: delimited block -
#, no-wrap
msgid ""
"c:\\> kcadm update events/config -r demorealm -s \"eventsListeners"
"=[\\\"jboss-logging\\\"]\"\n"
msgstr ""
"c:\\> kcadm update events/config -r demorealm -s \"eventsListeners"
"=[\\\"jboss-logging\\\"]\"\n"

#. type: Plain text
msgid ""
"Here is an example of turning on storage of all available ERROR "
"events&#8212;not including auditing events&#8212;for 2 days so they can be "
"retrieved via Admin REST."
msgstr "次に、利用可能なすべてのERRORイベント（監査イベントを除く）の保管を2日間有効にする例を示します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh update events/config -r demorealm -s eventsEnabled=true -s "
"'enabledEventTypes=[\"LOGIN_ERROR\",\"REGISTER_ERROR\",\"LOGOUT_ERROR\",\"CODE_TO_TOKEN_ERROR\",\"CLIENT_LOGIN_ERROR\",\"FEDERATED_IDENTITY_LINK_ERROR\",\"REMOVE_FEDERATED_IDENTITY_ERROR\",\"UPDATE_EMAIL_ERROR\",\"UPDATE_PROFILE_ERROR\",\"UPDATE_PASSWORD_ERROR\",\"UPDATE_TOTP_ERROR\",\"VERIFY_EMAIL_ERROR\",\"REMOVE_TOTP_ERROR\",\"SEND_VERIFY_EMAIL_ERROR\",\"SEND_RESET_PASSWORD_ERROR\",\"SEND_IDENTITY_PROVIDER_LINK_ERROR\",\"RESET_PASSWORD_ERROR\",\"IDENTITY_PROVIDER_FIRST_LOGIN_ERROR\",\"IDENTITY_PROVIDER_POST_LOGIN_ERROR\",\"CUSTOM_REQUIRED_ACTION_ERROR\",\"EXECUTE_ACTIONS_ERROR\",\"CLIENT_REGISTER_ERROR\",\"CLIENT_UPDATE_ERROR\",\"CLIENT_DELETE_ERROR\"]'"
" -s eventsExpiration=172800\n"
msgstr ""
"$ kcadm.sh update events/config -r demorealm -s eventsEnabled=true -s "
"'enabledEventTypes=[\"LOGIN_ERROR\",\"REGISTER_ERROR\",\"LOGOUT_ERROR\",\"CODE_TO_TOKEN_ERROR\",\"CLIENT_LOGIN_ERROR\",\"FEDERATED_IDENTITY_LINK_ERROR\",\"REMOVE_FEDERATED_IDENTITY_ERROR\",\"UPDATE_EMAIL_ERROR\",\"UPDATE_PROFILE_ERROR\",\"UPDATE_PASSWORD_ERROR\",\"UPDATE_TOTP_ERROR\",\"VERIFY_EMAIL_ERROR\",\"REMOVE_TOTP_ERROR\",\"SEND_VERIFY_EMAIL_ERROR\",\"SEND_RESET_PASSWORD_ERROR\",\"SEND_IDENTITY_PROVIDER_LINK_ERROR\",\"RESET_PASSWORD_ERROR\",\"IDENTITY_PROVIDER_FIRST_LOGIN_ERROR\",\"IDENTITY_PROVIDER_POST_LOGIN_ERROR\",\"CUSTOM_REQUIRED_ACTION_ERROR\",\"EXECUTE_ACTIONS_ERROR\",\"CLIENT_REGISTER_ERROR\",\"CLIENT_UPDATE_ERROR\",\"CLIENT_DELETE_ERROR\"]'"
" -s eventsExpiration=172800\n"

#. type: delimited block -
#, no-wrap
msgid ""
"c:\\> kcadm update events/config -r demorealm -s eventsEnabled=true -s "
"\"enabledEventTypes=[\\\"LOGIN_ERROR\\\",\\\"REGISTER_ERROR\\\",\\\"LOGOUT_ERROR\\\",\\\"CODE_TO_TOKEN_ERROR\\\",\\\"CLIENT_LOGIN_ERROR\\\",\\\"FEDERATED_IDENTITY_LINK_ERROR\\\",\\\"REMOVE_FEDERATED_IDENTITY_ERROR\\\",\\\"UPDATE_EMAIL_ERROR\\\",\\\"UPDATE_PROFILE_ERROR\\\",\\\"UPDATE_PASSWORD_ERROR\\\",\\\"UPDATE_TOTP_ERROR\\\",\\\"VERIFY_EMAIL_ERROR\\\",\\\"REMOVE_TOTP_ERROR\\\",\\\"SEND_VERIFY_EMAIL_ERROR\\\",\\\"SEND_RESET_PASSWORD_ERROR\\\",\\\"SEND_IDENTITY_PROVIDER_LINK_ERROR\\\",\\\"RESET_PASSWORD_ERROR\\\",\\\"IDENTITY_PROVIDER_FIRST_LOGIN_ERROR\\\",\\\"IDENTITY_PROVIDER_POST_LOGIN_ERROR\\\",\\\"CUSTOM_REQUIRED_ACTION_ERROR\\\",\\\"EXECUTE_ACTIONS_ERROR\\\",\\\"CLIENT_REGISTER_ERROR\\\",\\\"CLIENT_UPDATE_ERROR\\\",\\\"CLIENT_DELETE_ERROR\\\"]\""
" -s eventsExpiration=172800\n"
msgstr ""
"c:\\> kcadm update events/config -r demorealm -s eventsEnabled=true -s "
"\"enabledEventTypes=[\\\"LOGIN_ERROR\\\",\\\"REGISTER_ERROR\\\",\\\"LOGOUT_ERROR\\\",\\\"CODE_TO_TOKEN_ERROR\\\",\\\"CLIENT_LOGIN_ERROR\\\",\\\"FEDERATED_IDENTITY_LINK_ERROR\\\",\\\"REMOVE_FEDERATED_IDENTITY_ERROR\\\",\\\"UPDATE_EMAIL_ERROR\\\",\\\"UPDATE_PROFILE_ERROR\\\",\\\"UPDATE_PASSWORD_ERROR\\\",\\\"UPDATE_TOTP_ERROR\\\",\\\"VERIFY_EMAIL_ERROR\\\",\\\"REMOVE_TOTP_ERROR\\\",\\\"SEND_VERIFY_EMAIL_ERROR\\\",\\\"SEND_RESET_PASSWORD_ERROR\\\",\\\"SEND_IDENTITY_PROVIDER_LINK_ERROR\\\",\\\"RESET_PASSWORD_ERROR\\\",\\\"IDENTITY_PROVIDER_FIRST_LOGIN_ERROR\\\",\\\"IDENTITY_PROVIDER_POST_LOGIN_ERROR\\\",\\\"CUSTOM_REQUIRED_ACTION_ERROR\\\",\\\"EXECUTE_ACTIONS_ERROR\\\",\\\"CLIENT_REGISTER_ERROR\\\",\\\"CLIENT_UPDATE_ERROR\\\",\\\"CLIENT_DELETE_ERROR\\\"]\""
" -s eventsExpiration=172800\n"

#. type: Plain text
msgid ""
"Here is an example of how to reset stored event types to *all available "
"event types*; setting to empty list is the same as enumerating all."
msgstr ""
"保存されているイベントタイプを *すべての利用可能なイベントタイプ* "
"にリセットする方法の例を次に示します。空のリストに設定することは、すべてを列挙することを意味します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh update events/config -r demorealm -s enabledEventTypes=[]\n"
msgstr "$ kcadm.sh update events/config -r demorealm -s enabledEventTypes=[]\n"

#. type: Plain text
msgid "Here is an example of how to enable storage of auditing events."
msgstr "次に、監査イベントの保存を有効にする方法の例を示します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh update events/config -r demorealm -s adminEventsEnabled=true -s "
"adminEventsDetailsEnabled=true\n"
msgstr ""
"$ kcadm.sh update events/config -r demorealm -s adminEventsEnabled=true -s "
"adminEventsDetailsEnabled=true\n"

#. type: Plain text
msgid ""
"Here is an example of how to get the last 100 events; they are ordered from "
"newest to oldest."
msgstr "最新の100個のイベントを取得する方法を次に示します。新しいイベントから順番に並んでいます。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get events --offset 0 --limit 100\n"
msgstr "$ kcadm.sh get events --offset 0 --limit 100\n"

#. type: Plain text
msgid "Here is an example of how to delete all saved events."
msgstr "保存されたすべてのイベントを削除する方法の例を次に示します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm delete events\n"
msgstr "$ kcadm delete events\n"

#. type: Title ====
#, no-wrap
msgid "Flushing the caches"
msgstr "キャッシュのフラッシュ"

#. type: Plain text
msgid ""
"Use the [command]`create` command and one of the following endpoints: "
"[filename]`clear-realm-cache`, [filename]`clear-user-cache`, or [filename"
"]`clear-keys-cache`."
msgstr ""
"[command]`create` コマンドと、 [filename]`clear-realm-cache` 、 [filename]`clear-"
"user-cache` 、 [filename]`clear-keys-cache` のいずれかのエンドポイントを使用します。"

#. type: Plain text
msgid "Set `realm` to the same value as the target realm."
msgstr "`realm` を対象のレルムと同じ値に設定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create clear-realm-cache -r demorealm -s realm=demorealm\n"
"$ kcadm.sh create clear-user-cache -r demorealm -s realm=demorealm\n"
"$ kcadm.sh create clear-keys-cache -r demorealm -s realm=demorealm\n"
msgstr ""
"$ kcadm.sh create clear-realm-cache -r demorealm -s realm=demorealm\n"
"$ kcadm.sh create clear-user-cache -r demorealm -s realm=demorealm\n"
"$ kcadm.sh create clear-keys-cache -r demorealm -s realm=demorealm\n"

#. type: Title ===
#, no-wrap
msgid "Role operations"
msgstr "ロール操作"

#. type: Title ====
#, no-wrap
msgid "Creating a realm role"
msgstr "レルムロールの作成"

#. type: Plain text
msgid "Use the [filename]`roles` endpoint to create a realm role."
msgstr "レルムロールを作成するには、 [filename]`roles` エンドポイントを使用します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create roles -r demorealm -s name=user -s 'description=Regular "
"user with limited set of permissions'\n"
msgstr ""
"$ kcadm.sh create roles -r demorealm -s name=user -s 'description=Regular "
"user with limited set of permissions'\n"

#. type: Title ====
#, no-wrap
msgid "Creating a client role"
msgstr "クライアントロールの作成"

#. type: Plain text
msgid ""
"Identify the client first and then use the [command]`get` command to list "
"available clients when creating a client role."
msgstr ""
"クライアントロールを作成するときは、最初にクライアントを特定し、 [command]`get` "
"コマンドを使用して使用可能なクライアントを一覧表示します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get clients -r demorealm --fields id,clientId\n"
msgstr "$ kcadm.sh get clients -r demorealm --fields id,clientId\n"

#. type: Plain text
msgid ""
"Create a new role by using the [command]`clientId` attribute to construct an"
" endpoint URI, such as [filename]`clients/ID/roles`."
msgstr ""
"[filename]`clients/ID/roles` のようなエンドポイントURIを構築するには、 [command]`clientId` "
"属性を使用して新しいロールを作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create clients/a95b6af3-0bdc-4878-ae2e-6d61a4eca9a0/roles -r "
"demorealm -s name=editor -s 'description=Editor can edit, and publish any "
"article'\n"
msgstr ""
"$ kcadm.sh create clients/a95b6af3-0bdc-4878-ae2e-6d61a4eca9a0/roles -r "
"demorealm -s name=editor -s 'description=Editor can edit, and publish any "
"article'\n"

#. type: Title ====
#, no-wrap
msgid "Listing realm roles"
msgstr "レルムロールの一覧表示"

#. type: Plain text
msgid ""
"Use the [command]`get` command on the [filename]`roles` endpoint to list "
"existing realm roles."
msgstr ""
"[filename]`roles` エンドポイントで [command]`get` コマンドを使用して、既存のレルムロール一覧を取得します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get roles -r demorealm\n"
msgstr "$ kcadm.sh get roles -r demorealm\n"

#. type: Plain text
msgid "You can also use the [command]`get-roles` command."
msgstr "[command]`get-roles` コマンドを使用することもできます。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get-roles -r demorealm\n"
msgstr "$ kcadm.sh get-roles -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Listing client roles"
msgstr "クライアントロールの一覧表示"

#. type: Plain text
msgid ""
"There is a dedicated [command]`get-roles` command to simplify listing realm "
"and client roles. It is an extension of the [command]`get` command and "
"behaves the same with additional semantics for listing roles."
msgstr ""
"レルムロールとクライアントロールを一覧表示するための専用の [command]`get-roles` コマンドがあります。これは[command] "
"`get`コマンドの拡張です。"

#. type: Plain text
msgid ""
"Use the [command]`get-roles` command, passing it either the clientId "
"attribute (via the [command]`--cclientid` option) or [command]`id` (via the "
"[command]`--cid` option) to identify the client to list client roles."
msgstr ""
"クライアントロールを一覧表示するには、[command]`get-roles` コマンドを使用します。 [command] `clientId` または"
" [command] `id` 属性を渡すことで（ [command]`--cclientid` または [command]`--cid` "
"オプションを介して）、クライアントを指定します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get-roles -r demorealm --cclientid realm-management\n"
msgstr "$ kcadm.sh get-roles -r demorealm --cclientid realm-management\n"

#. type: Title ====
#, no-wrap
msgid "Getting a specific realm role"
msgstr "特定のレルムロールを取得する"

#. type: Plain text
msgid ""
"Use the [command]`get` command and the role [filename]`name` to construct an"
" endpoint URI for a specific realm role: [filename]`roles/ROLE_NAME`, where "
"[filename]`user` is the name of the existing role."
msgstr ""
"[filename]`roles/ROLE_NAME` のように特定のレルムロールのエンドポイントURIを構築するには、 [command]`get` "
"コマンドとロール [filename]`name` を使用します。ここで、 [filename]`user`は既存のロールです。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get roles/user -r demorealm\n"
msgstr "$ kcadm.sh get roles/user -r demorealm\n"

#. type: Plain text
msgid ""
"You can also use the special [command]`get-roles` command, passing it a role"
" name (via the [command]`--rolename` option) or ID (via the "
"[command]`--roleid` option)."
msgstr ""
"[command]`get-roles` コマンドを使用することもできます。 [command]`--rolename` オプションでロール名を渡すか、"
" [command]`--roleid` オプションでIDを渡します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get-roles -r demorealm --rolename user\n"
msgstr "$ kcadm.sh get-roles -r demorealm --rolename user\n"

#. type: Title ====
#, no-wrap
msgid "Getting a specific client role"
msgstr "特定のクライアントロールを取得する"

#. type: Plain text
msgid ""
"Use a dedicated [command]`get-roles` command, passing it either the clientId"
" attribute (via the [command]`--cclientid` option) or ID (via the "
"[command]`--cid` option) to identify the client, and passing it either the "
"role name (via the [command]`--rolename` option) or ID (via the "
"[command]`--roleid`) to identify a specific client role."
msgstr ""
"専用の[command]`get-roles` "
"コマンドを使用します。クライアントを識別するためにclientId属性（[command]`--cclientid`オプションで）またはID（[command]`--cid`オプションで）を渡し、クライアントロールを識別するためにロール名（[command]`--rolename`オプションで）またはID（[command]`--roleid`で）を渡します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get-roles -r demorealm --cclientid realm-management --rolename "
"manage-clients\n"
msgstr ""
"$ kcadm.sh get-roles -r demorealm --cclientid realm-management --rolename "
"manage-clients\n"

#. type: Title ====
#, no-wrap
msgid "Updating a realm role"
msgstr "レルムロールの更新"

#. type: Plain text
msgid ""
"Use the [command]`update` command with the same endpoint URI that you used "
"to get a specific realm role."
msgstr ""
"特定のレルムロールを取得するために使用したものと同じエンドポイントURIを指定して [command]`update` コマンドを使用します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh update roles/user -r demorealm -s 'description=Role representing "
"a regular user'\n"
msgstr ""
"$ kcadm.sh update roles/user -r demorealm -s 'description=Role representing "
"a regular user'\n"

#. type: Title ====
#, no-wrap
msgid "Updating a client role"
msgstr "クライアントロールの更新"

#. type: Plain text
msgid ""
"Use the [command]`update` command with the same endpoint URI that you used "
"to get a specific client role."
msgstr "特定のロールを取得するために使用したのと同じエンドポイントURIを指定して [command]`update` コマンドを使用します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh update clients/a95b6af3-0bdc-4878-ae2e-6d61a4eca9a0/roles/editor "
"-r demorealm -s 'description=User that can edit, and publish articles'\n"
msgstr ""
"$ kcadm.sh update clients/a95b6af3-0bdc-4878-ae2e-6d61a4eca9a0/roles/editor "
"-r demorealm -s 'description=User that can edit, and publish articles'\n"

#. type: Title ====
#, no-wrap
msgid "Deleting a realm role"
msgstr "レルムロールの削除"

#. type: Plain text
msgid ""
"Use the [command]`delete` command with the same endpoint URI that you used "
"to get a specific realm role."
msgstr ""
"特定のレルムロールを取得するために使用したものと同じエンドポイントURIを指定して [command]`delete` コマンドを使用します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh delete roles/user -r demorealm\n"
msgstr "$ kcadm.sh delete roles/user -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Deleting a client role"
msgstr "クライアントロールの削除"

#. type: Plain text
msgid ""
"Use the [command]`delete` command with the same endpoint URI that you used "
"to get a specific client role."
msgstr ""
"特定のクライアントロールを取得するために使用したものと同じエンドポイントURIを持つ [command]`delete` コマンドを使用します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh delete clients/a95b6af3-0bdc-4878-ae2e-6d61a4eca9a0/roles/editor "
"-r demorealm\n"
msgstr ""
"$ kcadm.sh delete clients/a95b6af3-0bdc-4878-ae2e-6d61a4eca9a0/roles/editor "
"-r demorealm\n"

#. type: Title ====
#, no-wrap
msgid ""
"Listing assigned, available, and effective realm roles for a composite role"
msgstr "複合ロールに割り当てられた、利用可能な、有効なレルムロールの一覧表示"

#. type: Plain text
msgid ""
"Use a dedicated [command]`get-roles` command to list assigned, available, "
"and effective realm roles for a composite role."
msgstr ""
"専用の [command]`get-roles` コマンドを使用して、複合ロールに割り当てられた、利用可能な、有効なレルムロールを一覧表示します。"

#. type: Plain text
msgid ""
"To list *assigned* realm roles for the composite role, you can specify the "
"target composite role by either name (via the [command]`--rname` option) or "
"ID (via the [command]`--rid` option)."
msgstr ""
"複合ロールに *割り当てられた* レルムロールを一覧表示するには、name（ [command]`--rname` オプションで）またはID（  "
"[command]`--rid` オプションで）のいずれかで対象の複合ロールを指定します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get-roles -r demorealm --rname testrole\n"
msgstr "$ kcadm.sh get-roles -r demorealm --rname testrole\n"

#. type: Plain text
msgid ""
"Use the additional [command]`--effective` option to list *effective* realm "
"roles."
msgstr "*有効な* レルムロールをリストするには、 [command]`--effective` オプションを使用します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get-roles -r demorealm --rname testrole --effective\n"
msgstr "$ kcadm.sh get-roles -r demorealm --rname testrole --effective\n"

#. type: Plain text
msgid ""
"Use the [command]`--available` option to list realm roles that can still be "
"added to the composite role."
msgstr "複合ロールにまだ利用可能なレルムロールを一覧表示するには、 [command]`--available` オプションを使用します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get-roles -r demorealm --rname testrole --available\n"
msgstr "$ kcadm.sh get-roles -r demorealm --rname testrole --available\n"

#. type: Title ====
#, no-wrap
msgid ""
"Listing assigned, available, and effective client roles for a composite role"
msgstr "複合ロールに割り当てられた、利用可能な、有効なクライアントロールの一覧表示"

#. type: Plain text
msgid ""
"Use a dedicated [command]`get-roles` command to list assigned, available, "
"and effective client roles for a composite role."
msgstr ""
"専用の [command]`get-roles` コマンドを使用して、複合ロールに割り当てられた、利用可能な、有効なクライアントロールを一覧表示します。"

#. type: Plain text
msgid ""
"To list *assigned* client roles for the composite role, you can specify the "
"target composite role by either name (via the [command]`--rname` option) or "
"ID (via the [command]`--rid` option) and client by either the clientId "
"attribute (via the [command]`--cclientid` option) or ID (via the "
"[command]`--cid` option)."
msgstr ""
"複合ロールの *割り当てられた* クライアントロールを一覧表示するには、 [command]`--rname` オプションでロール名を指定するか、または"
" [command]`--rid` オプションでIDを指定します。また、クライアントを特定するために、 [command] `--cclientid` "
"オプションでclientId属性、または [command]` --cid` オプションでIDのいずれかを使用します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get-roles -r demorealm --rname testrole --cclientid realm-"
"management\n"
msgstr ""
"$ kcadm.sh get-roles -r demorealm --rname testrole --cclientid realm-"
"management\n"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get-roles -r demorealm --rname testrole --cclientid realm-"
"management --effective\n"
msgstr ""
"$ kcadm.sh get-roles -r demorealm --rname testrole --cclientid realm-"
"management --effective\n"

#. type: Plain text
msgid ""
"Use the [command]`--available` option to list realm roles that can still be "
"added to the target composite role."
msgstr "対象の複合ロールにまだ追加できるレルムロールを一覧表示するには、 [command]`--available` オプションを使用します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get-roles -r demorealm --rname testrole --cclientid realm-"
"management --available\n"
msgstr ""
"$ kcadm.sh get-roles -r demorealm --rname testrole --cclientid realm-"
"management --available\n"

#. type: Title ====
#, no-wrap
msgid "Adding realm roles to a composite role"
msgstr "レルムロールを複合ロールに追加する"

#. type: Plain text
msgid ""
"There is a dedicated [command]`add-roles` command that can be used for "
"adding realm roles and client roles."
msgstr "レルムロールとクライアントロールを追加するために使用できる専用の [command]`add-roles` コマンドがあります。"

#. type: Plain text
msgid ""
"The following example adds the [command]`user` role to the composite role "
"[command]`testrole`."
msgstr "[command]`user` ロールを複合ロール [command]`testrole` に追加する例を示します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh add-roles --rname testrole --rolename user -r demorealm\n"
msgstr "$ kcadm.sh add-roles --rname testrole --rolename user -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Removing realm roles from a composite role"
msgstr "複合ロールからレルムロールを削除する"

#. type: Plain text
msgid ""
"There is a dedicated [command]`remove-roles` command that can be used to "
"remove realm roles and client roles."
msgstr "レルムロールとクライアントロールを削除するための専用の [command]`remove-roles` コマンドがあります。"

#. type: Plain text
msgid ""
"The following example removes the [command]`user` role from the target "
"composite role [command]`testrole`."
msgstr "次の例では、ターゲットの複合ロール [command]`testrole` から [command]`user` ロールを削除します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh remove-roles --rname testrole --rolename user -r demorealm\n"
msgstr "$ kcadm.sh remove-roles --rname testrole --rolename user -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Adding client roles to a realm role"
msgstr "レルムロールへのクライアントロールの追加"

#. type: Plain text
msgid ""
"Use a dedicated [command]`add-roles` command that can be used for adding "
"realm roles and client roles."
msgstr "レルムロールとクライアントロールを追加するために使用できる専用の [command]`add-roles` コマンドを使用します。"

#. type: Plain text
msgid ""
"The following example adds the roles defined on the client [command]`realm-"
"management` - `create-client` role and the [command]`view-users` role to the"
" [command]`testrole` composite role."
msgstr ""
"次の例では、 [command]`realm-management` - `create-client` クライアントに定義されたロールと "
"[command]`view-users` ロールを複合ロール [command]`testrole` に追加します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh add-roles -r demorealm --rname testrole --cclientid realm-"
"management --rolename create-client --rolename view-users\n"
msgstr ""
"$ kcadm.sh add-roles -r demorealm --rname testrole --cclientid realm-"
"management --rolename create-client --rolename view-users\n"

#. type: Title ====
#, no-wrap
msgid "Adding client roles to a client role"
msgstr "クライアントロールへのクライアントロールの追加"

#. type: Plain text
msgid ""
"Determine the ID of the composite client role by using the [command]`get-"
"roles` command."
msgstr "[command]`get-roles` コマンドを使用して複合クライアントロールのIDを特定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get-roles -r demorealm --cclientid test-client --rolename "
"operations\n"
msgstr ""
"$ kcadm.sh get-roles -r demorealm --cclientid test-client --rolename "
"operations\n"

#. type: Plain text
msgid ""
"Assume that there is a client with a clientId attribute of [filename]`test-"
"client`, a client role called [filename]`support`, and another client role "
"called [filename]`operations`, which becomes a composite role, that has an "
"ID of \"fc400897-ef6a-4e8c-872b-1581b7fa8a71\"."
msgstr ""
"[filename]`test-client` のclientId属性をもつクライアントと、 [filename]`support` "
"というクライアントロール、および [filename]`operations` という別のクライアントロールがあり、IDが\"fc400897"
"-ef6a-4e8c-872b-1581b7fa8a71\"という複合ロールになると仮定します。"

#. type: Plain text
msgid "Use the following example to add another role to the composite role."
msgstr "次の例を使用して、複合ロールに別のロールを追加します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh add-roles -r demorealm --cclientid test-client --rid fc400897"
"-ef6a-4e8c-872b-1581b7fa8a71 --rolename support\n"
msgstr ""
"$ kcadm.sh add-roles -r demorealm --cclientid test-client --rid fc400897"
"-ef6a-4e8c-872b-1581b7fa8a71 --rolename support\n"

#. type: Plain text
msgid ""
"List the roles of a composite role by using the [command]`get-roles --all` "
"command."
msgstr "[command]`get-roles --all` コマンドを使用して、複合ロールのロールを一覧表示します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get-roles --rid fc400897-ef6a-4e8c-872b-1581b7fa8a71 --all\n"
msgstr "$ kcadm.sh get-roles --rid fc400897-ef6a-4e8c-872b-1581b7fa8a71 --all\n"

#. type: Title ====
#, no-wrap
msgid "Removing client roles from a composite role"
msgstr "複合ロールからのクライアントロールの削除"

#. type: Plain text
msgid ""
"Use a dedicated [command]`remove-roles` command to remove client roles from "
"a composite role."
msgstr "複合ロールからクライアントロールを削除するには、専用の [command]`remove-roles` コマンドを使用します。"

#. type: Plain text
msgid ""
"Use the following example to remove two roles defined on the client "
"[command]`realm management` - `create-client` role and the [command]`view-"
"users` role from the [command]`testrole` composite role."
msgstr ""
"次の例を使用して、 [command]`realm management` - `create-client` ロールと [command]`view-"
"users` ロールで定義された2つのクライアントロールを複合ロール [command]`testrole` から削除します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh remove-roles -r demorealm --rname testrole --cclientid realm-"
"management --rolename create-client --rolename view-users\n"
msgstr ""
"$ kcadm.sh remove-roles -r demorealm --rname testrole --cclientid realm-"
"management --rolename create-client --rolename view-users\n"

#. type: Title ===
#, no-wrap
msgid "Client operations"
msgstr "クライアント操作"

#. type: Title ====
#, no-wrap
msgid "Creating a client"
msgstr "クライアントの作成"

#. type: Plain text
msgid ""
"Run the [command]`create` command on a [filename]`clients` endpoint to "
"create a new client."
msgstr ""
"[filename]`clients` エンドポイントで [command]`create` コマンドを実行して、新しいクライアントを作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create clients -r demorealm -s clientId=myapp -s enabled=true\n"
msgstr ""
"$ kcadm.sh create clients -r demorealm -s clientId=myapp -s enabled=true\n"

#. type: Plain text
msgid ""
"Specify a secret if you want to set a secret for adapters to authenticate."
msgstr "認証するアダプターのシークレットを設定したい場合は、シークレットを指定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create clients -r demorealm -s clientId=myapp -s enabled=true -s "
"clientAuthenticatorType=client-secret -s secret=d0b8122f-8dfb-46b7-b68a-"
"f5cc4e25d000\n"
msgstr ""
"$ kcadm.sh create clients -r demorealm -s clientId=myapp -s enabled=true -s "
"clientAuthenticatorType=client-secret -s secret=d0b8122f-8dfb-46b7-b68a-"
"f5cc4e25d000\n"

#. type: Title ====
#, no-wrap
msgid "Listing clients"
msgstr "クライアントの一覧表示"

#. type: Plain text
msgid ""
"Use the [command]`get` command on the [filename]`clients` endpoint to list "
"clients."
msgstr ""
"クライアントの一覧を表示するには、 [filename]`clients` エンドポイントで [command]`get` コマンドを使用します。"

#. type: Plain text
msgid ""
"This example filters the output to list only the [filename]`id` and "
"[filename]`clientId` attributes."
msgstr ""
"この例では、 [filename]`id` および [filename]`clientId` "
"属性のみを一覧出力するように、出力をフィルタリングしています。"

#. type: Title ====
#, no-wrap
msgid "Getting a specific client"
msgstr "特定のクライアントを取得する"

#. type: Plain text
msgid ""
"Use a client's ID to construct an endpoint URI that targets a specific "
"client, such as [filename]`clients/ID`."
msgstr ""
"クライアントのIDを使用して、 [filename]`clients/ID` のような特定のクライアントを対象とするエンドポイントURIを構築します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get clients/c7b8547f-e748-4333-95d0-410b76b3f4a3 -r demorealm\n"
msgstr ""
"$ kcadm.sh get clients/c7b8547f-e748-4333-95d0-410b76b3f4a3 -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Getting the current secret for a specific client"
msgstr "特定のクライアントの現在のシークレットの取得"

#. type: Plain text
msgid ""
"Use a client's ID to construct an endpoint URI, such as "
"[filename]`clients/ID/client-secret`."
msgstr ""
"クライアントのIDを使用して、 [filename]`clients/ID/client-secret` のようなエンドポイントURIを構築します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get clients/$CID/client-secret\n"
msgstr "$ kcadm.sh get clients/$CID/client-secret\n"

#. type: Title ====
#, no-wrap
msgid ""
"Getting an adapter configuration file (keycloak.json) for a specific client"
msgstr "特定のクライアントのアダプター設定ファイル（keycloak.json）の取得"

#. type: Plain text
msgid ""
"Use a client's ID to construct an endpoint URI that targets a specific "
"client, such as [filename]`clients/ID/installation/providers/keycloak-oidc-"
"keycloak-json`."
msgstr ""
"クライアントIDを使用して、 [filename]`clients/ID/installation/providers/keycloak-oidc-"
"keycloak-json` のような特定のクライアントを対象とするエンドポイントURIを構築します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get "
"clients/c7b8547f-e748-4333-95d0-410b76b3f4a3/installation/providers"
"/keycloak-oidc-keycloak-json -r demorealm\n"
msgstr ""
"$ kcadm.sh get "
"clients/c7b8547f-e748-4333-95d0-410b76b3f4a3/installation/providers"
"/keycloak-oidc-keycloak-json -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid ""
"Getting a Wildfly subsystem adapter configuration for a specific client"
msgstr "特定のクライアントのためのWildFlyサブシステム・アダプター設定の取得"

#. type: Plain text
msgid ""
"Use a client's ID to construct an endpoint URI that targets a specific "
"client, such as [filename]`clients/ID/installation/providers/keycloak-oidc-"
"jboss-subsystem`."
msgstr ""
"クライアントIDを使用して、 [filename]`clients/ID/installation/providers/keycloak-oidc-"
"jboss-subsystem` のような特定のクライアントを対象とするエンドポイントURIを構築します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get "
"clients/c7b8547f-e748-4333-95d0-410b76b3f4a3/installation/providers"
"/keycloak-oidc-jboss-subsystem -r demorealm\n"
msgstr ""
"$ kcadm.sh get "
"clients/c7b8547f-e748-4333-95d0-410b76b3f4a3/installation/providers"
"/keycloak-oidc-jboss-subsystem -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Updating a client"
msgstr "クライアントの更新"

#. type: Plain text
msgid ""
"Use the [command]`update` command with the same endpoint URI that you used "
"to get a specific client."
msgstr "特定のクライアントを取得するために使用したURIと同じエンドポイントURIで、 [command]`update` コマンドを使用します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh update clients/c7b8547f-e748-4333-95d0-410b76b3f4a3 -r demorealm "
"-s enabled=false -s publicClient=true -s "
"'redirectUris=[\"http://localhost:8080/myapp/*\"]' -s "
"baseUrl=http://localhost:8080/myapp -s "
"adminUrl=http://localhost:8080/myapp\n"
msgstr ""
"$ kcadm.sh update clients/c7b8547f-e748-4333-95d0-410b76b3f4a3 -r demorealm "
"-s enabled=false -s publicClient=true -s "
"'redirectUris=[\"http://localhost:8080/myapp/*\"]' -s "
"baseUrl=http://localhost:8080/myapp -s "
"adminUrl=http://localhost:8080/myapp\n"

#. type: delimited block -
#, no-wrap
msgid ""
"c:\\> kcadm update clients/c7b8547f-e748-4333-95d0-410b76b3f4a3 -r demorealm"
" -s enabled=false -s publicClient=true -s "
"\"redirectUris=[\\\"http://localhost:8080/myapp/*\\\"]\" -s "
"baseUrl=http://localhost:8080/myapp -s "
"adminUrl=http://localhost:8080/myapp\n"
msgstr ""
"c:\\> kcadm update clients/c7b8547f-e748-4333-95d0-410b76b3f4a3 -r demorealm"
" -s enabled=false -s publicClient=true -s "
"\"redirectUris=[\\\"http://localhost:8080/myapp/*\\\"]\" -s "
"baseUrl=http://localhost:8080/myapp -s "
"adminUrl=http://localhost:8080/myapp\n"

#. type: Title ====
#, no-wrap
msgid "Deleting a client"
msgstr "クライアントの削除"

#. type: Plain text
msgid ""
"Use the [command]`delete` command with the same endpoint URI that you used "
"to get a specific client."
msgstr "特定のクライアントを取得するのに使用したURIと同じエンドポイントURIで、 [command]`delete` コマンドを使用します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh delete clients/c7b8547f-e748-4333-95d0-410b76b3f4a3 -r "
"demorealm\n"
msgstr ""
"$ kcadm.sh delete clients/c7b8547f-e748-4333-95d0-410b76b3f4a3 -r "
"demorealm\n"

#. type: Title ===
#, no-wrap
msgid "User operations"
msgstr "ユーザー操作"

#. type: Title ====
#, no-wrap
msgid "Creating a user"
msgstr "ユーザーの作成"

#. type: Plain text
msgid ""
"Run the [command]`create` command on the [filename]`users` endpoint to "
"create a new user."
msgstr "[filename]`users` エンドポイントで [command]`create` コマンドを実行して、新しいユーザーを作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create users -r demorealm -s username=testuser -s enabled=true\n"
msgstr ""
"$ kcadm.sh create users -r demorealm -s username=testuser -s enabled=true\n"

#. type: Title ====
#, no-wrap
msgid "Listing users"
msgstr "ユーザーの一覧表示"

#. type: Plain text
msgid ""
"Use the [filename]`users` endpoint to list users. The target user will have "
"to change the password the next time they log in."
msgstr ""
"[filename]`users` "
"エンドポイントを使用してユーザーをリストします。対象ユーザーは、次回のログイン時にパスワードを変更する必要があります。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get users -r demorealm --offset 0 --limit 1000\n"
msgstr "$ kcadm.sh get users -r demorealm --offset 0 --limit 1000\n"

#. type: Plain text
msgid ""
"You can filter users by [filename]`username`, [filename]`firstName`, "
"[filename]`lastName`, or [filename]`email`."
msgstr ""
"[filename]`username` 、 [filename]`firstName` 、 [filename]`lastName` 、 "
"[filename]`email` でユーザーをフィルタリングできます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get users -r demorealm -q email=google.com\n"
"$ kcadm.sh get users -r demorealm -q username=testuser\n"
msgstr ""
"$ kcadm.sh get users -r demorealm -q email=google.com\n"
"$ kcadm.sh get users -r demorealm -q username=testuser\n"

#. type: delimited block =
msgid ""
"Filtering does not use exact matching. For example, the above example would "
"match the value of the [filename]`username` attribute against the "
"[filename]`\\*testuser*`` pattern."
msgstr ""
"フィルタリングでは完全一致は使用されません。たとえば、上記の例では、[filename]`\\*testuser*`` のパターンと "
"[filename]`username` 属性の値が一致します。"

#. type: Plain text
msgid ""
"You can also filter across multiple attributes by specifying multiple "
"[command]`-q` options, which return only users that match the condition for "
"all the attributes."
msgstr ""
"複数の [command]`-q` "
"オプションを指定することで、複数の属性をフィルタリングすることもできます。このオプションは、すべての属性の条件に一致するユーザーのみを返します。"

#. type: Title ====
#, no-wrap
msgid "Getting a specific user"
msgstr "特定のユーザーを取得する"

#. type: Plain text
msgid ""
"Use a user's ID to compose an endpoint URI, such as "
"[filename]`users/USER_ID`."
msgstr "[filename]`users/USER_ID` などのエンドポイントURIを作成するには、ユーザーのIDを使用します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get users/0ba7a3fd-6fd8-48cd-a60b-2e8fd82d56e2 -r demorealm\n"
msgstr ""
"$ kcadm.sh get users/0ba7a3fd-6fd8-48cd-a60b-2e8fd82d56e2 -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Updating a user"
msgstr "ユーザーの更新"

#. type: Plain text
msgid ""
"Use the [command]`update` command with the same endpoint URI that you used "
"to get a specific user."
msgstr "特定のユーザーを取得するために使用したURIと同じエンドポイントURIで、 [command]`update` コマンドを使用します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh update users/0ba7a3fd-6fd8-48cd-a60b-2e8fd82d56e2 -r demorealm -s"
" "
"'requiredActions=[\"VERIFY_EMAIL\",\"UPDATE_PROFILE\",\"CONFIGURE_TOTP\",\"UPDATE_PASSWORD\"]'\n"
msgstr ""
"$ kcadm.sh update users/0ba7a3fd-6fd8-48cd-a60b-2e8fd82d56e2 -r demorealm -s"
" "
"'requiredActions=[\"VERIFY_EMAIL\",\"UPDATE_PROFILE\",\"CONFIGURE_TOTP\",\"UPDATE_PASSWORD\"]'\n"

#. type: delimited block -
#, no-wrap
msgid ""
"c:\\> kcadm update users/0ba7a3fd-6fd8-48cd-a60b-2e8fd82d56e2 -r demorealm "
"-s "
"\"requiredActions=[\\\"VERIFY_EMAIL\\\",\\\"UPDATE_PROFILE\\\",\\\"CONFIGURE_TOTP\\\",\\\"UPDATE_PASSWORD\\\"]\"\n"
msgstr ""
"c:\\> kcadm update users/0ba7a3fd-6fd8-48cd-a60b-2e8fd82d56e2 -r demorealm "
"-s "
"\"requiredActions=[\\\"VERIFY_EMAIL\\\",\\\"UPDATE_PROFILE\\\",\\\"CONFIGURE_TOTP\\\",\\\"UPDATE_PASSWORD\\\"]\"\n"

#. type: Title ====
#, no-wrap
msgid "Deleting a user"
msgstr "ユーザーの削除"

#. type: Plain text
msgid ""
"Use the [command]`delete` command with the same endpoint URI that you used "
"to get a specific user."
msgstr "特定のユーザーを取得するために使用したURIと同じエンドポイントURIで [command]`delete` コマンドを使用します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh delete users/0ba7a3fd-6fd8-48cd-a60b-2e8fd82d56e2 -r demorealm\n"
msgstr ""
"$ kcadm.sh delete users/0ba7a3fd-6fd8-48cd-a60b-2e8fd82d56e2 -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Resetting a user's password"
msgstr "ユーザー・パスワードのリセット"

#. type: Plain text
msgid ""
"Use the dedicated [command]`set-password` command to reset a user's "
"password."
msgstr "専用の [command]`set-password` コマンドを使用して、ユーザーのパスワードをリセットします。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh set-password -r demorealm --username testuser --new-password "
"NEWPASSWORD --temporary\n"
msgstr ""
"$ kcadm.sh set-password -r demorealm --username testuser --new-password "
"NEWPASSWORD --temporary\n"

#. type: Plain text
msgid ""
"That command sets a temporary password for the user. The target user will "
"have to change the password the next time they log in."
msgstr "このコマンドは、ユーザーの一時パスワードを設定します。対象ユーザーは、次回のログイン時にパスワードを変更する必要があります。"

#. type: Plain text
msgid ""
"You can use [command]`--userid` if you want to specify the user by using the"
" [filename]`id` attribute."
msgstr "[filename]`id` 属性を使用してユーザーを指定する場合は、 [command]`--userid` を使用できます。"

#. type: Plain text
msgid ""
"You can achieve the same result using the [command]`update` command on an "
"endpoint constructed from the one you used to get a specific user, such as "
"[filename]`users/USER_ID/reset-password`."
msgstr ""
"[filename]`users/USER_ID/reset-password` "
"のように、特定のユーザーを取得するために使用したユーザーIDで構築されたエンドポイントで [command]`update` "
"コマンドを使用しても同じ結果が得ることができます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh update users/0ba7a3fd-6fd8-48cd-a60b-2e8fd82d56e2/reset-password "
"-r demorealm -s type=password -s value=NEWPASSWORD -s temporary=true -n\n"
msgstr ""
"$ kcadm.sh update users/0ba7a3fd-6fd8-48cd-a60b-2e8fd82d56e2/reset-password "
"-r demorealm -s type=password -s value=NEWPASSWORD -s temporary=true -n\n"

#. type: Plain text
msgid ""
"The last parameter ([command]`-n`) ensures that only the [command]`PUT` "
"command is performed without a prior [command]`GET` command. It is necessary"
" in this instance because the [command]`reset-password` endpoint does not "
"support [command]`GET`."
msgstr ""
"最後のパラメーター [command]`-n` は、 [command]`GET` コマンドなしで [command]`PUT` "
"コマンドだけが実行されるようにします。この場合、 [command]`reset-password` エンドポイントは [command]`GET` "
"をサポートしていないので指定が必要です。"

#. type: Title ====
#, no-wrap
msgid "Listing assigned, available, and effective realm roles for a user"
msgstr "ユーザーに割り当てられた、使用可能な、有効なレルムロールの一覧表示"

#. type: Plain text
msgid ""
"You can use a dedicated [command]`get-roles` command to list assigned, "
"available, and effective realm roles for a user."
msgstr ""
"専用の [command]`get-roles` "
"コマンドを使用して、ユーザーに割り当てられた、利用可能で、有効なレルムロールを一覧表示することができます。"

#. type: Plain text
msgid ""
"Specify the target user by either user name or ID to list *assigned* realm "
"roles for the user."
msgstr "ユーザーの *割り当てられた* レルムロールを一覧表示するには、ユーザー名またはIDのどちらかを使用して対象ユーザーを指定します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get-roles -r demorealm --uusername testuser\n"
msgstr "$ kcadm.sh get-roles -r demorealm --uusername testuser\n"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get-roles -r demorealm --uusername testuser --effective\n"
msgstr "$ kcadm.sh get-roles -r demorealm --uusername testuser --effective\n"

#. type: Plain text
msgid ""
"Use the [command]`--available` option to list realm roles that can still be "
"added to the user."
msgstr "ユーザーに利用可能なレルムロールを一覧表示するには、 [command]`--available` オプションを使用します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get-roles -r demorealm --uusername testuser --available\n"
msgstr "$ kcadm.sh get-roles -r demorealm --uusername testuser --available\n"

#. type: Title ====
#, no-wrap
msgid "Listing assigned, available, and effective client roles for a user"
msgstr "ユーザーに割り当てられた、利用可能な、有効なクライアントロールの一覧表示"

#. type: Plain text
msgid ""
"Use a dedicated [command]`get-roles` command to list assigned, available, "
"and effective client roles for a user."
msgstr ""
"専用の [command]`get-roles` コマンドを使用して、ユーザーに割り当てられた、利用可能で、有効なクライアントロールを一覧表示します。"

#. type: Plain text
msgid ""
"Specify the target user by either a user name (via the "
"[command]`--uusername` option) or an ID (via the [command]`--uid` option) "
"and client by either a clientId attribute (via the [command]`--cclientid` "
"option) or an ID (via the [command]`--cid` option) to list *assigned* client"
" roles for the user."
msgstr ""
"ユーザーに *割り当てられた* クライアントロールを一覧表示するには、[command]`--uusername` オプションでユーザー名を指定するか、"
" [command]`--uid` オプションでIDを指定して対象ユーザー特定し、 [command]`--cclientid` "
"オプションでclientId属性を指定するか、 [command]`--cid` オプションでIDを指定して対象クライアントを特定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get-roles -r demorealm --uusername testuser --cclientid realm-"
"management\n"
msgstr ""
"$ kcadm.sh get-roles -r demorealm --uusername testuser --cclientid realm-"
"management\n"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get-roles -r demorealm --uusername testuser --cclientid realm-"
"management --effective\n"
msgstr ""
"$ kcadm.sh get-roles -r demorealm --uusername testuser --cclientid realm-"
"management --effective\n"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get-roles -r demorealm --uusername testuser --cclientid realm-"
"management --available\n"
msgstr ""
"$ kcadm.sh get-roles -r demorealm --uusername testuser --cclientid realm-"
"management --available\n"

#. type: Title ====
#, no-wrap
msgid "Adding realm roles to a user"
msgstr "ユーザーにレルムロールを追加する"

#. type: Plain text
msgid ""
"Use a dedicated [command]`add-roles` command to add realm roles to a user."
msgstr "レルムロールをユーザーに追加するには、専用の [command]`add-roles` コマンドを使用します。"

#. type: Plain text
msgid ""
"Use the following example to add the [command]`user` role to user "
"[command]`testuser`."
msgstr "次の例を使用して、 [command]`user` ロールをユーザー [command]`testuser` に追加します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh add-roles --username testuser --rolename user -r demorealm\n"
msgstr "$ kcadm.sh add-roles --username testuser --rolename user -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Removing realm roles from a user"
msgstr "ユーザーからレルムロールを削除する"

#. type: Plain text
msgid ""
"Use a dedicated [command]`remove-roles` command to remove realm roles from a"
" user."
msgstr "ユーザーからレルムロールを削除するには、専用の [command]`remove-roles` コマンドを使用します。"

#. type: Plain text
msgid ""
"Use the following example to remove the [command]`user` role from the user "
"[command]`testuser`."
msgstr "以下の例を使用して、ユーザー [command]`testuser` から [command]`user` ロールを削除します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh remove-roles --username testuser --rolename user -r demorealm\n"
msgstr ""
"$ kcadm.sh remove-roles --username testuser --rolename user -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Adding client roles to a user"
msgstr "ユーザーにクライアントロールを追加する"

#. type: Plain text
msgid ""
"Use a dedicated [command]`add-roles` command to add client roles to a user."
msgstr "クライアントロールをユーザーに追加するには、専用の [command]`add-roles` コマンドを使用します。"

#. type: Plain text
msgid ""
"Use the following example to add two roles defined on the client "
"[command]`realm management` - `create-client` role and the [command]`view-"
"users` role to the user `testuser`."
msgstr ""
"次の例を使用して、クライアント[command]`realm management` に定義された2つのロール（ [command]`create-"
"client` ロールと [command]`view-users` ロール）を `testuser` ユーザーに追加します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh add-roles -r demorealm --uusername testuser --cclientid realm-"
"management --rolename create-client --rolename view-users\n"
msgstr ""
"$ kcadm.sh add-roles -r demorealm --uusername testuser --cclientid realm-"
"management --rolename create-client --rolename view-users\n"

#. type: Title ====
#, no-wrap
msgid "Removing client roles from a user"
msgstr "ユーザーからのクライアントロールの削除"

#. type: Plain text
msgid ""
"Use a dedicated [command]`remove-roles` command to remove client roles from "
"a user."
msgstr "専用の [command]`remove-roles` コマンドを使用して、クライアントロールをユーザーから削除します。"

#. type: Plain text
msgid ""
"Use the following example to remove two roles defined on the realm "
"management client."
msgstr "次の例を使用して、レルム管理クライアントで定義されている2つのロールを削除します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh remove-roles -r demorealm --uusername testuser --cclientid realm-"
"management --rolename create-client --rolename view-users\n"
msgstr ""
"$ kcadm.sh remove-roles -r demorealm --uusername testuser --cclientid realm-"
"management --rolename create-client --rolename view-users\n"

#. type: Title ====
#, no-wrap
msgid "Listing a user's sessions"
msgstr "ユーザー・セッションの一覧表示"

#. type: Plain text
msgid ""
"Identify the user's ID, and then use it to compose an endpoint URI, such as "
"[filename]`users/ID/sessions`."
msgstr ""
"ユーザーのIDを特定し、それを利用して [filename]`users/ID/sessions` などのエンドポイントURIを作成します。"

#. type: Plain text
msgid ""
"Use the [command]`get` command to retrieve a list of the user's sessions."
msgstr "ユーザーのセッションの一覧を取得するには、 [command]`get` コマンドを使用します。"

#. type: delimited block -
#, no-wrap
msgid "$kcadm get users/6da5ab89-3397-4205-afaa-e201ff638f9e/sessions\n"
msgstr "$kcadm get users/6da5ab89-3397-4205-afaa-e201ff638f9e/sessions\n"

#. type: Title ====
#, no-wrap
msgid "Logging out a user from a specific session"
msgstr "特定のセッションからユーザーをログアウトする"

#. type: Plain text
msgid "Determine the session's ID as described above."
msgstr "上記のようにセッションのIDを決定します。"

#. type: Plain text
msgid ""
"Use the session's ID to compose an endpoint URI, such as "
"[filename]`sessions/ID`."
msgstr "セッションIDを使用して、 [filename]`sessions/ID` のようなエンドポイントURIを作成します。"

#. type: Plain text
msgid "Use the [command]`delete` command to invalidate the session."
msgstr "セッションを無効にするには、 [command]`delete` コマンドを使用します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh delete sessions/d0eaa7cc-8c5d-489d-811a-69d3c4ec84d1\n"
msgstr "$ kcadm.sh delete sessions/d0eaa7cc-8c5d-489d-811a-69d3c4ec84d1\n"

#. type: Title ====
#, no-wrap
msgid "Logging out a user from all sessions"
msgstr "すべてのセッションからユーザーをログアウトする"

#. type: Plain text
msgid ""
"You need a user's ID to construct an endpoint URI, such as "
"[filename]`users/ID/logout`."
msgstr "[filename]`users/ID/logout` のようなエンドポイントURIを構築するには、ユーザーのIDが必要です。"

#. type: Plain text
msgid ""
"Use the [command]`create` command to perform [command]`POST` on that "
"endpoint URI."
msgstr "そのエンドポイントURIに対して、 [command]`create` コマンドを使って [command]`POST` を実行します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create users/6da5ab89-3397-4205-afaa-e201ff638f9e/logout -r "
"demorealm -s realm=demorealm -s user=6da5ab89-3397-4205-afaa-e201ff638f9e\n"
msgstr ""
"$ kcadm.sh create users/6da5ab89-3397-4205-afaa-e201ff638f9e/logout -r "
"demorealm -s realm=demorealm -s user=6da5ab89-3397-4205-afaa-e201ff638f9e\n"

#. type: Title ===
#, no-wrap
msgid "Group operations"
msgstr "グループの操作"

#. type: Title ====
#, no-wrap
msgid "Creating a group"
msgstr "グループの作成"

#. type: Plain text
msgid ""
"Use the [command]`create` command on the [filename]`groups` endpoint to "
"create a new group."
msgstr ""
"新しいグループを作成するには、 [filename]`groups` エンドポイントで [command]`create` コマンドを使用します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh create groups -r demorealm -s name=Group\n"
msgstr "$ kcadm.sh create groups -r demorealm -s name=Group\n"

#. type: Title ====
#, no-wrap
msgid "Listing groups"
msgstr "グループの一覧表示"

#. type: Plain text
msgid ""
"Use the [command]`get` command on the [filename]`groups` endpoint to list "
"groups."
msgstr "グループを一覧表示するには、 [filename]`groups` エンドポイントで [command]`get` コマンドを使います。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get groups -r demorealm\n"
msgstr "$ kcadm.sh get groups -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Getting a specific group"
msgstr "特定のグループを取得する"

#. type: Plain text
msgid ""
"Use the group's ID to construct an endpoint URI, such as `groups/GROUP_ID`."
msgstr "グループのIDを使用して、 `groups/GROUP_ID` のようなのエンドポイントURIを作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get groups/51204821-0580-46db-8f2d-27106c6b5ded -r demorealm\n"
msgstr ""
"$ kcadm.sh get groups/51204821-0580-46db-8f2d-27106c6b5ded -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Updating a group"
msgstr "グループの更新"

#. type: Plain text
msgid ""
"Use the [command]`update` command with the same endpoint URI that you used "
"to get a specific group."
msgstr "特定のグループを取得するために使用したものと同じエンドポイントURIを指定して [command]`update` コマンドを使用します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh update groups/51204821-0580-46db-8f2d-27106c6b5ded -s "
"'attributes.email=[\"group@example.com\"]' -r demorealm\n"
msgstr ""
"$ kcadm.sh update groups/51204821-0580-46db-8f2d-27106c6b5ded -s "
"'attributes.email=[\"group@example.com\"]' -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Deleting a group"
msgstr "グループの削除"

#. type: Plain text
msgid ""
"Use the [command]`delete` command with the same endpoint URI that you used "
"to get a specific group."
msgstr "特定のグループを取得するために使用したものと同じエンドポイントURIで [command]`delete` コマンドを使用します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh delete groups/51204821-0580-46db-8f2d-27106c6b5ded -r demorealm\n"
msgstr ""
"$ kcadm.sh delete groups/51204821-0580-46db-8f2d-27106c6b5ded -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Creating a subgroup"
msgstr "サブグループの作成"

#. type: Plain text
msgid ""
"Find the ID of the parent group by listing groups, and then use that ID to "
"construct an endpoint URI, such as [filename]`groups/GROUP_ID/children`."
msgstr ""
"グループを一覧表示して親グループのIDを探し、そのIDを使用して [filename]`groups/GROUP_ID/children` "
"のようなエンドポイントURIを構築します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create groups/51204821-0580-46db-8f2d-27106c6b5ded/children -r "
"demorealm -s name=SubGroup\n"
msgstr ""
"$ kcadm.sh create groups/51204821-0580-46db-8f2d-27106c6b5ded/children -r "
"demorealm -s name=SubGroup\n"

#. type: Title ====
#, no-wrap
msgid "Moving a group under another group"
msgstr "グループを別のグループの下に移動する"

#. type: Plain text
msgid ""
"Find the ID of an existing parent group and of an existing child group."
msgstr "既存の親グループと既存の子グループのIDを検索します。"

#. type: Plain text
msgid ""
"Use the parent group's ID to construct an endpoint URI, such as "
"[filename]`groups/PARENT_GROUP_ID/children`."
msgstr ""
"親グループのIDを使用して、 [filename]`groups/PARENT_GROUP_ID/children` "
"のようなエンドポイントURIを作成します。"

#. type: Plain text
msgid ""
"Run the [command]`create` command on this endpoint and pass the child "
"group's ID as a JSON body."
msgstr "このエンドポイントで [command]`create` コマンドを実行し、子グループのIDをJSONとして渡します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create groups/51204821-0580-46db-8f2d-27106c6b5ded/children -r "
"demorealm -s id=08d410c6-d585-4059-bb07-54dcb92c5094\n"
msgstr ""
"$ kcadm.sh create groups/51204821-0580-46db-8f2d-27106c6b5ded/children -r "
"demorealm -s id=08d410c6-d585-4059-bb07-54dcb92c5094\n"

#. type: Title ====
#, no-wrap
msgid "Get groups for a specific user"
msgstr "特定のユーザーのグループを取得する"

#. type: Plain text
msgid ""
"Use a user's ID to determine a user's membership in groups to compose an "
"endpoint URI, such as [filename]`users/USER_ID/groups`."
msgstr ""
"グループ内のユーザーのメンバーシップを判断するため、ユーザーのIDを使用して、 [filename]`users/USER_ID/groups` "
"のようなエンドポイントURIを構成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get users/b544f379-5fc4-49e5-8a8d-5cfb71f46f53/groups -r "
"demorealm\n"
msgstr ""
"$ kcadm.sh get users/b544f379-5fc4-49e5-8a8d-5cfb71f46f53/groups -r "
"demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Adding a user to a group"
msgstr "グループにユーザーを追加する"

#. type: Plain text
msgid ""
"Use the [command]`update` command with an endpoint URI composed from user's "
"ID and a group's ID, such as [filename]`users/USER_ID/groups/GROUP_ID`, to "
"add a user to a group."
msgstr ""
"グループにユーザーを追加するには、ユーザーのIDとグループのID（ [filename]`users/USER_ID/groups/GROUP_ID` "
"のような）から構成されるエンドポイントURIで、 [command]`update` コマンドを使用します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh update users/b544f379-5fc4-49e5-8a8d-"
"5cfb71f46f53/groups/ce01117a-7426-4670-a29a-5c118056fe20 -r demorealm -s "
"realm=demorealm -s userId=b544f379-5fc4-49e5-8a8d-5cfb71f46f53 -s "
"groupId=ce01117a-7426-4670-a29a-5c118056fe20 -n\n"
msgstr ""
"$ kcadm.sh update users/b544f379-5fc4-49e5-8a8d-"
"5cfb71f46f53/groups/ce01117a-7426-4670-a29a-5c118056fe20 -r demorealm -s "
"realm=demorealm -s userId=b544f379-5fc4-49e5-8a8d-5cfb71f46f53 -s "
"groupId=ce01117a-7426-4670-a29a-5c118056fe20 -n\n"

#. type: Title ====
#, no-wrap
msgid "Removing a user from a group"
msgstr "グループからユーザーを削除する"

#. type: Plain text
msgid ""
"Use the [command]`delete` command on the same endpoint URI as used for "
"adding a user to a group, such as [filename]`users/USER_ID/groups/GROUP_ID`,"
" to remove a user from a group."
msgstr ""
"グループからユーザーを削除するには、 [filename]`users/USER_ID/groups/GROUP_ID` "
"のように、ユーザーをグループに追加するときに使用したのと同じエンドポイントURIで [command]`delete` コマンドを使用します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh delete users/b544f379-5fc4-49e5-8a8d-"
"5cfb71f46f53/groups/ce01117a-7426-4670-a29a-5c118056fe20 -r demorealm\n"
msgstr ""
"$ kcadm.sh delete users/b544f379-5fc4-49e5-8a8d-"
"5cfb71f46f53/groups/ce01117a-7426-4670-a29a-5c118056fe20 -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Listing assigned, available, and effective realm roles for a group"
msgstr "グループに割り当てられた、使用可能で、有効なレルムロールの一覧表示"

#. type: Plain text
msgid ""
"Use a dedicated [command]`get-roles` command to list assigned, available, "
"and effective realm roles for a group."
msgstr ""
"グループに割り当てられた、使用可能で、有効なレルムロールを一覧表示するには、専用の [command]`get-roles` コマンドを使用します。"

#. type: Plain text
msgid ""
"Specify the target group by name (via the [command]`--gname` option), path "
"(via the [command] `--gpath` option), or ID (via the [command]`--gid` "
"option) to list *assigned* realm roles for the group."
msgstr ""
"対象グループを、 [command]`--gname` オプションで名前を指定するか、 [command] `--gpath` "
"オプションでパスをを指定する、または [command]`--gid` オプションでIDを指定することにとり、そのグループの *割り当てられた* "
"レルムロールを一覧表示します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get-roles -r demorealm --gname Group\n"
msgstr "$ kcadm.sh get-roles -r demorealm --gname Group\n"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get-roles -r demorealm --gname Group --effective\n"
msgstr "$ kcadm.sh get-roles -r demorealm --gname Group --effective\n"

#. type: Plain text
msgid ""
"Use the [command]`--available` option to list realm roles that can still be "
"added to the group."
msgstr "グループに追加できるレルムロールを表示するには、 [command]`--available` オプションを使用します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get-roles -r demorealm --gname Group --available\n"
msgstr "$ kcadm.sh get-roles -r demorealm --gname Group --available\n"

#. type: Title ====
#, no-wrap
msgid "Listing assigned, available, and effective client roles for a group"
msgstr "グループに割り当てられた、利用可能で、有効なクライアントロールの一覧表示"

#. type: Plain text
msgid ""
"Use a dedicated [command]`get-roles` command to list assigned, available, "
"and effective client roles for a group."
msgstr ""
"グループに割り当てられた、利用可能で、有効なクライアントロールを一覧表示するには、専用の [command]`get-roles` "
"コマンドを使用します。"

#. type: Plain text
msgid ""
"Specify the target group by either name (via the [command]`--gname` option) "
"or ID (via the [command]`--gid` option), and client by either the clientId "
"attribute (via the [command] `--cclientid` option) or ID (via the "
"[command]`--id` option) to list *assigned* client roles for the user."
msgstr ""
"[command]`--gname` オプションで名前指定するか、 [command]`--gid` "
"オプションでIDを指定することでグループを指定します。また、 [command] `--cclientid` "
"オプションでclientId属性を指定するか、 [command]`--id` オプションでIDを指定することでクライアントを特定し、ユーザーの "
"*割り当てられた* クライアントロールを一覧表示します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get-roles -r demorealm --gname Group --cclientid realm-"
"management\n"
msgstr ""
"$ kcadm.sh get-roles -r demorealm --gname Group --cclientid realm-"
"management\n"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get-roles -r demorealm --gname Group --cclientid realm-management"
" --effective\n"
msgstr ""
"$ kcadm.sh get-roles -r demorealm --gname Group --cclientid realm-management"
" --effective\n"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get-roles -r demorealm --gname Group --cclientid realm-management"
" --available\n"
msgstr ""
"$ kcadm.sh get-roles -r demorealm --gname Group --cclientid realm-management"
" --available\n"

#. type: Title ===
#, no-wrap
msgid "Identity provider operations"
msgstr " アイデンティティー・プロバイダーの操作"

#. type: Title ====
#, no-wrap
msgid "Listing available identity providers"
msgstr "使用可能なアイデンティティー・プロバイダー の一覧表示"

#. type: Plain text
msgid ""
"Use the [filename]`serverinfo` endpoint to list available identity "
"providers."
msgstr "使用可能なアイデンティティー・プロバイダーを一覧表示するには、 [filename]`serverinfo` エンドポイントを使用します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get serverinfo -r demorealm --fields 'identityProviders(*)'\n"
msgstr ""
"$ kcadm.sh get serverinfo -r demorealm --fields 'identityProviders(*)'\n"

#. type: delimited block =
msgid ""
"The [filename]`serverinfo` endpoint is handled similarly to the "
"[filename]`realms` endpoint in that it is not resolved relative to a target "
"realm because it exists outside any specific realm."
msgstr ""
"[filename]`serverinfo` エンドポイントは、特定のレルムの外に存在するため、対象レルムに対して関連がないという点において "
"[filename]`realms` エンドポイントと同様に扱われます。"

#. type: Title ====
#, no-wrap
msgid "Listing configured identity providers"
msgstr "設定済みアイデンティティー・プロバイダー の一覧表示"

#. type: Plain text
msgid "Use the [filename]`identity-provider/instances` endpoint."
msgstr "[filename]`identity-provider/instances` エンドポイントを使用します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get identity-provider/instances -r demorealm --fields "
"alias,providerId,enabled\n"
msgstr ""
"$ kcadm.sh get identity-provider/instances -r demorealm --fields "
"alias,providerId,enabled\n"

#. type: Title ====
#, no-wrap
msgid "Getting a specific configured identity provider"
msgstr "特定の設定済みアイデンティティー・プロバイダーの取得"

#. type: Plain text
msgid ""
"Use the [command]`alias` attribute of the identity provider to construct an "
"endpoint URI, such as [filename]`identity-provider/instances/ALIAS`, to get "
"a specific identity provider."
msgstr ""
"アイデンティティー・プロバイダーの [command]`alias` 属性を使用して、  [filename]`identity-"
"provider/instances/ALIAS` などのエンドポイントURIを構築し、特定のアイデンティティー・プロバイダーを取得します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get identity-provider/instances/facebook -r demorealm\n"
msgstr "$ kcadm.sh get identity-provider/instances/facebook -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Removing a specific configured identity provider"
msgstr "特定の設定済みアイデンティティー・プロバイダーの削除"

#. type: Plain text
msgid ""
"Use the [command]`delete` command with the same endpoint URI that you used "
"to get a specific configured identity provider to remove a specific "
"configured identity provider."
msgstr ""
"特定の設定済みのアイデンティティー・プロバイダーを取得するために使用したものと同じエンドポイントURIで、 [command]`delete` "
"コマンドを使用します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh delete identity-provider/instances/facebook -r demorealm\n"
msgstr "$ kcadm.sh delete identity-provider/instances/facebook -r demorealm\n"

#. type: Title ====
#, no-wrap
msgid "Configuring a Keycloak OpenID Connect identity provider"
msgstr "Keycloak OpenID Connect アイデンティティー・プロバイダーの設定"

#. type: Plain text
msgid ""
"Use [command]`keycloak-oidc` as the [command]`providerId` when creating a "
"new identity provider instance."
msgstr ""
"新しいアイデンティティー・プロバイダー・インスタンスを作成するときは、 [command]`providerId` として [command"
"]`keycloak-oidc` を使用してください。"

#. type: Plain text
msgid ""
"Provide the [command]`config` attributes: [command]`authorizationUrl`, "
"[command]`tokenUrl`, [command]`clientId`, and [command]`clientSecret`."
msgstr ""
"[command]`authorizationUrl` 、 [command]`tokenUrl` 、 [command]`clientId` 、  "
"[command]`clientSecret` の [command]`config` 属性として指定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s alias"
"=keycloak-oidc -s providerId=keycloak-oidc -s enabled=true -s "
"'config.useJwksUrl=\"true\"' -s "
"config.authorizationUrl=http://localhost:8180/auth/realms/demorealm/protocol"
"/openid-connect/auth -s "
"config.tokenUrl=http://localhost:8180/auth/realms/demorealm/protocol/openid-"
"connect/token -s config.clientId=demo-oidc-provider -s "
"config.clientSecret=secret\n"
msgstr ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s alias"
"=keycloak-oidc -s providerId=keycloak-oidc -s enabled=true -s "
"'config.useJwksUrl=\"true\"' -s "
"config.authorizationUrl=http://localhost:8180/auth/realms/demorealm/protocol"
"/openid-connect/auth -s "
"config.tokenUrl=http://localhost:8180/auth/realms/demorealm/protocol/openid-"
"connect/token -s config.clientId=demo-oidc-provider -s "
"config.clientSecret=secret\n"

#. type: Title ====
#, no-wrap
msgid "Configuring an OpenID Connect identity provider"
msgstr "OpenID Connect アイデンティティー・プロバイダーの設定"

#. type: Plain text
msgid ""
"Configure the generic OpenID Connect provider the same way you configure the"
" Keycloak OpenID Connect provider, except that you set the "
"[command]`providerId` attribute value to [command]`oidc`."
msgstr ""
"[command]`providerId` 属性値を [command]`oidc` に設定することを除いて、Keycloak OpenID "
"Connectプロバイダーを設定するのと同じ方法で、汎用OpenID Connectプロバイダーを設定します。"

#. type: Title ====
#, no-wrap
msgid "Configuring a SAML 2 identity provider"
msgstr "SAML 2 アイデンティティー・プロバイダーの設定"

#. type: Plain text
msgid "Use [command]`saml` as the [command]`providerId`."
msgstr "[command]`providerId` として [command]`saml` を使います。"

#. type: Plain text
msgid ""
"Provide the [command]`config` attributes: [command]`singleSignOnServiceUrl`,"
" [command]`nameIDPolicyFormat`, and [command]`signatureAlgorithm`."
msgstr ""
"[command]`singleSignOnServiceUrl` 、 [command]`nameIDPolicyFormat` 、  "
"[command]`signatureAlgorithm` を [command]`config` 属性として指定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s alias=saml -s "
"providerId=saml -s enabled=true -s 'config.useJwksUrl=\"true\"' -s "
"config.singleSignOnServiceUrl=http://localhost:8180/auth/realms/saml-broker-"
"realm/protocol/saml -s config.nameIDPolicyFormat=urn:oasis:names:tc:SAML:2.0"
":nameid-format:persistent -s config.signatureAlgorithm=RSA_SHA256\n"
msgstr ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s alias=saml -s "
"providerId=saml -s enabled=true -s 'config.useJwksUrl=\"true\"' -s "
"config.singleSignOnServiceUrl=http://localhost:8180/auth/realms/saml-broker-"
"realm/protocol/saml -s config.nameIDPolicyFormat=urn:oasis:names:tc:SAML:2.0"
":nameid-format:persistent -s config.signatureAlgorithm=RSA_SHA256\n"

#. type: Title ====
#, no-wrap
msgid "Configuring a Facebook identity provider"
msgstr "Facebookアイデンティティー・プロバイダーの設定"

#. type: Plain text
msgid "Use [command]`facebook` as the [command]`providerId`."
msgstr "[command]`providerId` として [command]`facebook` を使用します。"

#. type: Plain text
msgid ""
"Provide the [command]`config` attributes: [command]`clientId` and "
"[command]`clientSecret`. You can find these attributes in the Facebook "
"Developers application configuration page for your application."
msgstr ""
"[command]`clientId` と [command]`clientSecret` の[command]`config` "
"属性をして指定します。これらの属性は、アプリケーションのFacebook Developersアプリケーション設定ページで確認できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s alias=facebook"
" -s providerId=facebook -s enabled=true  -s 'config.useJwksUrl=\"true\"' -s "
"config.clientId=FACEBOOK_CLIENT_ID -s "
"config.clientSecret=FACEBOOK_CLIENT_SECRET\n"
msgstr ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s alias=facebook"
" -s providerId=facebook -s enabled=true  -s 'config.useJwksUrl=\"true\"' -s "
"config.clientId=FACEBOOK_CLIENT_ID -s "
"config.clientSecret=FACEBOOK_CLIENT_SECRET\n"

#. type: Title ====
#, no-wrap
msgid "Configuring a Google identity provider"
msgstr "Googleアイデンティティー・プロバイダーの設定"

#. type: Plain text
msgid "Use [command]`google` as the [command]`providerId`."
msgstr "[command]`providerId` として [command]`google` を使用します。"

#. type: Plain text
msgid ""
"Provide the [command]`config` attributes: [command]`clientId` and "
"[command]`clientSecret`. You can find these attributes in the Google "
"Developers application configuration page for your application."
msgstr ""
"[command]`clientId` と [command]`clientSecret` を [command]`config` "
"属性として指定します。これらの属性は、アプリケーションのGoogle Developersアプリケーション設定ページで確認できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s alias=google "
"-s providerId=google -s enabled=true  -s 'config.useJwksUrl=\"true\"' -s "
"config.clientId=GOOGLE_CLIENT_ID -s "
"config.clientSecret=GOOGLE_CLIENT_SECRET\n"
msgstr ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s alias=google "
"-s providerId=google -s enabled=true  -s 'config.useJwksUrl=\"true\"' -s "
"config.clientId=GOOGLE_CLIENT_ID -s "
"config.clientSecret=GOOGLE_CLIENT_SECRET\n"

#. type: Title ====
#, no-wrap
msgid "Configuring a Twitter identity provider"
msgstr "Twitterアイデンティティー・プロバイダーの設定"

#. type: Plain text
msgid "Use [command]`twitter` as the [command]`providerId`."
msgstr "[command]`providerId` として [command]`twitter` を使用します。"

#. type: Plain text
msgid ""
"Provide the [command]`config` attributes [command]`clientId` and "
"[command]`clientSecret`. You can find these attributes in the Twitter "
"Application Management application configuration page for your application."
msgstr ""
"[command]`clientId` と [command]`clientSecret` を [command]`config` "
"属性として指定します。これらの属性は、アプリケーションのTwitterアプリケーション管理のアプリケーション設定ページで確認できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s alias=google "
"-s providerId=google -s enabled=true  -s 'config.useJwksUrl=\"true\"' -s "
"config.clientId=TWITTER_API_KEY -s config.clientSecret=TWITTER_API_SECRET\n"
msgstr ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s alias=google "
"-s providerId=google -s enabled=true  -s 'config.useJwksUrl=\"true\"' -s "
"config.clientId=TWITTER_API_KEY -s config.clientSecret=TWITTER_API_SECRET\n"

#. type: Title ====
#, no-wrap
msgid "Configuring a GitHub identity provider"
msgstr "GitHubアイデンティティー・プロバイダーの設定"

#. type: Plain text
msgid "Use [command]`github` as the [command]`providerId`."
msgstr "[command]`providerId` として [command]`github` を使用します。"

#. type: Plain text
msgid ""
"Provide the [command]`config` attributes [command]`clientId` and "
"[command]`clientSecret`. You can find these attributes in the GitHub "
"Developer Application Settings page for your application."
msgstr ""
"[command]`clientId` と [command]`clientSecret` を [command]`config` "
"属性として指定します。これらの属性は、アプリケーションのGitHub開発者アプリケーション設定ページで確認できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s alias=github "
"-s providerId=github -s enabled=true  -s 'config.useJwksUrl=\"true\"' -s "
"config.clientId=GITHUB_CLIENT_ID -s "
"config.clientSecret=GITHUB_CLIENT_SECRET\n"
msgstr ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s alias=github "
"-s providerId=github -s enabled=true  -s 'config.useJwksUrl=\"true\"' -s "
"config.clientId=GITHUB_CLIENT_ID -s "
"config.clientSecret=GITHUB_CLIENT_SECRET\n"

#. type: Title ====
#, no-wrap
msgid "Configuring a LinkedIn identity provider"
msgstr "LinkedInアイデンティティー・プロバイダーの設定"

#. type: Plain text
msgid "Use [command]`linkedin` as the [command]`providerId`."
msgstr "[command]`providerId` として [command]`linkedin` を使用します。"

#. type: Plain text
msgid ""
"Provide the [command]`config` attributes [command]`clientId` and "
"[command]`clientSecret`. You can find these attributes in the LinkedIn "
"Developer Console application page for your application."
msgstr ""
"[command]`clientId` と [command]`clientSecret` を [command]`config` "
"属性として指定します。これらの属性は、アプリケーションのLinkedInデベロッパー・コンソールのアプリケーション・ページで確認できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s alias=linkedin"
" -s providerId=linkedin -s enabled=true  -s 'config.useJwksUrl=\"true\"' -s "
"config.clientId=LINKEDIN_CLIENT_ID -s "
"config.clientSecret=LINKEDIN_CLIENT_SECRET\n"
msgstr ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s alias=linkedin"
" -s providerId=linkedin -s enabled=true  -s 'config.useJwksUrl=\"true\"' -s "
"config.clientId=LINKEDIN_CLIENT_ID -s "
"config.clientSecret=LINKEDIN_CLIENT_SECRET\n"

#. type: Title ====
#, no-wrap
msgid "Configuring a Microsoft Live identity provider"
msgstr "Microsoft Live アイデンティティー・プロバイダーの設定"

#. type: Plain text
msgid "Use [command]`microsoft` as the [command]`providerId`."
msgstr "[command]`providerId` として [command]`microsoft` を使用します。"

#. type: Plain text
msgid ""
"Provide the [command]`config` attributes `clientId` and `clientSecret`. You "
"can find these attributes in the Microsoft Application Registration Portal "
"page for your application."
msgstr ""
"`clientId` and `clientSecret` を [command]`config` "
"属性として指定します。これらの属性は、アプリケーションのMicrosoftアプリケーション登録ポータルページで確認できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s "
"alias=microsoft -s providerId=microsoft -s enabled=true  -s "
"'config.useJwksUrl=\"true\"' -s config.clientId=MICROSOFT_APP_ID -s "
"config.clientSecret=MICROSOFT_PASSWORD\n"
msgstr ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s "
"alias=microsoft -s providerId=microsoft -s enabled=true  -s "
"'config.useJwksUrl=\"true\"' -s config.clientId=MICROSOFT_APP_ID -s "
"config.clientSecret=MICROSOFT_PASSWORD\n"

#. type: Title ====
#, no-wrap
msgid "Configuring a StackOverflow identity provider"
msgstr "StackOverflowアイデンティティー・プロバイダーの設定"

#. type: Plain text
msgid "Use `stackoverflow` command as the [command]`providerId`."
msgstr "[command]`providerId` として `stackoverflow` を使用します。"

#. type: Plain text
msgid ""
"Provide the [command]`config` attributes [command]`clientId`, "
"[command]`clientSecret`, and [command]`key`. You can find these attributes "
"in the Stack Apps OAuth page for your application."
msgstr ""
"[command]`clientId` 、 [command]`clientSecret` 、 [command]`key` を "
"[command]`config` として提供します。これらの属性は、アプリケーションのStack Apps OAuthページで確認できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s "
"alias=stackoverflow -s providerId=stackoverflow -s enabled=true  -s "
"'config.useJwksUrl=\"true\"' -s config.clientId=STACKAPPS_CLIENT_ID -s "
"config.clientSecret=STACKAPPS_CLIENT_SECRET -s config.key=STACKAPPS_KEY\n"
msgstr ""
"$ kcadm.sh create identity-provider/instances -r demorealm -s "
"alias=stackoverflow -s providerId=stackoverflow -s enabled=true  -s "
"'config.useJwksUrl=\"true\"' -s config.clientId=STACKAPPS_CLIENT_ID -s "
"config.clientSecret=STACKAPPS_CLIENT_SECRET -s config.key=STACKAPPS_KEY\n"

#. type: Title ===
#, no-wrap
msgid "Storage provider operations"
msgstr "ストレージ・プロバイダーの操作"

#. type: Title ====
#, no-wrap
msgid "Configuring a Kerberos storage provider"
msgstr "Kerberosストレージ・プロバイダーの設定"

#. type: Plain text
msgid ""
"Use the [command]`create` command against the [filename]`user-"
"federation/instances` endpoint."
msgstr ""
"[filename]`user-federation/instances` エンドポイントに対して [command]`create` "
"コマンドを使用します。"

#. type: Plain text
msgid ""
"Specify [command]`kerberos` as a value of the [command]`providerName` "
"attribute."
msgstr "[command]`providerName` 属性の値として [command]`kerberos` を指定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create user-federation/instances -r demorealm -s "
"providerName=kerberos -s priority=0 -s config.debug=false -s "
"config.allowPasswordAuthentication=true -s 'config.editMode=\"UNSYNCED\"' -s"
" config.updateProfileFirstLogin=true -s "
"config.allowKerberosAuthentication=true -s "
"'config.kerberosRealm=\"KEYCLOAK.ORG\"' -s 'config.keyTab=\"http.keytab\"' "
"-s 'config.serverPrincipal=\"HTTP/localhost@KEYCLOAK.ORG\"'\n"
msgstr ""
"$ kcadm.sh create user-federation/instances -r demorealm -s "
"providerName=kerberos -s priority=0 -s config.debug=false -s "
"config.allowPasswordAuthentication=true -s 'config.editMode=\"UNSYNCED\"' -s"
" config.updateProfileFirstLogin=true -s "
"config.allowKerberosAuthentication=true -s "
"'config.kerberosRealm=\"KEYCLOAK.ORG\"' -s 'config.keyTab=\"http.keytab\"' "
"-s 'config.serverPrincipal=\"HTTP/localhost@KEYCLOAK.ORG\"'\n"

#. type: Title ====
#, no-wrap
msgid "Configuring an LDAP user storage provider"
msgstr "LDAPユーザー・ストレージ・プロバイダーの設定"

#. type: Plain text
msgid ""
"Use the [command]`create` command against the [filename]`components` "
"endpoint."
msgstr "[filename]`components` エンドポイントに対して [command]`create` コマンドを使用します。"

#. type: Plain text
msgid ""
"Specify [command]`ldap` as a value of the [command]`providerId` attribute, "
"and [command]`org.keycloak.storage.UserStorageProvider` as the value of the "
"[command]`providerType` attribute."
msgstr ""
"[command]`providerId` 属性の値として [command]`ldap` を指定し、 [command]`providerType` "
"属性の値として [command]`org.keycloak.storage.UserStorageProvider` を指定します。"

#. type: Plain text
msgid ""
"Provide the realm ID as the value of the [command]`parentId` attribute."
msgstr "レルムIDを [command]`parentId` 属性の値として指定します。"

#. type: Plain text
msgid ""
"Use the following example to create a Kerberos-integrated LDAP provider."
msgstr "次の例を使用して、Kerberos統合LDAPプロバイダーを作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create components -r demorealm -s name=kerberos-ldap-provider -s "
"providerId=ldap -s providerType=org.keycloak.storage.UserStorageProvider -s "
"parentId=3d9c572b-8f33-483f-98a6-8bb421667867  -s 'config.priority=[\"1\"]' "
"-s 'config.fullSyncPeriod=[\"-1\"]' -s 'config.changedSyncPeriod=[\"-1\"]' "
"-s 'config.cachePolicy=[\"DEFAULT\"]' -s config.evictionDay=[] -s "
"config.evictionHour=[] -s config.evictionMinute=[] -s config.maxLifespan=[] "
"-s 'config.batchSizeForSync=[\"1000\"]' -s 'config.editMode=[\"WRITABLE\"]' "
"-s 'config.syncRegistrations=[\"false\"]' -s 'config.vendor=[\"other\"]' -s "
"'config.usernameLDAPAttribute=[\"uid\"]' -s "
"'config.rdnLDAPAttribute=[\"uid\"]' -s "
"'config.uuidLDAPAttribute=[\"entryUUID\"]' -s "
"'config.userObjectClasses=[\"inetOrgPerson, organizationalPerson\"]' -s "
"'config.connectionUrl=[\"ldap://localhost:10389\"]'  -s "
"'config.usersDn=[\"ou=People,dc=keycloak,dc=org\"]' -s "
"'config.authType=[\"simple\"]' -s 'config.bindDn=[\"uid=admin,ou=system\"]' "
"-s 'config.bindCredential=[\"secret\"]' -s 'config.searchScope=[\"1\"]' -s "
"'config.useTruststoreSpi=[\"ldapsOnly\"]' -s "
"'config.connectionPooling=[\"true\"]' -s 'config.pagination=[\"true\"]' -s "
"'config.allowKerberosAuthentication=[\"true\"]' -s "
"'config.serverPrincipal=[\"HTTP/localhost@KEYCLOAK.ORG\"]' -s "
"'config.keyTab=[\"http.keytab\"]' -s "
"'config.kerberosRealm=[\"KEYCLOAK.ORG\"]' -s 'config.debug=[\"true\"]' -s "
"'config.useKerberosForPasswordAuthentication=[\"true\"]'\n"
msgstr ""
"$ kcadm.sh create components -r demorealm -s name=kerberos-ldap-provider -s "
"providerId=ldap -s providerType=org.keycloak.storage.UserStorageProvider -s "
"parentId=3d9c572b-8f33-483f-98a6-8bb421667867  -s 'config.priority=[\"1\"]' "
"-s 'config.fullSyncPeriod=[\"-1\"]' -s 'config.changedSyncPeriod=[\"-1\"]' "
"-s 'config.cachePolicy=[\"DEFAULT\"]' -s config.evictionDay=[] -s "
"config.evictionHour=[] -s config.evictionMinute=[] -s config.maxLifespan=[] "
"-s 'config.batchSizeForSync=[\"1000\"]' -s 'config.editMode=[\"WRITABLE\"]' "
"-s 'config.syncRegistrations=[\"false\"]' -s 'config.vendor=[\"other\"]' -s "
"'config.usernameLDAPAttribute=[\"uid\"]' -s "
"'config.rdnLDAPAttribute=[\"uid\"]' -s "
"'config.uuidLDAPAttribute=[\"entryUUID\"]' -s "
"'config.userObjectClasses=[\"inetOrgPerson, organizationalPerson\"]' -s "
"'config.connectionUrl=[\"ldap://localhost:10389\"]'  -s "
"'config.usersDn=[\"ou=People,dc=keycloak,dc=org\"]' -s "
"'config.authType=[\"simple\"]' -s 'config.bindDn=[\"uid=admin,ou=system\"]' "
"-s 'config.bindCredential=[\"secret\"]' -s 'config.searchScope=[\"1\"]' -s "
"'config.useTruststoreSpi=[\"ldapsOnly\"]' -s "
"'config.connectionPooling=[\"true\"]' -s 'config.pagination=[\"true\"]' -s "
"'config.allowKerberosAuthentication=[\"true\"]' -s "
"'config.serverPrincipal=[\"HTTP/localhost@KEYCLOAK.ORG\"]' -s "
"'config.keyTab=[\"http.keytab\"]' -s "
"'config.kerberosRealm=[\"KEYCLOAK.ORG\"]' -s 'config.debug=[\"true\"]' -s "
"'config.useKerberosForPasswordAuthentication=[\"true\"]'\n"

#. type: Title ====
#, no-wrap
msgid "Removing a user storage provider instance"
msgstr "ユーザー・ストレージ・プロバイダー・インスタンスの削除"

#. type: Plain text
msgid ""
"Use the storage provider instance's [command]`id` attribute to compose an "
"endpoint URI, such as [filename]`components/ID`."
msgstr ""
"ストレージ・プロバイダー・インスタンスの [command]`id` 属性を使用して、 [filename]`components/ID` "
"のようなエンドポイントURIを作成します。"

#. type: Plain text
msgid "Run the [command]`delete` command against this endpoint."
msgstr "このエンドポイントに対して [command]`delete` コマンドを実行します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh delete components/3d9c572b-8f33-483f-98a6-8bb421667867 -r "
"demorealm\n"
msgstr ""
"$ kcadm.sh delete components/3d9c572b-8f33-483f-98a6-8bb421667867 -r "
"demorealm\n"

#. type: Title ====
#, no-wrap
msgid ""
"Triggering synchronization of all users for a specific user storage provider"
msgstr "特定のユーザー・ストレージ・プロバイダーのすべてのユーザーの同期をトリガーする"

#. type: Plain text
msgid ""
"Use the storage provider's [command]`id` attribute to compose an endpoint "
"URI, such as [filename]`user-storage/ID_OF_USER_STORAGE_INSTANCE/sync`."
msgstr ""
"ストレージ・プロバイダーの [command]`id` 属性を使用して、 [filename]`user-"
"storage/ID_OF_USER_STORAGE_INSTANCE/sync` のようなエンドポイントURIを作成します。"

#. type: Plain text
msgid ""
"Add the [command]`action=triggerFullSync` query parameter and run the "
"[command]`create` command."
msgstr ""
"[command]`action=triggerFullSync` クエリー・パラメーターを追加し、 [command]`create` "
"コマンドを実行します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create user-storage/b7c63d02-b62a-4fc1-977c-"
"947d6a09e1ea/sync?action=triggerFullSync\n"
msgstr ""
"$ kcadm.sh create user-storage/b7c63d02-b62a-4fc1-977c-"
"947d6a09e1ea/sync?action=triggerFullSync\n"

#. type: Title ====
#, no-wrap
msgid ""
"Triggering synchronization of changed users for a specific user storage "
"provider"
msgstr "特定のユーザー・ストレージ・プロバイダーに対して、変更されたユーザーの同期をトリガーする"

#. type: Plain text
msgid ""
"Add the [command]`action=triggerChangedUsersSync` query parameter and run "
"the [command]`create` command."
msgstr ""
"[command]`action=triggerChangedUsersSync` クエリー・パラメーターを追加し、 [command]`create`"
" コマンドを実行します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create user-storage/b7c63d02-b62a-4fc1-977c-"
"947d6a09e1ea/sync?action=triggerChangedUsersSync\n"
msgstr ""
"$ kcadm.sh create user-storage/b7c63d02-b62a-4fc1-977c-"
"947d6a09e1ea/sync?action=triggerChangedUsersSync\n"

#. type: Title ====
#, no-wrap
msgid "Test LDAP user storage connectivity"
msgstr "LDAPユーザー・ストレージの接続をテストする"

#. type: Plain text
msgid ""
"Run the [command]`get` command on the [filename]`testLDAPConnection` "
"endpoint."
msgstr "[filename]`testLDAPConnection` エンドポイントで [command]`get` コマンドを実行します。"

#. type: Plain text
msgid ""
"Provide query parameters [command]`bindCredential`, [command]`bindDn`, "
"[command]`connectionUrl`, and [command]`useTruststoreSpi`, and then set the "
"[command]`action` query parameter to [command]`testConnection`."
msgstr ""
"[command]`bindCredential` 、 [command]`bindDn` 、 [command]`connectionUrl` 、 "
"[command]`useTruststoreSpi` をクエリー・パラメーターとして指定します。[command]`action` "
"クエリー・パラメーターに [command]`testConnection` を設定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get testLDAPConnection -q action=testConnection -q "
"bindCredential=secret -q bindDn=uid=admin,ou=system -q "
"connectionUrl=ldap://localhost:10389 -q useTruststoreSpi=ldapsOnly\n"
msgstr ""
"$ kcadm.sh get testLDAPConnection -q action=testConnection -q "
"bindCredential=secret -q bindDn=uid=admin,ou=system -q "
"connectionUrl=ldap://localhost:10389 -q useTruststoreSpi=ldapsOnly\n"

#. type: Title ====
#, no-wrap
msgid "Test LDAP user storage authentication"
msgstr "LDAPユーザー・ストレージ認証をテストする"

#. type: Plain text
msgid ""
"Provide the query parameters [command]`bindCredential`, [command]`bindDn`, "
"[command]`connectionUrl`, and [command]`useTruststoreSpi`, and then set the "
"[command]`action` query parameter to [command]`testAuthentication`."
msgstr ""
"[command]`bindCredential` 、 [command]`bindDn` 、  [command]`connectionUrl` 、 "
"[command]`useTruststoreSpi` をクエリー・パラメーターに指定します。 [command]`action` "
"クエリー・パラメーターに [command]`testAuthentication` を指定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh get testLDAPConnection -q action=testAuthentication -q "
"bindCredential=secret -q bindDn=uid=admin,ou=system -q "
"connectionUrl=ldap://localhost:10389 -q useTruststoreSpi=ldapsOnly\n"
msgstr ""
"$ kcadm.sh get testLDAPConnection -q action=testAuthentication -q "
"bindCredential=secret -q bindDn=uid=admin,ou=system -q "
"connectionUrl=ldap://localhost:10389 -q useTruststoreSpi=ldapsOnly\n"

#. type: Title ===
#, no-wrap
msgid "Adding mappers"
msgstr "マッパーの追加"

#. type: Title ====
#, no-wrap
msgid "Adding a hardcoded role LDAP mapper"
msgstr "ハードコードされたロールLDAPマッパーの追加"

#. type: Plain text
msgid ""
"Run the [command]`create` command on the [filename]`components` endpoint."
msgstr "[filename]`components` エンドポイントで [command]`create` コマンドを実行します。"

#. type: Plain text
msgid ""
"Set the [command]`providerType` attribute to "
"[filename]`org.keycloak.storage.ldap.mappers.LDAPStorageMapper`."
msgstr ""
"[command]`providerType` 属性を "
"[filename]`org.keycloak.storage.ldap.mappers.LDAPStorageMapper` に設定します。"

#. type: Plain text
msgid ""
"Set the [command]`parentId` attribute to the ID of the LDAP provider "
"instance."
msgstr "[command]`parentId` 属性にLDAPプロバイダー・インスタンスのIDを設定します。"

#. type: Plain text
msgid ""
"Set the [command]`providerId` attribute to [command]`hardcoded-ldap-role-"
"mapper`. Make sure to provide a value of [command]`role` configuration "
"parameter."
msgstr ""
"[command]`providerId` 属性に [command]`hardcoded-ldap-role-mapper` を設定します。 "
"[command]`role` 設定パラメーターの値を指定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create components -r demorealm -s name=hardcoded-ldap-role-mapper"
" -s providerId=hardcoded-ldap-role-mapper -s "
"providerType=org.keycloak.storage.ldap.mappers.LDAPStorageMapper -s "
"parentId=b7c63d02-b62a-4fc1-977c-947d6a09e1ea -s 'config.role=[\"realm-"
"management.create-client\"]'\n"
msgstr ""
"$ kcadm.sh create components -r demorealm -s name=hardcoded-ldap-role-mapper"
" -s providerId=hardcoded-ldap-role-mapper -s "
"providerType=org.keycloak.storage.ldap.mappers.LDAPStorageMapper -s "
"parentId=b7c63d02-b62a-4fc1-977c-947d6a09e1ea -s 'config.role=[\"realm-"
"management.create-client\"]'\n"

#. type: Title ====
#, no-wrap
msgid "Adding an MS Active Directory mapper"
msgstr "MS Active Directoryマッパーの追加"

#. type: Plain text
msgid ""
"Set the [command]`providerId` attribute to [filename]`msad-user-account-"
"control-mapper`."
msgstr ""
"[command]`providerId` 属性を [filename]`msad-user-account-control-mapper` "
"に設定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create components -r demorealm -s name=msad-user-account-control-"
"mapper -s providerId=msad-user-account-control-mapper -s "
"providerType=org.keycloak.storage.ldap.mappers.LDAPStorageMapper -s "
"parentId=b7c63d02-b62a-4fc1-977c-947d6a09e1ea\n"
msgstr ""
"$ kcadm.sh create components -r demorealm -s name=msad-user-account-control-"
"mapper -s providerId=msad-user-account-control-mapper -s "
"providerType=org.keycloak.storage.ldap.mappers.LDAPStorageMapper -s "
"parentId=b7c63d02-b62a-4fc1-977c-947d6a09e1ea\n"

#. type: Title ====
#, no-wrap
msgid "Adding an user attribute LDAP mapper"
msgstr "ユーザー属性LDAPマッパーの追加"

#. type: Plain text
msgid ""
"Set the [command]`providerId` attribute to [filename]`user-attribute-ldap-"
"mapper`."
msgstr ""
"[command]`providerId` 属性を [filename]`user-attribute-ldap-mapper` に設定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create components -r demorealm -s name=user-attribute-ldap-mapper"
" -s providerId=user-attribute-ldap-mapper -s "
"providerType=org.keycloak.storage.ldap.mappers.LDAPStorageMapper -s "
"parentId=b7c63d02-b62a-4fc1-977c-947d6a09e1ea -s "
"'config.\"user.model.attribute\"=[\"email\"]' -s "
"'config.\"ldap.attribute\"=[\"mail\"]' -s 'config.\"read.only\"=[\"false\"]'"
" -s 'config.\"always.read.value.from.ldap\"=[\"false\"]' -s "
"'config.\"is.mandatory.in.ldap\"=[\"false\"]'\n"
msgstr ""
"$ kcadm.sh create components -r demorealm -s name=user-attribute-ldap-mapper"
" -s providerId=user-attribute-ldap-mapper -s "
"providerType=org.keycloak.storage.ldap.mappers.LDAPStorageMapper -s "
"parentId=b7c63d02-b62a-4fc1-977c-947d6a09e1ea -s "
"'config.\"user.model.attribute\"=[\"email\"]' -s "
"'config.\"ldap.attribute\"=[\"mail\"]' -s 'config.\"read.only\"=[\"false\"]'"
" -s 'config.\"always.read.value.from.ldap\"=[\"false\"]' -s "
"'config.\"is.mandatory.in.ldap\"=[\"false\"]'\n"

#. type: Title ====
#, no-wrap
msgid "Adding a group LDAP mapper"
msgstr "グループLDAPマッパーの追加"

#. type: Plain text
msgid ""
"Set the [command]`providerId` attribute to [filename]`group-ldap-mapper`."
msgstr "[command]`providerId` 属性を [filename]`group-ldap-mapper` に設定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create components -r demorealm -s name=group-ldap-mapper -s "
"providerId=group-ldap-mapper -s "
"providerType=org.keycloak.storage.ldap.mappers.LDAPStorageMapper -s "
"parentId=b7c63d02-b62a-4fc1-977c-947d6a09e1ea -s 'config.\"groups.dn\"=[]' "
"-s 'config.\"group.name.ldap.attribute\"=[\"cn\"]' -s "
"'config.\"group.object.classes\"=[\"groupOfNames\"]' -s "
"'config.\"preserve.group.inheritance\"=[\"true\"]' -s "
"'config.\"membership.ldap.attribute\"=[\"member\"]' -s "
"'config.\"membership.attribute.type\"=[\"DN\"]' -s "
"'config.\"groups.ldap.filter\"=[]' -s 'config.mode=[\"LDAP_ONLY\"]' -s "
"'config.\"user.roles.retrieve.strategy\"=[\"LOAD_GROUPS_BY_MEMBER_ATTRIBUTE\"]'"
" -s 'config.\"mapped.group.attributes\"=[\"admins-group\"]' -s "
"'config.\"drop.non.existing.groups.during.sync\"=[\"false\"]' -s "
"'config.roles=[\"admins\"]' -s 'config.groups=[\"admins-group\"]' -s "
"'config.group=[]' -s 'config.preserve=[\"true\"]' -s "
"'config.membership=[\"member\"]'\n"
msgstr ""
"$ kcadm.sh create components -r demorealm -s name=group-ldap-mapper -s "
"providerId=group-ldap-mapper -s "
"providerType=org.keycloak.storage.ldap.mappers.LDAPStorageMapper -s "
"parentId=b7c63d02-b62a-4fc1-977c-947d6a09e1ea -s 'config.\"groups.dn\"=[]' "
"-s 'config.\"group.name.ldap.attribute\"=[\"cn\"]' -s "
"'config.\"group.object.classes\"=[\"groupOfNames\"]' -s "
"'config.\"preserve.group.inheritance\"=[\"true\"]' -s "
"'config.\"membership.ldap.attribute\"=[\"member\"]' -s "
"'config.\"membership.attribute.type\"=[\"DN\"]' -s "
"'config.\"groups.ldap.filter\"=[]' -s 'config.mode=[\"LDAP_ONLY\"]' -s "
"'config.\"user.roles.retrieve.strategy\"=[\"LOAD_GROUPS_BY_MEMBER_ATTRIBUTE\"]'"
" -s 'config.\"mapped.group.attributes\"=[\"admins-group\"]' -s "
"'config.\"drop.non.existing.groups.during.sync\"=[\"false\"]' -s "
"'config.roles=[\"admins\"]' -s 'config.groups=[\"admins-group\"]' -s "
"'config.group=[]' -s 'config.preserve=[\"true\"]' -s "
"'config.membership=[\"member\"]'\n"

#. type: Title ====
#, no-wrap
msgid "Adding a full name LDAP mapper"
msgstr "フルネームLDAPマッパーの追加"

#. type: Plain text
msgid ""
"Set the [command]`providerId` attribute to [filename]`full-name-ldap-"
"mapper`."
msgstr "[command]`providerId` 属性を [filename]`full-name-ldap-mapper` に設定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh create components -r demorealm -s name=full-name-ldap-mapper -s "
"providerId=full-name-ldap-mapper -s "
"providerType=org.keycloak.storage.ldap.mappers.LDAPStorageMapper -s "
"parentId=b7c63d02-b62a-4fc1-977c-947d6a09e1ea -s "
"'config.\"ldap.full.name.attribute\"=[\"cn\"]' -s "
"'config.\"read.only\"=[\"false\"]' -s 'config.\"write.only\"=[\"true\"]'\n"
msgstr ""
"$ kcadm.sh create components -r demorealm -s name=full-name-ldap-mapper -s "
"providerId=full-name-ldap-mapper -s "
"providerType=org.keycloak.storage.ldap.mappers.LDAPStorageMapper -s "
"parentId=b7c63d02-b62a-4fc1-977c-947d6a09e1ea -s "
"'config.\"ldap.full.name.attribute\"=[\"cn\"]' -s "
"'config.\"read.only\"=[\"false\"]' -s 'config.\"write.only\"=[\"true\"]'\n"

#. type: Title ===
#, no-wrap
msgid "Authentication operations"
msgstr "認証の操作"

#. type: Title ====
#, no-wrap
msgid "Setting a password policy"
msgstr "パスワード・ポリシーの設定"

#. type: Plain text
msgid ""
"Set the realm's [command]`passwordPolicy` attribute to an enumeration "
"expression that includes the specific policy provider ID and optional "
"configuration."
msgstr ""
"レルムの [command]`passwordPolicy` 属性に、特定のポリシー・プロバイダーIDとオプション設定を含む列挙表現を設定します。"

#. type: Plain text
msgid ""
"Use the following example to set a password policy to default values. The "
"default values include:"
msgstr "次の例を使用して、パスワード・ポリシーをデフォルト値に設定します。デフォルト値は次のとおりです。"

#. type: Plain text
msgid "27,500 hashing iterations"
msgstr "27,500ハッシュ反復"

#. type: Plain text
msgid "at least one special character"
msgstr "少なくとも1つの特殊文字"

#. type: Plain text
msgid "at least one uppercase character"
msgstr "少なくとも1つの大文字"

#. type: Plain text
msgid "at least one digit character"
msgstr "少なくとも1つの数字"

#. type: Plain text
msgid "not be equal to a user's [filename]`username`"
msgstr "ユーザーの [filename]`username` と等しくないこと"

#. type: Plain text
msgid "be at least eight characters long"
msgstr "8文字以上の長さ"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh update realms/demorealm -s 'passwordPolicy=\"hashIterations and "
"specialChars and upperCase and digits and notUsername and length\"'\n"
msgstr ""
"$ kcadm.sh update realms/demorealm -s 'passwordPolicy=\"hashIterations and "
"specialChars and upperCase and digits and notUsername and length\"'\n"

#. type: Plain text
msgid ""
"If you want to use values different from defaults, pass the configuration in"
" brackets."
msgstr "デフォルトと異なる値を使用する場合は、設定を大括弧で囲みます。"

#. type: Plain text
msgid "Use the following example to set a password policy to:"
msgstr "パスワードポリシーを次のように設定するには、以下の例を使用します。"

#. type: Plain text
msgid "25,000 hash iterations"
msgstr "25,000ハッシュ反復"

#. type: Plain text
msgid "at least two special characters"
msgstr "少なくとも2つの特殊文字"

#. type: Plain text
msgid "at least two uppercase characters"
msgstr "少なくとも2つの大文字"

#. type: Plain text
msgid "at least two lowercase characters"
msgstr "少なくとも2つの小文字"

#. type: Plain text
msgid "at least two digits"
msgstr "少なくとも2つの数字"

#. type: Plain text
msgid "be at least nine characters long"
msgstr "9文字以上の長さ"

#. type: Plain text
msgid "not repeat for at least four changes back"
msgstr "過去4回の変更履歴の重複を許可しない"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcadm.sh update realms/demorealm -s "
"'passwordPolicy=\"hashIterations(25000) and specialChars(2) and upperCase(2)"
" and lowerCase(2) and digits(2) and length(9) and notUsername and "
"passwordHistory(4)\"'\n"
msgstr ""
"$ kcadm.sh update realms/demorealm -s "
"'passwordPolicy=\"hashIterations(25000) and specialChars(2) and upperCase(2)"
" and lowerCase(2) and digits(2) and length(9) and notUsername and "
"passwordHistory(4)\"'\n"

#. type: Title ====
#, no-wrap
msgid "Getting the current password policy"
msgstr "現在のパスワード・ポリシーの取得"

#. type: Plain text
msgid ""
"Get the current realm configuration and filter everything but the "
"[command]`passwordPolicy` attribute."
msgstr "現在のレルム設定を取得し、 [command]`passwordPolicy` 属性以外のすべてをフィルタリングします。"

#. type: Plain text
msgid ""
"Use the following example to display [command]`passwordPolicy` for "
"[filename]`demorealm`."
msgstr ""
"[filename]`demorealm` に対して [command]`passwordPolicy` を表示するには、次の例を使用します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get realms/demorealm --fields passwordPolicy\n"
msgstr "$ kcadm.sh get realms/demorealm --fields passwordPolicy\n"

#. type: Title ====
#, no-wrap
msgid "Listing authentication flows"
msgstr "認証フローの一覧表示"

#. type: Plain text
msgid ""
"Run the [command]`get` command on the [filename]`authentication/flows` "
"endpoint."
msgstr "[filename]`authentication/flows` エンドポイントで [command]`get` コマンドを実行します。"

#. type: delimited block -
#, no-wrap
msgid "$ kcadm.sh get authentication/flows -r demorealm\n"
msgstr "$ kcadm.sh get authentication/flows -r demorealm\n"
