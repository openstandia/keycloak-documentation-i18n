msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"POT-Creation-Date: 2017-09-20 08:59+0000\n"
"PO-Revision-Date: 2017-09-20 05:28-0400\n"
"Last-Translator: wadahiro <wadahiro@gmail.com>\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: keycloak-documentation-i18n\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/i18n/pot/authorization_services__topics__service__entitlement__whatis-obtain-eat.pot\n"

#. type: Plain text
#: source/authorization_services/topics/service/entitlement/entitlement-api-aapi.adoc:46
#: source/authorization_services/topics/service/entitlement/entitlement-api-aapi.adoc:81
#: source/authorization_services/topics/service/entitlement/whatis-obtain-eat.adoc:20
#: source/authorization_services/topics/service/rpt/token-introspection.adoc:43
#: source/authorization_services/topics/service/authorization/authorization-api-aapi.adoc:29
#: source/authorization_services/topics/service/authorization/whatis-obtain-aat.adoc:26
#, no-wrap
msgid "As a result, the server response is:\n"
msgstr ""

#. type: Title ===
#: source/authorization_services/topics/service/entitlement/whatis-obtain-eat.adoc:2
#, no-wrap
msgid "Entitlement API Tokens"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service/entitlement/whatis-obtain-eat.adoc:5
#, no-wrap
msgid "An entitlement API token (EAT) is a special OAuth2 access token with the scope *kc_entitlement*.\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service/entitlement/whatis-obtain-eat.adoc:8
#, no-wrap
msgid "Client applications can obtain an EAT from {project_name} like any other OAuth2 access token. Usually, client applications obtain EATs after the user is successfully\n"
"authenticated in {project_name}. By default the _authorizaton_code_ grant type is used to authenticate a user and issue an OAuth2 access token to the client application acting on the user's behalf.\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service/entitlement/whatis-obtain-eat.adoc:10
#, no-wrap
msgid "For demonstration purposes, the example below uses Resource Owner Password Credentials Grant Type to request an EAT:\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service/entitlement/whatis-obtain-eat.adoc:18
#: source/authorization_services/topics/service/authorization/whatis-obtain-aat.adoc:24
#, no-wrap
msgid "```bash\n"
"curl -X POST \\\n"
"    -H \"Authorization: Basic aGVsbG8td29ybGQtYXV0aHotc2VydmljZTpwYXNzd29yZA==\" \\\n"
"    -H \"Content-Type: application/x-www-form-urlencoded\" \\\n"
"    -d 'username=${username}&password=${user_password}&grant_type=password' \\\n"
"    \"http://localhost:8080/auth/realms/${realm_name}/protocol/openid-connect/token\"\n"
"```\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service/entitlement/whatis-obtain-eat.adoc:33
#, no-wrap
msgid "```json\n"
"{\n"
"  \"access_token\": ${EAT},\n"
"  \"expires_in\": 300,\n"
"  \"refresh_expires_in\": 1800,\n"
"  \"refresh_token\": ${refresh_token},\n"
"  \"token_type\": \"bearer\",\n"
"  \"id_token\": ${id_token},\n"
"  \"not-before-policy\": 0,\n"
"  \"session_state\": \"3cad2afc-855b-47b7-8e4d-a21c66e312fb\"\n"
"}\n"
"```\n"
msgstr ""

#. type: Title ===
#: source/authorization_services/topics/service/entitlement/whatis-obtain-eat.adoc:34
#, no-wrap
msgid "About the kc_entitlement scope"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/service/entitlement/whatis-obtain-eat.adoc:36
#, no-wrap
msgid "The *kc_entitlement* scope can be created like any other _realm role_, or as a _client role_. Once created, grant this role to the users of your realm.\n"
msgstr ""

