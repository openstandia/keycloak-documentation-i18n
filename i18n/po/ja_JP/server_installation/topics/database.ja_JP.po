# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"Last-Translator: Kohei Tamura <ktamura.biz.80@gmail.com>, 2017\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/openstandia/teams/79437/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title ==
#: source/server_installation/topics/database.adoc:3
#, no-wrap
msgid "Relational Database Setup"
msgstr "リレーショナル・データベースの設定"

#. type: Plain text
#: source/server_installation/topics/database.adoc:9
msgid ""
"{project_name} comes with its own embedded Java-based relational database "
"called H2.  This is the default database that {project_name} will use to "
"persist data and really only exists so that you can run the authentication "
"server out of the box.  We highly recommend that you replace it with a more "
"production ready external database.  The H2 database is not very viable in "
"high concurrency situations and should not be used in a cluster either.  The"
" purpose of this chapter is to show you how to connect {project_name} to a "
"more mature database."
msgstr ""
"{project_name}には、H2というJavaベースのリレーショナル・データベースが組み込まれています。これは、{project_name}がデータを保存するために使用するデフォルトのデータベースで、単に認証サーバーをそのまま実行できるように組み込まれただけのものです。そのため、プロダクション用の外部データベースに置き換えることを強くお勧めします。H2データベースは並行性の高いシチュエーションではあまり実用的ではないので、クラスター内でも使用しないでください。この章では、{project_name}をより成熟度の高いデータベースに接続する方法を説明します。"

#. type: Plain text
#: source/server_installation/topics/database.adoc:13
msgid ""
"{project_name} uses two layered technologies to persist its relational data."
"  The bottom layered technology is JDBC.  JDBC is a Java API that is used to"
" connect to a RDBMS.  There are different JDBC drivers per database type "
"that are provided by your database vendor.  This chapter discusses how to "
"configure {project_name} to use one of these vendor-specific drivers."
msgstr ""
"{project_name}では、リレーショナル・データを保存するために2つの階層化技術が使用されます。最下層の技術はJDBCです。JDBCは、RDBMSへの接続に使用されるJavaAPIです。データベース・ベンダーによって提供されるデータベース・タイプ毎に、さまざまなJDBCドライバーがあります。この章では、これらのベンダー固有のドライバーのいずれかを使用するように{project_name}を設定する方法について説明します。"

#. type: Plain text
#: source/server_installation/topics/database.adoc:17
msgid ""
"The top layered technology for persistence is Hibernate JPA.  This is a "
"object to relational mapping API that maps Java Objects to relational data."
"  Most deployments of {project_name} will never have to touch the "
"configuration aspects of Hibernate, but we will discuss how that is done if "
"you run into that rare circumstance."
msgstr ""
"データを保存するための最上層の技術は、Hibernate "
"JPAです。これは、Javaオブジェクトをリレーショナル・データにマップするORマッピングAPIの1つです。{project_name}のデプロイメントで、Hibernateの設定に触れる必要はほとんどありませんが、そのまれなケースに遭遇した場合どうなるかを説明します。"

#. type: Plain text
#: source/server_installation/topics/database.adoc:19
#, no-wrap
msgid ""
"Datasource configuration is covered much more thoroughly in link:{appserver_datasource_link}[the datasource configuration chapter]\n"
"       in the _{appserver_admindoc_name}_.\n"
msgstr ""
"データソースの設定については、 _{appserver_admindoc_name}_ "
"の中のデータソース設定の章link:{appserver_datasource_link}[the datasource configuration "
"chapter]で詳しく説明しています。\n"
