# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"Last-Translator: Kohei Tamura <ktamura.biz.80@gmail.com>, 2017\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/openstandia/teams/79437/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title ====
#: source/securing_apps/topics/oidc/java/adapter_error_handling.adoc:3
#: source/securing_apps/topics/saml/java/error_handling.adoc:2
#, no-wrap
msgid "Error Handling"
msgstr "エラー処理"

#. type: delimited block -
#: source/securing_apps/topics/oidc/java/adapter_error_handling.adoc:16
#: source/securing_apps/topics/saml/java/error_handling.adoc:16
#, no-wrap
msgid ""
"<error-page>\n"
"    <error-code>403</error-code>\n"
"    <location>/ErrorHandler</location>\n"
"</error-page>\n"
msgstr ""
"<error-page>\n"
"    <error-code>403</error-code>\n"
"    <location>/ErrorHandler</location>\n"
"</error-page>\n"

#. type: Plain text
#: source/securing_apps/topics/saml/java/error_handling.adoc:8
msgid ""
"{project_name} has some error handling facilities for servlet based client "
"adapters.  When an error is encountered in authentication, the client "
"adapter will call `HttpServletResponse.sendError()`.  You can set up an "
"`error-page` within your `web.xml` file to handle the error however you "
"want.  The client adapter can throw 400, 401, 403, and 500 errors."
msgstr ""
"{project_name}には、サーブレットベースのクライアント・アダプター用のエラー処理機能があります。認証でエラーが発生すると、クライアント・アダプターは"
" `HttpServletResponse.sendError()` を呼び出します。 `web.xml` ファイル内にerror-"
"pageを設定してエラーを処理することができます。クライアント・アダプターは、400、401、403、500のエラーをスローできます。"

#. type: Plain text
#: source/securing_apps/topics/saml/java/error_handling.adoc:23
msgid ""
"The client adapter also sets an `HttpServletRequest` attribute that you can "
"retrieve.  The attribute name is "
"`org.keycloak.adapters.spi.AuthenticationError`.  Typecast this object to: "
"`org.keycloak.adapters.saml.SamlAuthenticationError`.  This class can tell "
"you exactly what happened.  If this attribute is not set, then the adapter "
"was not responsible for the error code."
msgstr ""
"クライアント・アダプターはまた、取得可能な `HttpServletRequest` 属性を設定します。属性名は、 "
"`org.keycloak.adapters.spi.AuthenticationError` です。このオブジェクトを "
"`org.keycloak.adapters.saml.SamlAuthenticationError` "
"にキャストします。このクラスは、正確に何が起こったかを伝えることができます。この属性が設定されない場合、アダプターはエラーコードに対して何もしません。"

#. type: delimited block -
#: source/securing_apps/topics/saml/java/error_handling.adoc:33
#, no-wrap
msgid ""
"public class SamlAuthenticationError implements AuthenticationError {\n"
"    public static enum Reason {\n"
"        EXTRACTION_FAILURE,\n"
"        INVALID_SIGNATURE,\n"
"        ERROR_STATUS\n"
"    }\n"
msgstr ""
"public class SamlAuthenticationError implements AuthenticationError {\n"
"    public static enum Reason {\n"
"        EXTRACTION_FAILURE,\n"
"        INVALID_SIGNATURE,\n"
"        ERROR_STATUS\n"
"    }\n"

#. type: delimited block -
#: source/securing_apps/topics/saml/java/error_handling.adoc:41
#, no-wrap
msgid ""
"    public Reason getReason() {\n"
"        return reason;\n"
"    }\n"
"    public StatusResponseType getStatus() {\n"
"        return status;\n"
"    }\n"
"}\n"
msgstr ""
"    public Reason getReason() {\n"
"        return reason;\n"
"    }\n"
"    public StatusResponseType getStatus() {\n"
"        return status;\n"
"    }\n"
"}\n"
