msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"POT-Creation-Date: 2017-09-21 04:04+0000\n"
"PO-Revision-Date: 2017-09-21 00:27-0400\n"
"Last-Translator: wadahiro <wadahiro@gmail.com>\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: keycloak-documentation-i18n\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /develop/i18n/po/ja_JP/securing_apps__topics__oidc__oidc-generic.ja_JP.po\n"

#. type: Title ===
#, no-wrap
msgid "Other OpenID Connect Libraries"
msgstr ""

#. type: Plain text
msgid "{project_name} can be secured by supplied adapters that are usually easier to use and provide better integration with {project_name}. However, if an adapter is not available for your programming language, framework, or platform you might opt to use a generic OpenID Connect Resource Provider (RP) library instead. This chapter describes details specific to {project_name} and does not contain specific protocol details. For more information see the http://openid.net/connect/[OpenID Connect specifications] and https://tools.ietf.org/html/rfc6749[OAuth2 specification]."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Endpoints"
msgstr ""

#. type: Plain text
msgid "The most important endpoint to understand is the `well-known` configuration endpoint. It lists endpoints and other configuration options relevant to the OpenID Connect implementation in {project_name}. The endpoint is:"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid "/realms/{realm-name}/.well-known/openid-configuration\n"
msgstr ""

#. type: Plain text
msgid "To obtain the full URL, add the base URL for {project_name} and replace `{realm-name}` with the name of your realm. For example:"
msgstr ""

#. type: Plain text
#| msgid "http://localhost:8080/auth/realms/demo/account"
msgid "$$http://localhost:8080/auth/realms/master/.well-known/openid-configuration$$"
msgstr ""

#. type: Plain text
msgid "Some RP libraries retrieve all required endpoints from this endpoint, but for others you might need to list the endpoints individually."
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Authorization Endpoint"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid "/realms/{realm-name}/protocol/openid-connect/auth\n"
msgstr ""

#. type: Plain text
msgid "The authorization endpoint performs authentication of the end-user. This is done by redirecting the user agent to this endpoint."
msgstr ""

#. type: Plain text
msgid "For more details see the http://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint[Authorization Endpoint] section in the OpenID Connect specification."
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Token Endpoint"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid "/realms/{realm-name}/protocol/openid-connect/token\n"
msgstr ""

#. type: Plain text
msgid "The token endpoint is used to obtain tokens. Tokens can either be obtained by exchanging an authorization code or by supplying credentials directly depending on what flow is used.  The token endpoint is also used to obtain new access tokens when they expire."
msgstr ""

#. type: Plain text
msgid "For more details see the http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint[Token Endpoint] section in the OpenID Connect specification."
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Userinfo Endpoint"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid "/realms/{realm-name}/protocol/openid-connect/userinfo\n"
msgstr ""

#. type: Plain text
msgid "The userinfo endpoint returns standard claims about the authenticated user, and is protected by a bearer token."
msgstr ""

#. type: Plain text
msgid "For more details see the http://openid.net/specs/openid-connect-core-1_0.html#UserInfo[Userinfo Endpoint] section in the OpenID Connect specification."
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Logout Endpoint"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid "/realms/{realm-name}/protocol/openid-connect/logout\n"
msgstr ""

#. type: Plain text
msgid "The logout endpoint logs out the authenticated user."
msgstr ""

#. type: Plain text
msgid "The user agent can be redirected to the endpoint, in which case the active user session is logged out. Afterward the user agent is redirected back to the application."
msgstr ""

#. type: Plain text
msgid "The endpoint can also be invoked directly by the application. To invoke this endpoint directly the refresh token needs to be included as well as the credentials required to authenticate the client."
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Certificate Endpoint"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid "/realms/{realm-name}/protocol/openid-connect/certs\n"
msgstr ""

#. type: Plain text
msgid "The certificate endpoint returns the public keys enabled by the realm, encoded as a JSON Web Key (JWK). Depending on the realm settings there can be one or more keys enabled for verifying tokens. For more information see the link:{adminguide_link}[{adminguide_name}] and the https://tools.ietf.org/html/rfc7517[JSON Web Key specification]."
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Introspection Endpoint"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid "/realms/{realm-name}/protocol/openid-connect/token/introspect\n"
msgstr ""

#. type: Plain text
msgid "The introspection endpoint is used to retrieve the active state of a token. It is can only be invoked by confidential clients."
msgstr ""

#. type: Plain text
msgid "For more details see https://tools.ietf.org/html/rfc7662[OAuth 2.0 Token Introspection specification]."
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Dynamic Client Registration Endpoint"
msgstr ""

#. type: delimited block .
#, no-wrap
msgid "/realms/{realm-name}/clients-registrations/openid-connect\n"
msgstr ""

#. type: Plain text
msgid "The dynamic client registration endpoint is used to dynamically register clients."
msgstr ""

#. type: Plain text
msgid "For more details see the <<_client_registration,Client Registration chapter>> and the https://openid.net/specs/openid-connect-registration-1_0.html[OpenID Connect Dynamic Client Registration specification]."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Flows"
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Authorization Code"
msgstr ""

#. type: Plain text
msgid "The Authorization Code flow redirects the user agent to {project_name}. Once the user has successfully authenticated with {project_name} an Authorization Code is created and the user agent is redirected back to the application. The application then uses the authorization code along with its credentials to obtain an Access Token, Refresh Token and ID Token from {project_name}."
msgstr ""

#. type: Plain text
msgid "The flow is targeted towards web applications, but is also recommended for native applications, including mobile applications, where it is possible to embed a user agent."
msgstr ""

#. type: Plain text
msgid "For more details refer to the http://openid.net/specs/openid-connect-core-1_0.html#CodeFlowAuth[Authorization Code Flow] in the OpenID Connect specification."
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Implicit"
msgstr ""

#. type: Plain text
msgid "The Implicit flow redirects works similarly to the Authorization Code flow, but instead of returning a Authorization Code the Access Token and ID Token is returned. This reduces the need for the extra invocation to exchange the Authorization Code for an Access Token. However, it does not include a Refresh Token. This results in the need to either permit Access Tokens with a long expiration, which is problematic as it's very hard to invalidate these. Or requires a new redirect to obtain new Access Token once the initial Access Token has expired. The Implicit flow is useful if the application only wants to authenticate the user and deals with logout itself."
msgstr ""

#. type: Plain text
msgid "There's also a Hybrid flow where both the Access Token and an Authorization Code is returned."
msgstr ""

#. type: Plain text
msgid "One thing to note is that both the Implicit flow and Hybrid flow has potential security risks as the Access Token may be leaked through web server logs and browser history. This is somewhat mitigated by using short expiration for Access Tokens."
msgstr ""

#. type: Plain text
msgid "For more details refer to the http://openid.net/specs/openid-connect-core-1_0.html#ImplicitFlowAuth[Implicit Flow] in the OpenID Connect specification."
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Resource Owner Password Credentials"
msgstr ""

#. type: Plain text
msgid "Resource Owner Password Credentials, referred to as Direct Grant in {project_name}, allows exchanging user credentials for tokens. It's not recommended to use this flow unless you absolutely need to. Examples where this could be useful are legacy applications and command-line interfaces."
msgstr ""

#. type: Plain text
msgid "There are a number of limitations of using this flow, including:"
msgstr ""

#. type: Plain text
msgid "User credentials are exposed to the application"
msgstr ""

#. type: Plain text
msgid "Applications need login pages"
msgstr ""

#. type: Plain text
msgid "Application needs to be aware of the authentication scheme"
msgstr ""

#. type: Plain text
msgid "Changes to authentication flow requires changes to application"
msgstr ""

#. type: Plain text
msgid "No support for identity brokering or social login"
msgstr ""

#. type: Plain text
msgid "Flows are not supported (user self-registration, required actions, etc.)"
msgstr ""

#. type: Plain text
msgid "For a client to be permitted to use the Resource Owner Password Credentials grant the client has to have the `Direct Access Grants Enabled` option enabled."
msgstr ""

#. type: Plain text
msgid "This flow is not included in OpenID Connect, but is a part of the OAuth 2.0 specification."
msgstr ""

#. type: Plain text
msgid "For more details refer to the https://tools.ietf.org/html/rfc6749#section-4.3[Resource Owner Password Credentials Grant] chapter in the OAuth 2.0 specification."
msgstr ""

#. type: Plain text
msgid "====== Example using CURL"
msgstr ""

#. type: Plain text
msgid "The following example shows how to obtain an access token for a user in the realm `master` with username `user` and password `password`. The example is using the confidential client `myclient`:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "curl \\\n"
"  -d \"client_id=myclient\" \\\n"
"  -d \"client_secret=40cc097b-2a57-4c17-b36a-8fdf3fc2d578\" \\\n"
"  -d \"username=user\" \\\n"
"  -d \"password=password\" \\\n"
"  -d \"grant_type=password\" \\\n"
"  \"http://localhost:8080/auth/realms/master/protocol/openid-connect/token\"\n"
msgstr ""

#. type: Title =====
#, no-wrap
msgid "Client Credentials"
msgstr ""

#. type: Plain text
msgid "Client Credentials is used when clients (applications and services) wants to obtain access on behalf of themselves rather than on behalf of a user. This can for example be useful for background services that applies changes to the system in general rather than for a specific user."
msgstr ""

#. type: Plain text
msgid "{project_name} provides support for clients to authenticate either with a secret or with public/private keys."
msgstr ""

#. type: Plain text
msgid "For more details refer to the https://tools.ietf.org/html/rfc6749#section-4.4[Client Credentials Grant] chapter in the OAuth 2.0 specification."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Redirect URIs"
msgstr ""

#. type: Plain text
msgid "When using the redirect based flows it's important to use valid redirect uris for your clients. The redirect uris should be as specific as possible. This especially applies to client-side (public clients) applications. Failing to do so could result in:"
msgstr ""

#. type: Plain text
msgid "Open redirects - this can allow attackers to create spoof links that looks like they are coming from your domain"
msgstr ""

#. type: Plain text
msgid "Unauthorized entry - when users are already authenticated with {project_name} an attacker can use a public client where redirect uris have not be configured correctly to gain access by redirecting the user without the users knowledge"
msgstr ""

#. type: Plain text
msgid "In production for web applications always use `https` for all redirect URIs. Do not allow redirects to http."
msgstr ""

#. type: Plain text
msgid "There's also a few special redirect URIs:"
msgstr ""

#. type: Labeled list
#| msgid "http://localhost:8080/vanilla"
msgid "`$$http://localhost$$`"
msgstr ""

#. type: Plain text
msgid "This redirect URI is useful for native applications and allows the native application to create a web server on a random port that can be used to obtain the authorization code. This redirect uri allows any port."
msgstr ""

#. type: Labeled list
#, no-wrap
msgid "`urn:ietf:wg:oauth:2.0:oob`"
msgstr ""

#. type: Plain text
msgid "If its not possible to start a web server in the client (or a browser is not available) it is possible to use the special `urn:ietf:wg:oauth:2.0:oob` redirect uri.  When this redirect uri is used {project_name} displays a page with the code in the title and in a box on the page.  The application can either detect that the browser title has changed, or the user can copy/paste the code manually to the application.  With this redirect uri it is also possible for a user to use a different device to obtain a code to paste back to the application."
msgstr ""

