msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"POT-Creation-Date: 2017-09-20 08:59+0000\n"
"PO-Revision-Date: 2017-09-20 05:25-0400\n"
"Last-Translator: wadahiro <wadahiro@gmail.com>\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: keycloak-documentation-i18n\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/i18n/pot/server_development__topics__extensions.pot\n"

#. type: Plain text
#: source/securing_apps/topics/client-registration.adoc:148
#: source/securing_apps/topics/oidc/java/adapter-context.adoc:16
#: source/securing_apps/topics/oidc/java/adapter_error_handling.adoc:24
#: source/securing_apps/topics/oidc/java/multi-tenancy.adoc:17
#: source/securing_apps/topics/saml/java/assertion-api.adoc:11
#: source/server_admin/topics/identity-broker/suggested.adoc:15
#: source/server_admin/topics/identity-broker/suggested.adoc:25
#: source/server_admin/topics/identity-broker/tokens.adoc:12
#: source/server_development/topics/user-storage/augmenting.adoc:15
#: source/server_development/topics/user-storage/augmenting.adoc:47
#: source/server_development/topics/user-storage/cache.adoc:14
#: source/server_development/topics/user-storage/cache.adoc:52
#: source/server_development/topics/user-storage/cache.adoc:63
#: source/server_development/topics/user-storage/configuration.adoc:9
#: source/server_development/topics/user-storage/configuration.adoc:38
#: source/server_development/topics/user-storage/configuration.adoc:66
#: source/server_development/topics/user-storage/configuration.adoc:85
#: source/server_development/topics/user-storage/import.adoc:31
#: source/server_development/topics/user-storage/import.adoc:85
#: source/server_development/topics/user-storage/import.adoc:111
#: source/server_development/topics/user-storage/javaee.adoc:16
#: source/server_development/topics/user-storage/javaee.adoc:60
#: source/server_development/topics/user-storage/model-interfaces.adoc:7
#: source/server_development/topics/user-storage/provider-interfaces.adoc:10
#: source/server_development/topics/user-storage/provider-interfaces.adoc:59
#: source/server_development/topics/user-storage/provider-interfaces.adoc:94
#: source/server_development/topics/user-storage/registration-query.adoc:15
#: source/server_development/topics/user-storage/registration-query.adoc:33
#: source/server_development/topics/user-storage/registration-query.adoc:65
#: source/server_development/topics/user-storage/registration-query.adoc:81
#: source/server_development/topics/user-storage/registration-query.adoc:99
#: source/server_development/topics/user-storage/registration-query.adoc:132
#: source/server_development/topics/user-storage/registration-query.adoc:163
#: source/server_development/topics/user-storage/registration-query.adoc:191
#: source/server_development/topics/user-storage/registration-query.adoc:212
#: source/server_development/topics/user-storage/rest.adoc:16
#: source/server_development/topics/user-storage/rest.adoc:62
#: source/server_development/topics/user-storage/simple-example.adoc:10
#: source/server_development/topics/user-storage/simple-example.adoc:24
#: source/server_development/topics/user-storage/simple-example.adoc:43
#: source/server_development/topics/user-storage/simple-example.adoc:100
#: source/server_development/topics/user-storage/simple-example.adoc:134
#: source/server_development/topics/user-storage/simple-example.adoc:160
#: source/server_development/topics/user-storage/simple-example.adoc:182
#: source/server_development/topics/user-storage/simple-example.adoc:229
#: source/server_development/topics/user-storage/simple-example.adoc:243
#: source/server_development/topics/admin-rest-api.adoc:49
#: source/server_development/topics/auth-spi.adoc:170
#: source/server_development/topics/auth-spi.adoc:186
#: source/server_development/topics/auth-spi.adoc:199
#: source/server_development/topics/auth-spi.adoc:231
#: source/server_development/topics/auth-spi.adoc:259
#: source/server_development/topics/auth-spi.adoc:287
#: source/server_development/topics/auth-spi.adoc:310
#: source/server_development/topics/auth-spi.adoc:327
#: source/server_development/topics/auth-spi.adoc:341
#: source/server_development/topics/auth-spi.adoc:383
#: source/server_development/topics/auth-spi.adoc:437
#: source/server_development/topics/auth-spi.adoc:452
#: source/server_development/topics/auth-spi.adoc:474
#: source/server_development/topics/auth-spi.adoc:498
#: source/server_development/topics/auth-spi.adoc:546
#: source/server_development/topics/auth-spi.adoc:585
#: source/server_development/topics/auth-spi.adoc:625
#: source/server_development/topics/auth-spi.adoc:681
#: source/server_development/topics/auth-spi.adoc:708
#: source/server_development/topics/extensions.adoc:21
#: source/server_development/topics/extensions.adoc:41
#: source/server_development/topics/extensions.adoc:99
#: source/server_development/topics/extensions.adoc:130
#: source/server_development/topics/providers.adoc:18
#: source/server_development/topics/providers.adoc:53
#: source/server_development/topics/providers.adoc:111
#: source/server_development/topics/providers.adoc:121
#: source/server_development/topics/providers.adoc:157
#: source/server_development/topics/providers.adoc:279
#: source/server_development/topics/providers.adoc:323
#: source/server_development/topics/identity-brokering/account-linking.adoc:24
#: source/server_development/topics/identity-brokering/account-linking.adoc:54
#: source/server_development/topics/identity-brokering/tokens.adoc:12
#, no-wrap
msgid "[source,java]\n"
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/oidc/java/multi-tenancy.adoc:41
#: source/server_development/topics/user-storage/provider-interfaces.adoc:52
#: source/server_development/topics/extensions.adoc:70
#: source/server_development/topics/providers.adoc:143
#, no-wrap
msgid "}\n"
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/oidc/java/spring-security-adapter.adoc:196
#: source/securing_apps/topics/oidc/java/spring-security-adapter.adoc:295
#: source/server_development/topics/user-storage/simple-example.adoc:236
#: source/server_development/topics/extensions.adoc:123
#, no-wrap
msgid "    ...\n"
"}\n"
msgstr ""

#. type: Title ==
#: source/server_development/topics/extensions.adoc:3
#, no-wrap
msgid "Extending the Server"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:7
#, no-wrap
msgid "The {project_name} SPI framework offers the possibility to implement or override particular built-in providers. However {project_name}\n"
"also provides capabilities to extend it's core functionalities and domain. This includes possibilities to:\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:9
#, no-wrap
msgid "Add custom REST endpoints to the {project_name} server\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:10
#, no-wrap
msgid "Add your own custom SPI\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:11
#, no-wrap
msgid "Add custom JPA entities to the {project_name} data model\n"
msgstr ""

#. type: Title ===
#: source/server_development/topics/extensions.adoc:13
#, no-wrap
msgid "Add custom REST endpoints"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:17
#, no-wrap
msgid "This is a very powerful extension, which allows you to deploy your own REST endpoints to the {project_name} server. It enables all kinds of extensions, for example\n"
"the possibility to trigger functionality on the {project_name} server, which is not available through the default set of built-in {project_name} REST endpoints.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:19
#, no-wrap
msgid "To add a custom REST endpoint, you need to implement the `RealmResourceProviderFactory` and `RealmResourceProvider` interfaces. `RealmResourceProvider` has one important method:\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/extensions.adoc:24
#, no-wrap
msgid "Object getResource();\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:31
#, no-wrap
msgid "which allows you to return an object, which acts as a https://github.com/jax-rs[JAX-RS Resource]. For more details, see the Javadoc and our examples.\n"
"There is a very simple example in the example distribution in `providers/rest` and there is a more advanced example in `providers/domain-extension`,\n"
"which shows how to add an authenticated REST endpoint and other functionalities like <<extensions.adoc#_extensions_spi,Adding your own SPI>>\n"
"or <<extensions.adoc#_extensions_jpa,Extending datamodel with your own JPA entities>>.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:33
#, no-wrap
msgid "For details on how to package and deploy a custom provider, refer to the <<providers.adoc#_providers,Service Provider Interfaces>> chapter.\n"
msgstr ""

#. type: Title ===
#: source/server_development/topics/extensions.adoc:35
#, no-wrap
msgid "Add your own custom SPI"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:39
#, no-wrap
msgid "This is useful especially with the <<extensions.adoc#_extensions_rest,Custom REST endpoints>>. To add your own kind of SPI, you need to\n"
"implement the interface `org.keycloak.provider.Spi` and define the ID of your SPI and the `ProviderFactory` and `Provider` classes. That looks like this:\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/extensions.adoc:43
#, no-wrap
msgid "package org.keycloak.examples.domainextension.spi;\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/extensions.adoc:45
#: source/server_development/topics/providers.adoc:22
#: source/server_development/topics/providers.adoc:57
#: source/server_development/topics/providers.adoc:161
#, no-wrap
msgid "import ...\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/extensions.adoc:47
#, no-wrap
msgid "public class ExampleSpi implements Spi {\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/extensions.adoc:52
#, no-wrap
msgid "    @Override\n"
"    public boolean isInternal() {\n"
"        return false;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/extensions.adoc:57
#, no-wrap
msgid "    @Override\n"
"    public String getName() {\n"
"        return \"example\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/extensions.adoc:62
#, no-wrap
msgid "    @Override\n"
"    public Class<? extends Provider> getProviderClass() {\n"
"        return ExampleService.class;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/extensions.adoc:68
#, no-wrap
msgid "    @Override\n"
"    @SuppressWarnings(\"rawtypes\")\n"
"    public Class<? extends ProviderFactory> getProviderFactoryClass() {\n"
"        return ExampleServiceProviderFactory.class;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:74
#, no-wrap
msgid "Then you need to create the file `META-INF/services/org.keycloak.provider.Spi` and add the class of your SPI to it. For example:\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/extensions.adoc:78
#, no-wrap
msgid "org.keycloak.examples.domainextension.spi.ExampleSpi\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:83
#, no-wrap
msgid "The next step is to create the interfaces `ExampleServiceProviderFactory`, which extends from `ProviderFactory` and `ExampleService`, which extends from `Provider`.\n"
"The `ExampleService` will usually contain the business methods you need for your use case. Note that the `ExampleServiceProviderFactory` instance\n"
"is always scoped per application, however `ExampleService` is scoped per-request (or more accurately per `KeycloakSession` lifecycle).\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:85
#, no-wrap
msgid "Finally you need to implement your providers in the same manner as described in the <<providers.adoc#_providers,Service Provider Interfaces>> chapter.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:87
#, no-wrap
msgid "For more details, take a look at the example distribution at `providers/domain-extension`, which shows an Example SPI similar to the one above.\n"
msgstr ""

#. type: Title ===
#: source/server_development/topics/extensions.adoc:89
#, no-wrap
msgid "Add custom JPA entities to the {project_name} data model"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:94
#, no-wrap
msgid "If the {project_name} data model does not exactly match your desired solution, or if you want to add some core functionality to {project_name},\n"
"or when you have your own REST endpoint, you might want to extend the {project_name} data model. We enable you to add your\n"
"own JPA entities to the {project_name} JPA `EntityManager` .\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:97
#, no-wrap
msgid "To add your own JPA entities, you need to implement `JpaEntityProviderFactory` and `JpaEntityProvider`. The `JpaEntityProvider`\n"
"allows you to return a list of your custom JPA entities and provide the location and id of the liquibase changelog. An example implementation can look like this:\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/extensions.adoc:101
#, no-wrap
msgid "public class ExampleJpaEntityProvider implements JpaEntityProvider {\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/extensions.adoc:107
#, no-wrap
msgid "    // List of your JPA entities.\n"
"    @Override\n"
"    public List<Class<?>> getEntities() {\n"
"        return Collections.<Class<?>>singletonList(Company.class);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/extensions.adoc:114
#, no-wrap
msgid "    // This is used to return the location of the Liquibase changelog file.\n"
"    // You can return null if you don't want Liquibase to create and update the DB schema.\n"
"    @Override\n"
"    public String getChangelogLocation() {\n"
"    \treturn \"META-INF/example-changelog.xml\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/extensions.adoc:120
#, no-wrap
msgid "    // Helper method, which will be used internally by Liquibase.\n"
"    @Override\n"
"    public String getFactoryId() {\n"
"        return \"sample\";\n"
"    }\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:127
#, no-wrap
msgid "In the example above, we added a single JPA entity represented by class `Company`. In the code of your REST endpoint, you can then use something like\n"
"this to retrieve `EntityManager` and call DB operations on it.\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/extensions.adoc:133
#, no-wrap
msgid "EntityManager em = session.getProvider(JpaConnectionProvider.class).getEntityManager();\n"
"Company myCompany = em.find(Company.class, \"123\");\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:143
#, no-wrap
msgid "The methods `getChangelogLocation` and `getFactoryId` are important to support automatic updating of your entities by Liquibase. http://www.liquibase.org/[Liquibase]\n"
"is a framework for updating the database schema, which {project_name} internally uses to create the DB schema and update the DB schema among versions. You may need to use\n"
"it as well and create a changelog for your entities. Note that versioning of your own liquibase changelog is independent\n"
"of {project_name} versions. In other words, when you update to a new {project_name} version, you are not forced to update your\n"
"schema at the same time. And vice versa, you can update your schema even without updating the {project_name} version. The Liquibase update\n"
"is always done at the server startup, so to trigger a DB update of your schema, you just need to add the new changeset to your liquibase changelog file (in the example above\n"
"it's the file `META-INF/example-changelog.xml` (which must be packed in same JAR as the JPA entities and `ExampleJpaEntityProvider`) and then restart server.\n"
"The DB schema will be automatically updated at startup.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:145
#, no-wrap
msgid "For more details, take a look at the example distribution at example `providers/domain-extension`, which shows the `ExampleJpaEntityProvider` and `example-changelog.xml` described above.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/extensions.adoc:147
#, no-wrap
msgid "Don't forget to always backup your database before doing any changes in the Liquibase changelog and triggering a DB update.\n"
msgstr ""

