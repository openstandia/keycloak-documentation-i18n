# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"Last-Translator: Kohei Tamura <ktamura.biz.80@gmail.com>, 2017\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/openstandia/teams/79437/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Attribute :installguide_troubleshooting_name:
#, no-wrap
msgid "Troubleshooting"
msgstr "トラブルシューティング"

#. type: Title ==
#, no-wrap
msgid "Client Registration CLI"
msgstr "クライアント登録CLI"

#. type: Plain text
msgid ""
"The Client Registration CLI is a command-line interface (CLI) tool for "
"application developers to configure new clients in a self-service manner "
"when integrating with {project_name}. It is specifically designed to "
"interact with {project_name} Client Registration REST endpoints."
msgstr ""
"クライアント登録CLIは、アプリケーション開発者が{project_name}と統合する際にセルフ・サービスで新しいクライアントを設定するためのコマンドライン・インターフェイス（CLI）ツールです。"
" これは、{project_name}クライアント登録RESTエンドポイントと対話するように特別に設計されています。"

#. type: Plain text
msgid ""
"It is necessary to create or obtain a client configuration for any "
"application to be able to use {project_name}. You usually configure a new "
"client for each new application hosted on a unique host name. When an "
"application interacts with {project_name}, the application identifies itself"
" with a client ID so {project_name} can provide a login page, single sign-on"
" (SSO) session management, and other services."
msgstr ""
"{project_name}を使用できるように、任意のアプリケーションのクライアント設定を作成または取得する必要があります。通常は、一意のホスト名でホストされる新しいアプリケーションごとに、新しいクライアントを設定します。アプリケーションが{project_name}と対話する際に、アプリケーションはクライアントIDで自身を識別し、{project_name}はログイン・ページ、シングル・サインオン（SSO）セッション管理、およびその他のサービスを提供できます。"

#. type: Plain text
msgid ""
"You can configure application clients from a command line with the Client "
"Registration CLI, and you can use it in shell scripts."
msgstr "アプリケーション・クライアントは、クライアント登録CLIを使用してコマンド・ラインから設定でき、シェルスクリプトで使用できます。"

#. type: Plain text
msgid ""
"To allow a particular user to use `Client Registration CLI` the "
"{project_name} administrator typically uses the Admin Console to configure a"
" new user with proper roles or to configure a new client and client secret "
"to grant access to the Client Registration REST API."
msgstr ""
"特定のユーザーが `クライアント登録CLI` "
"を使用できるようにするため、通常、{project_name}管理者は管理コンソールを使って新しいユーザーを適切なロールで設定するか、クライアント登録REST"
" APIの権限を与えるように新しいクライアントとクライアント・シークレットを設定します 。"

#. type: Title ===
#, no-wrap
msgid "Configuring a new regular user for use with Client Registration CLI"
msgstr "クライアント登録CLIで使用するための新しい正規ユーザーの設定"

#. type: Plain text
msgid ""
"Log in to the Admin Console (for example, http://localhost:8080/auth/admin) "
"as [command]`admin`."
msgstr ""
"管理コンソール（たとえば、 http://localhost:8080/auth/admin）に [command]`admin` "
"としてログインします。"

#. type: Plain text
msgid "Select a realm to administer."
msgstr "管理するレルムを選択します。"

#. type: Plain text
msgid ""
"If you want to use an existing user, select that user to edit; otherwise, "
"create a new user."
msgstr "既存のユーザーを使用する場合は、編集するユーザーを選択します。それ以外の場合は、新しいユーザーを作成します。"

#. type: Plain text
msgid ""
"Select *Role Mappings > Client Roles > realm-management*. If you are in the "
"master realm, select *NAME-realm*, where `NAME` is the name of the target "
"realm. You can grant access to any other realm to users in the master realm."
msgstr ""
"*Role Mappings > Client Roles > realm-management* を選択します。masterレルムにいる場合は"
"、*NAME-realm* を選択します。ここで、 `NAME` "
"はターゲット・レルムの名前です。masterレルム内のユーザーに他のレルムへのアクセス権を与えることができます。"

#. type: Plain text
msgid ""
"Select *Available Roles > manage-client* to grant a full set of client "
"management permissions. Another option is to choose *view-clients* for read-"
"only or *create-client* to create new clients."
msgstr ""
"*Available Roles > manage-client* "
"を選択して、クライアント管理権限のフルセットを付与します。別の選択肢として、読み取り専用に *view-clients* "
"を、または新しいクライアント作成用に *create-client* を選択します。"

#. type: delimited block =
msgid ""
"These permissions grant the user the capability to perform operations "
"without the use of <<_initial_access_token,Initial Access Token>> or "
"<<_registration_access_token,Registration Access Token>>."
msgstr ""
"これらの権限は、ユーザーに<<_initial_access_token,初期アクセストークン>>または<<_registration_access_token,登録アクセストークン>>を使用せずに操作を実行できるようにします。"

#. type: Plain text
msgid ""
"It is possible to not assign any [command]`realm-management` roles to a "
"user. In that case, a user can still log in with the Registration Client CLI"
" but cannot use it without an Initial Access Token. Trying to perform any "
"operations without a token results in a *403 Forbidden* error."
msgstr ""
"[command]`realm-management` "
"ロールをユーザーに割り当てることはできません。その場合、ユーザーはクライアント登録CLIでログインできますが、初期アクセストークンなしでは使用できません。トークンなしで操作を実行しようとすると、"
" *403 Forbidden* エラーが発生します。"

#. type: Plain text
msgid ""
"The Administrator can issue Initial Access Tokens from the Admin Console "
"through the *Realm Settings > Client Registration > Initial Access Token* "
"menu."
msgstr ""
"管理者は、管理コンソールの *Realm Settings > Client Registration > Initial Access Token* "
"メニューから初期アクセストークンを発行できます。"

#. type: Title ===
#, no-wrap
msgid "Configuring a client for use with the Client Registration CLI"
msgstr "クライアント登録CLIで使用するためのクライアントの設定"

#. type: Plain text
msgid ""
"By default, the server recognizes the Client Registration CLI as the "
"[filename]`admin-cli` client, which is configured automatically for every "
"new realm. No additional client configuration is necessary when logging in "
"with a user name."
msgstr ""
"デフォルトでは、サーバーはクライアント登録CLIを [filename]`admin-cli` "
"クライアントとして認識します。これは新規レルムごとに自動的に設定されます。ユーザー名でログインする場合、追加のクライアント設定は必要ありません。"

#. type: Plain text
msgid ""
"Strengthen the security by configuring the client [filename]`Access Type` as"
" [filename]`Confidential` and selecting *Credentials > ClientId and Secret*."
msgstr ""
"クライアント [filename]`Access Type` を [filename]`Confidential` に設定し、 *Credentials"
" > ClientId and Secret* を選択することで、セキュリティーを強化してください。"

#. type: Plain text
msgid ""
"Provide a secret when running [command]`kcreg config credentials` by using "
"the [command]`--secret` option."
msgstr ""
"[command]`--secret` オプションを使用して、 [command]`kcreg config credentials` "
"を実行する際にシークレットを提供してください。"

#. type: Plain text
msgid ""
"Create a new client (for example, [filename]`reg-cli`) if you want to use a "
"separate client configuration for the Registration Client CLI."
msgstr ""
"クライアント登録CLIに別のクライアント設定を使用したい場合は、新しいクライアントを作成します（たとえば、 [filename]`reg-cli` ）。"

#. type: Plain text
msgid ""
"Specify which [filename]`clientId` to use (for example, [command]`--client "
"reg-cli`) when running [command]`kcreg config credentials`."
msgstr ""
"[command]`kcreg config credentials` を実行する際に使用する [filename]`clientId` "
"を指定します（たとえば、 [command]`--client reg-cli` ）。"

#. type: Plain text
msgid ""
"Enable service accounts if you want to use a service account associated with"
" the client by selecting a client to edit in the *Clients* section of the "
"`Admin Console`."
msgstr ""
"クライアントに関連付けられたサービス・アカウントを使用したい場合は、 `管理コンソール` の *Clients* "
"セクションで編集するクライアントを選択することで、サービス・アカウントを有効にします。"

#. type: Plain text
msgid ""
"Under *Settings*, change the *Access Type* to *Confidential*, toggle the "
"*Service Accounts Enabled* setting to *On*, and click [btn]`Save`."
msgstr ""
"*Settings* で、 *Access Type* を *Confidential* に変更し、 *Service Accounts "
"Enabled* の設定を *On* に切り替え、 [btn]`Save` をクリックします。"

#. type: delimited block =
msgid ""
"You can configure either [filename]`Client Id and Secret` or "
"[filename]`Signed JWT` under the *Credentials* tab ."
msgstr ""
"*Credentials* タブの下で、 [filename]`Client Id and Secret` または [filename]`Signed "
"JWT` のいずれかを設定できます。"

#. type: Plain text
msgid ""
"With the service account enabled, you can omit specifying the user when "
"running [command]`kcreg config credentials` and only provide the client "
"secret or keystore information."
msgstr ""
"サービス・アカウントを有効にすると、 [command]`kcreg config credentials` "
"を実行するときにユーザーを指定せずに、クライアント・シークレットまたはキーストア情報のみを提供することができます。"

#. type: Title ===
#, no-wrap
msgid "Installing the Client Registration CLI"
msgstr "クライアント登録CLIのインストール"

#. type: Plain text
msgid ""
"The Client Registration CLI is packaged inside the Keycloak Server "
"distribution. You can find execution scripts inside the [filename]`bin` "
"directory. The Linux script is called [filename]`kcreg.sh`, and the Windows "
"script is called [filename]`kcreg.bat`."
msgstr ""
"クライアント登録CLIは、Keycloakサーバーの配布物内にパッケージ化されています。実行スクリプトは [filename]`bin` "
"ディレクトリーにあります。Linuxスクリプトは [filename]`kcreg.sh` で、Windowsスクリプトは "
"[filename]`kcreg.bat` です。"

#. type: Plain text
msgid ""
"Add the Keycloak server directory to your [filename]`PATH` when setting up "
"the client for use from any location on the file system ."
msgstr ""
"ファイル・システム上の任意の場所からクライアントを使用できるように設定するときは、Keycloakサーバーのディレクトリーを "
"[filename]`PATH` に追加してください。"

#. type: Plain text
msgid "For example, on:"
msgstr "以下に例を示します。"

#. type: Plain text
msgid "Linux:"
msgstr "Linuxの場合："

#. type: delimited block -
#, no-wrap
msgid ""
"$ export PATH=$PATH:$KEYCLOAK_HOME/bin\n"
"$ kcreg.sh\n"
msgstr ""
"$ export PATH=$PATH:$KEYCLOAK_HOME/bin\n"
"$ kcreg.sh\n"

#. type: Plain text
msgid "Windows:"
msgstr "Windowsの場合："

#. type: delimited block -
#, no-wrap
msgid ""
"c:\\> set PATH=%PATH%;%KEYCLOAK_HOME%\\bin\n"
"c:\\> kcreg\n"
msgstr ""
"c:\\> set PATH=%PATH%;%KEYCLOAK_HOME%\\bin\n"
"c:\\> kcreg\n"

#. type: Plain text
msgid ""
"[filename]`KEYCLOAK_HOME` refers to a directory where the Keycloak Server "
"distribution was unpacked."
msgstr "[filename]`KEYCLOAK_HOME` は、Keycloakサーバーの配布物が解凍されたディレクトリーを示します。"

#. type: Title ===
#, no-wrap
msgid "Using the Client Registration CLI"
msgstr "クライアント登録CLIの使用"

#. type: Plain text
msgid "Start an authenticated session by logging in with your credentials."
msgstr "クレデンシャルでログインして、認証されたセッションを開始します。"

#. type: Plain text
msgid "Run commands on the [filename]`Client Registration REST` endpoint."
msgstr "[filename]`Client Registration REST` エンドポイントでコマンドを実行します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcreg.sh config credentials --server http://localhost:8080/auth --realm demo --user user --client reg-cli\n"
"$ kcreg.sh create -s clientId=my_client -s 'redirectUris=[\"http://localhost:8980/myapp/*\"]'\n"
"$ kcreg.sh get my_client\n"
msgstr ""
"$ kcreg.sh config credentials --server http://localhost:8080/auth --realm demo --user user --client reg-cli\n"
"$ kcreg.sh create -s clientId=my_client -s 'redirectUris=[\"http://localhost:8980/myapp/*\"]'\n"
"$ kcreg.sh get my_client\n"

#. type: delimited block -
#, no-wrap
msgid ""
"c:\\> kcreg config credentials --server http://localhost:8080/auth --realm demo --user user --client reg-cli\n"
"c:\\> kcreg create -s clientId=my_client -s \"redirectUris=[\\\"http://localhost:8980/myapp/*\\\"]\"\n"
"c:\\> kcreg get my_client\n"
msgstr ""
"c:\\> kcreg config credentials --server http://localhost:8080/auth --realm demo --user user --client reg-cli\n"
"c:\\> kcreg create -s clientId=my_client -s \"redirectUris=[\\\"http://localhost:8980/myapp/*\\\"]\"\n"
"c:\\> kcreg get my_client\n"

#. type: delimited block =
msgid ""
"In a production environment, Keycloak has to be accessed with "
"[filename]`https:` to avoid exposing tokens to network sniffers."
msgstr ""
"プロダクション環境では、ネットワーク・スニファーへのトークンの公開を避けるため、 [filename]`https:` "
"でKeycloakにアクセスする必要があります。"

#. type: Plain text
msgid ""
"If a server's certificate is not issued by one of the trusted certificate "
"authorities (CAs) that are included in Java's default certificate "
"truststore, prepare a [filename]`truststore.jks` file and instruct the "
"Client Registration CLI to use it."
msgstr ""
"サーバーの証明書が、Javaのデフォルトの証明書トラストストアに含まれている信頼できる証明機関（CA）のいずれかによって発行されていない場合は、 "
"[filename]`truststore.jks` ファイルを準備し、クライアント登録CLIに使用するよう指示します。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcreg.sh config truststore --trustpass $PASSWORD "
"~/.keycloak/truststore.jks\n"
msgstr ""
"$ kcreg.sh config truststore --trustpass $PASSWORD "
"~/.keycloak/truststore.jks\n"

#. type: delimited block -
#, no-wrap
msgid ""
"c:\\> kcreg config truststore --trustpass %PASSWORD% "
"%HOMEPATH%\\.keycloak\\truststore.jks\n"
msgstr ""
"c:\\> kcreg config truststore --trustpass %PASSWORD% "
"%HOMEPATH%\\.keycloak\\truststore.jks\n"

#. type: Title ====
#, no-wrap
msgid "Logging in"
msgstr "ログイン"

#. type: Plain text
msgid ""
"Specify a server endpoint URL and a realm when you log in with the Client "
"Registration CLI."
msgstr "クライアント登録CLIを使用してログインする際は、サーバーのエンドポイントURLとレルムを指定します。"

#. type: Plain text
msgid ""
"Specify a user name or a client id, which results in a special service "
"account being used. When using a user name, you must use a password for the "
"specified user. When using a client ID, you use a client secret or a "
"[filename]`Signed JWT` instead of a password."
msgstr ""
"ユーザー名またはクライアントIDを指定すると、特別なサービス・アカウントが使用されます。ユーザー名を使用する場合は、指定されたユーザーのパスワードを使用する必要があります。クライアントIDを使用する場合は、パスワードの代わりにクライアント・シークレットまたは"
" [filename]`Signed JWT` を使用します。"

#. type: Plain text
msgid ""
"Regardless of the login method, the account that logs in needs proper "
"permissions to be able to perform client registration operations. Keep in "
"mind that any account in a non-master realm can only have permissions to "
"manage clients within the same realm. If you need to manage different "
"realms, you can either configure multiple users in different realms, or you "
"can create a single user in the [filename]`master` realm and add roles for "
"managing clients in different realms."
msgstr ""
"ログイン方法にかかわらず、ログインするアカウントには、クライアント登録操作を実行するための適切な権限が必要です。master以外のレルムのアカウントは、同じレルム内のクライアントを管理する権限しか持てません。異なるレルムを管理する必要がある場合は、複数のユーザーを異なるレルムで設定するか、"
" [filename]`master` レルムで1人のユーザーを作成して、異なるレルムのクライアントを管理するロールを追加します。"

#. type: Plain text
msgid ""
"You cannot configure users with the Client Registration CLI. Use the Admin "
"Console web interface or the Admin Client CLI to configure users. See "
"link:{adminguide_link}[{adminguide_name}] for more details."
msgstr ""
"クライアント登録CLIでユーザーを設定することはできません。管理コンソールのWebインターフェイスまたは管理クライアントCLIを使用して、ユーザーを設定します。詳細については、link:{adminguide_link}[{adminguide_name}]を参照してください。"

#. type: Plain text
msgid ""
"When [filename]`kcreg` successfully logs in, it receives authorization "
"tokens and saves them in a private configuration file so the tokens can be "
"used for subsequent invocations. See "
"<<_working_with_alternative_configurations>> for more information on "
"configuration files."
msgstr ""
"[filename]`kcreg` "
"が正常にログインすると、認可トークンを受信してプライベート設定ファイルに保存し、その後の呼び出しでトークンを使用できるようにします。設定ファイルの詳細については、<<_working_with_alternative_configurations>>を参照してください。"

#. type: Plain text
msgid ""
"See the built-in help for more information on using the Client Registration "
"CLI."
msgstr "クライアント登録CLIの使用方法の詳細については、組み込みのヘルプを参照してください。"

#. type: delimited block -
#, no-wrap
msgid "$ kcreg.sh help\n"
msgstr "$ kcreg.sh help\n"

#. type: delimited block -
#, no-wrap
msgid "c:\\> kcreg help\n"
msgstr "c:\\> kcreg help\n"

#. type: Plain text
msgid ""
"See [filename]`kcreg config credentials --help` for more information about "
"starting an authenticated session."
msgstr ""
"認証されたセッションの開始についての詳細は、 [filename]`kcreg config credentials --help` "
"を参照してください。"

#. type: Title ===
#, no-wrap
msgid "Working with alternative configurations"
msgstr "代替設定の使用"

#. type: Plain text
msgid ""
"By default, the Client Registration CLI automatically maintains a "
"configuration file at a default location, "
"[filename]`./.keycloak/kcreg.config`, under the user's home directory. You "
"can use the [command]`--config` option to point to a different file or "
"location to mantain multiple authenticated sessions in parallel. It is the "
"safest way to perform operations tied to a single configuration file from a "
"single thread."
msgstr ""
"デフォルトでは、クライアント登録CLIは、ユーザーのホーム・ディレクトリー配下のデフォルトの場所に設定ファイル（ "
"[filename]`./.keycloak/kcreg.config` ）を自動的に保存します。 [command]`--config` "
"オプションを使うと別のファイルや場所を指すことができ、複数の認証済みセッションを並行して処理できます。1つのスレッドから1つの設定ファイルに結び付けられた操作を実行するのが最も安全な方法です。"

#. type: delimited block =
msgid ""
"Do not make the configuration file visible to other users on the system. The"
" configuration file contains access tokens and secrets that should be kept "
"private."
msgstr ""
"システム上の他のユーザーが設定ファイルを参照できないようにしてください。設定ファイルには、非公開にしておくべきアクセストークンとシークレットが含まれています。"

#. type: Plain text
msgid ""
"You might want to avoid storing secrets inside a configuration file by using"
" the [command]`--no-config` option with all of your commands, even thought "
"it is less convenient and requires more token requests to do so. Specify all"
" authentication information with each [command]`kcreg` invocation."
msgstr ""
"利便性が低く、より多くのトークン要求が必要ではありますが、すべてのコマンドで [command]`--no-config` "
"オプションを使用することで、設定ファイル内にシークレットを保存しないようにすることができます。各 [command]`kcreg` "
"呼び出しごとにすべての認証情報を指定してください。"

#. type: Title ====
#, no-wrap
msgid "Initial Access and Registration Access Tokens"
msgstr "初期アクセストークンと登録アクセストークン"

#. type: Plain text
msgid ""
"Developers who do not have an account configured at the Keycloak server they"
" want to use can use the Client Registration CLI. That is possible when the "
"realm administrator issues a developer an Initial Access Token. It is up to "
"the realm administrator to decide how to issue and distribute these tokens. "
"The realm administrator can limit the maximum age of the Initial Access "
"Token and the total number of clients that can be created with it."
msgstr ""
"使用したいKeycloakサーバーで設定されたアカウントを持っていない開発者は、クライアント登録CLIを使用できます。レルム管理者が開発者に初期アクセストークンを発行することにより、開発者は使用することができます。これらのトークンの発行方法と配布方法は、レルム管理者が決定します。レルム管理者は、初期アクセストークンの最大経過時間と、初期アクセストークンを使用して作成できるクライアントの総数を制限できます。"

#. type: Plain text
msgid ""
"Once a developer has an Initial Access Token, the developer can use it to "
"create new clients without authenticating with [command]`kcreg config "
"credentials`. The Initial Access Token can be stored in the configuration "
"file or specified as part of the [command]`kcreg create` command."
msgstr ""
"開発者が初期アクセストークンを取得すると、開発者はこれを使用して、 [command]`kcreg config credentials` "
"で認証せずに新しいクライアントを作成できます。初期アクセストークンは、設定ファイルに保存するか、 [command]`kcreg create` "
"コマンドの一部として指定することができます。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcreg.sh config initial-token $TOKEN\n"
"$ kcreg.sh create -s clientId=myclient\n"
msgstr ""
"$ kcreg.sh config initial-token $TOKEN\n"
"$ kcreg.sh create -s clientId=myclient\n"

#. type: Plain text
msgid "or"
msgstr "または"

#. type: delimited block -
#, no-wrap
msgid "$ kcreg.sh create -s clientId=myclient -t $TOKEN\n"
msgstr "$ kcreg.sh create -s clientId=myclient -t $TOKEN\n"

#. type: delimited block -
#, no-wrap
msgid ""
"c:\\> kcreg config initial-token %TOKEN%\n"
"c:\\> kcreg create -s clientId=myclient\n"
msgstr ""
"c:\\> kcreg config initial-token %TOKEN%\n"
"c:\\> kcreg create -s clientId=myclient\n"

#. type: delimited block -
#, no-wrap
msgid "c:\\> kcreg create -s clientId=myclient -t %TOKEN%\n"
msgstr "c:\\> kcreg create -s clientId=myclient -t %TOKEN%\n"

#. type: Plain text
msgid ""
"When using an Initial Access Token, the server response includes a newly "
"issued Registration Access Token. Any subsequent operation for that client "
"needs to be performed by authenticating with that token, which is only valid"
" for that client."
msgstr ""
"初期アクセストークンを使用する場合、サーバー・レスポンスには新しく発行された登録アクセストークンが含まれます。そのクライアントの後続の操作は、そのクライアントに対してのみ有効なトークンで認証することによって実行される必要があります。"

#. type: Plain text
msgid ""
"The Client Registration CLI automatically uses its private configuration "
"file to save and use this token with its associated client. As long as the "
"same configuration file is used for all client operations, the developer "
"does not need to authenticate to read, update, or delete a client that was "
"created this way."
msgstr ""
"クライアント登録CLIはプライベートな設定ファイルを自動的に使用して、このトークンを関連付けられたクライアントと共に保存して使用します。すべてのクライアント操作で同じ設定ファイルが使用されている限り、開発者はこのように作成されたクライアントの読み取り、更新、または削除をするために、認証する必要はありません。"

#. type: Plain text
msgid ""
"See <<_client_registration, Client Registration>> for more information about"
" Initial Access and Registration Access Tokens."
msgstr ""
"初期アクセストークンおよび登録アクセストークンの詳細については、<<_client_registration,クライアント登録>>を参照してください。"

#. type: Plain text
msgid ""
"Run the [command]`kcreg config initial-token --help` and [command]`kcreg "
"config registration-token --help` commands for more information on how to "
"configure tokens with the Client Registration CLI."
msgstr ""
"クライアント登録CLIでトークンを設定する方法の詳細については、 [command]`kcreg config initial-token "
"--help` と [command]`kcreg config registration-token --help` コマンドを実行してください。"

#. type: Title ====
#, no-wrap
msgid "Creating a client configuration"
msgstr "クライアント設定の作成"

#. type: Plain text
msgid ""
"The first task after authenticating with credentials or configuring an "
"Initial Access Token is usually to create a new client. Often you might want"
" to use a prepared JSON file as a template and set or override some of the "
"attributes."
msgstr ""
"クレデンシャルで認証したり、初期アクセストークンを設定した後の最初のタスクは、通常、新しいクライアントを作成することです。準備されたJSONファイルをテンプレートとして使用し、いくつかの属性を設定または上書きすることがよくあります。"

#. type: Plain text
msgid ""
"The following example shows how to read a JSON file, override any client id "
"it may contain, set any other attributes, and print the configuration to a "
"standard output after successful creation."
msgstr ""
"次の例は、JSONファイルを読み込み、それに含まれるクライアントIDを上書きし、他の属性を設定し、作成が成功した後に標準出力に設定を出力する方法を示しています。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcreg.sh create -f client-template.json -s clientId=myclient -s "
"baseUrl=/myclient -s 'redirectUris=[\"/myclient/*\"]' -o\n"
msgstr ""
"$ kcreg.sh create -f client-template.json -s clientId=myclient -s "
"baseUrl=/myclient -s 'redirectUris=[\"/myclient/*\"]' -o\n"

#. type: delimited block -
#, no-wrap
msgid ""
"C:\\> kcreg create -f client-template.json -s clientId=myclient -s "
"baseUrl=/myclient -s \"redirectUris=[\\\"/myclient/*\\\"]\" -o\n"
msgstr ""
"C:\\> kcreg create -f client-template.json -s clientId=myclient -s "
"baseUrl=/myclient -s \"redirectUris=[\\\"/myclient/*\\\"]\" -o\n"

#. type: Plain text
msgid ""
"Run the [command]`kcreg create --help` for more information about the "
"[command]`kcreg create` command."
msgstr ""
"[command]`kcreg create` コマンドの詳細については、 [command]`kcreg create --help` "
"を実行してください。"

#. type: Plain text
msgid ""
"You can use [command]`kcreg attrs` to list available attributes. Keep in "
"mind that many configuration attributes are not checked for validity or "
"consistency. It is up to you to specify proper values. Remember that you "
"should not have any id fields in your template and should not specify them "
"as arguments to the [command]`kcreg create` command."
msgstr ""
"[command]`kcreg attrs` "
"を使って、利用可能な属性の一覧を取得できます。多くの設定属性の妥当性や一貫性はチェックされません。適切な値を指定する必要があります。また、テンプレートには"
" `id` フィールドを持たせず、  [command]`kcreg create` の引数として指定しないことを忘れないでください。"

#. type: Title ====
#, no-wrap
msgid "Retrieving a client configuration"
msgstr "クライアント設定の取得"

#. type: Plain text
msgid ""
"You can retrieve an existing client by using the [command]`kcreg get` "
"command."
msgstr "すでに存在するクライアントについては、 [command]`kcreg get` コマンドを使用することで取得できます。"

#. type: delimited block -
#, no-wrap
msgid "$ kcreg.sh get myclient\n"
msgstr "$ kcreg.sh get myclient\n"

#. type: delimited block -
#, no-wrap
msgid "C:\\> kcreg get myclient\n"
msgstr "C:\\> kcreg get myclient\n"

#. type: Plain text
msgid ""
"You can also retrieve the client configuration as an adapter configuration "
"file, which you can package with your web application."
msgstr "また、Webアプリケーションとパッケージ化できるアダプター設定ファイルとして、クライアント設定を取得することもできます。"

#. type: delimited block -
#, no-wrap
msgid "$ kcreg.sh get myclient -e install > keycloak.json\n"
msgstr "$ kcreg.sh get myclient -e install > keycloak.json\n"

#. type: delimited block -
#, no-wrap
msgid "C:\\> kcreg get myclient -e install > keycloak.json\n"
msgstr "C:\\> kcreg get myclient -e install > keycloak.json\n"

#. type: Plain text
msgid ""
"Run the [command]`kcreg get --help` command for more information about the "
"[command]`kcreg get` command."
msgstr ""
"[command]`kcreg get` コマンドの詳細については、 [command]`kcreg get --help` "
"コマンドを実行してください。"

#. type: Title ====
#, no-wrap
msgid "Modifying a client configuration"
msgstr "クライアント設定の更新"

#. type: Plain text
msgid "There are two methods for updating a client configuration."
msgstr "クライアント設定の更新には2つの方法があります。"

#. type: Plain text
msgid ""
"One method is to submit a complete new state to the server after getting the"
" current configuration, saving it to a file, editing it, and posting it back"
" to the server."
msgstr "1つ目の方法は、現在の設定を取得してファイルに保存し、編集してから、新しい状態をサーバーにPOSTで送信する方法です。"

#. type: delimited block -
#, no-wrap
msgid ""
"$ kcreg.sh get myclient > myclient.json\n"
"$ vi myclient.json\n"
"$ kcreg.sh update myclient -f myclient.json\n"
msgstr ""
"$ kcreg.sh get myclient > myclient.json\n"
"$ vi myclient.json\n"
"$ kcreg.sh update myclient -f myclient.json\n"

#. type: delimited block -
#, no-wrap
msgid ""
"C:\\> kcreg get myclient > myclient.json\n"
"C:\\> notepad myclient.json\n"
"C:\\> kcreg update myclient -f myclient.json\n"
msgstr ""
"C:\\> kcreg get myclient > myclient.json\n"
"C:\\> notepad myclient.json\n"
"C:\\> kcreg update myclient -f myclient.json\n"

#. type: Plain text
msgid ""
"The second method fetches the current client, sets or deletes fields on it, "
"and posts it back in one step."
msgstr "2つ目の方法は、現在のクライアントをフェッチし、そのクライアント上のフィールドを設定または削除し、一度にPOSTで送信する方法です。"

#. type: delimited block -
#, no-wrap
msgid "$ kcreg.sh update myclient -s enabled=false -d redirectUris\n"
msgstr "$ kcreg.sh update myclient -s enabled=false -d redirectUris\n"

#. type: delimited block -
#, no-wrap
msgid "C:\\> kcreg update myclient -s enabled=false -d redirectUris\n"
msgstr "C:\\> kcreg update myclient -s enabled=false -d redirectUris\n"

#. type: Plain text
msgid ""
"You can also use a file that contains only changes to be applied so you do "
"not have to specify too many values as arguments. In this case, specify "
"[command]`--merge` to tell the Client Registration CLI that rather than "
"treating the JSON file as a full, new configuration, it should treat it as a"
" set of attributes to be applied over the existing configuration."
msgstr ""
"適用される変更のみを含むファイルを使用することもできるので、引数に多くの値を指定する必要はありません。この場合、 [command]`--merge` "
"をクライアント登録CLIに指定すると、JSONファイルは完全な新しい設定として扱われるのではなく、既存の設定に適用される属性のセットとして扱われます。"

#. type: delimited block -
#, no-wrap
msgid "$ kcreg.sh update myclient --merge -d redirectUris -f mychanges.json\n"
msgstr "$ kcreg.sh update myclient --merge -d redirectUris -f mychanges.json\n"

#. type: delimited block -
#, no-wrap
msgid "C:\\> kcreg update myclient --merge -d redirectUris -f mychanges.json\n"
msgstr "C:\\> kcreg update myclient --merge -d redirectUris -f mychanges.json\n"

#. type: Plain text
msgid ""
"Run the [command]`kcreg update --help` command for more information about "
"the [command]`kcreg update` command."
msgstr ""
"[command]`kcreg update` コマンドの詳細については、 [command]`kcreg update --help` "
"コマンドを実行してください。"

#. type: Title ====
#, no-wrap
msgid "Deleting a client configuration"
msgstr "クライアント設定の削除"

#. type: Plain text
msgid "Use the following example to delete a client."
msgstr "クライアントを削除するには、以下の例を使用します。 "

#. type: delimited block -
#, no-wrap
msgid "$ kcreg.sh delete myclient\n"
msgstr "$ kcreg.sh delete myclient\n"

#. type: delimited block -
#, no-wrap
msgid "C:\\> kcreg delete myclient\n"
msgstr "C:\\> kcreg delete myclient\n"

#. type: Plain text
msgid ""
"Run the [command]`kcreg delete --help` command for more information about "
"the [command]`kcreg delete` command."
msgstr ""
"[command]`kcreg delete` コマンドの詳細については、 [command]`kcreg delete --help` "
"コマンドを実行してください。"

#. type: Title ====
#, no-wrap
msgid "Refreshing invalid Registration Access Tokens"
msgstr "無効な登録アクセストークンのリフレッシュ"

#. type: Plain text
msgid ""
"When performing a create, read, update, and delete (CRUD) operation using "
"the [command]`--no-config` mode, the Client Registration CLI cannot handle "
"Registration Access Tokens for you. In that case, it is possible to lose "
"track of the most recently issued Registration Access Token for a client, "
"which makes it impossible to perform any further CRUD operations on that "
"client without authenticating with an account that has *manage-clients* "
"permissions."
msgstr ""
"[command]`--no-config` "
"モードを使用して作成、読み込み、更新、削除（CRUD）操作を実行すると、クライアント登録CLIは登録アクセストークンを処理できなくなります。その場合、クライアントのために最も最近発行された登録アクセストークンの追跡を失う可能性があり、"
" *manage-clients* 権限を持つアカウントで認証なしでは、そのクライアントでそれ以上のCRUD操作を実行することは不可能になります。"

#. type: Plain text
msgid ""
"If you have permissions, you can issue a new Registration Access Token for "
"the client and have it printed to a standard output or saved to a "
"configuration file of your choice. Otherwise, you have to ask the realm "
"administrator to issue a new Registration Access Token for your client and "
"send it to you. You can then pass it to any CRUD command via the "
"[command]`--token` option. You can also use the [command]`kcreg config "
"registration-token` command to save the new token in a configuration file "
"and have the Client Registration CLI automatically handle it for you from "
"that point on."
msgstr ""
"権限を持っている場合は、クライアント用に新しい登録アクセストークンを発行し、標準出力に出力するか、選択した設定ファイルに保存することができます。それ以外の場合は、レルム管理者にクライアントの新しい登録アクセストークンを発行して、それを送信するよう依頼する必要があります。その際は、"
" [command]`--token` オプションを使ってCRUDコマンドに渡すことができます。また、 [command]`kcreg config "
"registration-token` "
"コマンドを使って新しいトークンを設定ファイルに保存し、クライアント登録CLIが自動的にそれを処理するようにすることもできます。"

#. type: Plain text
msgid ""
"Run the [command]`kcreg update-token --help` command for more information "
"about the [command]`kcreg update-token` command."
msgstr ""
"[command]`kcreg update-token` コマンドの詳細については、 [command]`kcreg update-token "
"--help` コマンドを実行してください。"

#. type: Plain text
msgid ""
"Q: When logging in, I get an error: *Parameter client_assertion_type is "
"missing [invalid_client]."
msgstr ""
"Q：ログインすると、次のエラーが表示されます：*Parameter client_assertion_type is missing "
"[invalid_client]"

#. type: Plain text
msgid ""
"A: This error means your client is configured with [filename]`Signed JWT` "
"token credentials, which means you have to use the [command]`--keystore` "
"parameter when logging in."
msgstr ""
"A：このエラーメッセージは、クライアントが [filename]`Signed JWT` "
"のトークン・クレデンシャルで設定されていることを意味します。つまり、ログイン時に [command]`--keystore` "
"パラメータを使用する必要があります。"
