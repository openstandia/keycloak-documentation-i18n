# 
# Translators:
# Hiroyuki Wada <wadahiro@gmail.com>, 2023
# Kohei Tamura <ktamura.biz.80@gmail.com>, 2023
# 
msgid ""
msgstr ""
"Last-Translator: Kohei Tamura <ktamura.biz.80@gmail.com>, 2023\n"
"Language-Team: Japanese (Japan) (https://app.transifex.com/openstandia/teams/79437/ja_JP/)\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid "Keycloak Operator guide"
msgstr "Keycloak Operatorガイド"

msgid "Keycloak Operator Installation"
msgstr "Keycloak Operatorのインストール"

msgid "Installing the Keycloak Operator"
msgstr "Keycloak Operatorのインストール"

msgid ""
"This guide describes how to install the Keycloak Operator in a Kubernetes or"
" OpenShift cluster."
msgstr ""
"このガイドでは、KubernetesまたはOpenShiftクラスターにKeycloak Operatorをインストールする方法を説明します。"

msgid "Installing by using the Operator Lifecycle Manager"
msgstr "Operator Lifecycle Managerを使用したインストール"

msgid ""
"The recommended way to install the Keycloak Operator in Kubernetes "
"environments is to use the Operator Lifecycle Manager (OLM)."
msgstr ""
"Kubernetes環境にKeycloak Operatorをインストールする推奨方法は、Operator Lifecycle "
"Manager（OLM）を使用することです。"

msgid "Prerequisites"
msgstr "前提条件"

msgid ""
"Make sure OLM is installed in your environment. For details, see "
"https://github.com/operator-framework/operator-lifecycle-"
"manager/blob/master/doc/install/install.md#install-a-release[Installing "
"OLM]."
msgstr ""
"お使いの環境にOLMがインストールされていることを確認してください。詳細は、 https://github.com/operator-"
"framework/operator-lifecycle-"
"manager/blob/master/doc/install/install.md#install-a-release[OLMのインストール] "
"を参照してください。"

msgid ""
"Be sure that you have cluster-admin permission or an equivalent level of "
"permissions granted by an administrator."
msgstr "クラスタ管理者のパーミッションまたは管理者から付与された同等のレベルのパーミッションを持っていることを確認してください。"

msgid "Using the OpenShift web console"
msgstr "OpenShiftのWeb]コンソールの使用"

msgid ""
"The following procedure describes how to install the Keycloak Operator. "
"However, for general instructions on installing Operators using OLM, see "
"https://olm.operatorframework.io/docs/tasks/install-operator-with-"
"olm/[Install your operator with OLM]. In the default Catalog, the Keycloak "
"Operator is named `keycloak-operator`. Make sure to use the `fast` channel "
"to find the operator."
msgstr ""
"以下の手順では、Keycloak "
"Operatorのインストール方法について説明します。ただし、OLMを使用したOperatorのインストールに関する一般的な手順については、 "
"https://olm.operatorframework.io/docs/tasks/install-operator-with-"
"olm/[OLMを使用したOperatorのインストール] を参照してください。デフォルトのカタログでは、Keycloak Operatorは "
"`keycloak-operator` という名前になっています。必ず `fast` チャンネルを使用してOperatorを見つけてください。"

msgid "Perform this procedure on an OpenShift cluster."
msgstr "OpenShiftクラスターでこの手順を実行します。"

msgid "Open the OpenShift Container Platform web console."
msgstr "OpenShift Container Platform Webコンソールを開きます。"

msgid "In the left column, click *Home*, *Operators*, *OperatorHub*."
msgstr "左の列で *Home* 、 *Operators* 、 *OperatorHub* の順にクリックします。"

msgid "Search for \"keycloak\" on the search input box."
msgstr "検索入力ボックスで「keycloak」を検索します。"

msgid "Select the Keycloak Operator from the list of results."
msgstr "結果のリストからKeycloak Operatorを選択します。"

msgid "Follow the instructions on the screen."
msgstr "画面の指示に従ってください。"

msgid "Make sure you are installing from the *fast* channel:"
msgstr "次のように *fast* チャンネルからインストールしていることを確認してください。"

msgid "Installing by using kubectl without Operator Lifecycle Manager"
msgstr "Operator Lifecycle Managerを使用しないkubectlによるインストール"

msgid ""
"You can install the Operator on a vanilla Kubernetes cluster by using "
"`kubectl` commands:"
msgstr "`kubectl` コマンドを使用して、以下のようにデフォルトのKubernetesクラスターにOperatorをインストールできます。"

msgid "Install the CRDs by entering the following commands:"
msgstr "以下のコマンドを入力して、CRDをインストールします。"

msgid ""
"kubectl apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/{version}/kubernetes/keycloaks.k8s.keycloak.org-v1.yml\n"
"kubectl apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/{version}/kubernetes/keycloakrealmimports.k8s.keycloak.org-v1.yml"
msgstr ""
"kubectl apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/{version}/kubernetes/keycloaks.k8s.keycloak.org-v1.yml\n"
"kubectl apply -f https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/{version}/kubernetes/keycloakrealmimports.k8s.keycloak.org-v1.yml"

msgid ""
"Install the Keycloak Operator deployment by entering the following command:"
msgstr "以下のコマンドを入力して、Keycloak Operatorの配備をインストールします。"

msgid ""
"kubectl apply -f "
"https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/{version}/kubernetes/kubernetes.yml"
msgstr ""
"kubectl apply -f "
"https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/{version}/kubernetes/kubernetes.yml"

msgid ""
"Currently the Operator watches only the namespace where the Operator is "
"installed."
msgstr "現在、Operatorは、Operatorがインストールされているネームスペースのみを監視します。"

msgid "Basic Keycloak deployment"
msgstr "基本的なKeycloakのデプロイ"

msgid "Performing a basic Keycloak deployment"
msgstr "基本的なKeycloakのデプロイの実行"

msgid ""
"This guide describes how to perform a basic Keycloak Deployment on "
"Kubernetes or OpenShift using the Operator."
msgstr ""
"このガイドでは、Operatorを使用してKubernetesまたはOpenShift上で基本的なKeycloakデプロイメントを実行する方法を説明します。"

msgid "Preparing for deployment"
msgstr "デプロイの準備"

msgid ""
"Once the Keycloak Operator is installed and running in the cluster "
"namespace, you can set up the other deployment prerequisites."
msgstr "Keycloak Operatorがクラスターのネームスペースにインストールされ、実行されると、その他のデプロイの前提条件を設定できます。"

msgid "Database"
msgstr "データベース"

msgid "Hostname"
msgstr "Hostname"

msgid "TLS Certificate and associated keys"
msgstr "TLS証明書と関連する鍵"

msgid ""
"A database should be available and accessible from the cluster namespace "
"where Keycloak is installed. For a list of supported databases, see "
"link:{links_server_db_url}[{links_server_db_name}]. The Keycloak Operator "
"does not manage the database and you need to provision it yourself. Consider"
" verifying your cloud provider offering or using a database operator such as"
" https://access.crunchydata.com/documentation/postgres-"
"operator/latest/[Crunchy]."
msgstr ""
"データベースが利用可能で、Keycloakがインストールされているクラスター・ネームスペースからアクセスできる必要があります。サポートされているデータベースのリストについては、"
" link:{links_server_db_url}[{links_server_db_name}] を参照してください。Keycloak "
"Operatorはデータベースを管理しないので、自分でプロビジョニングする必要があります。クラウド・プロバイダーが提供するサービスを確認するか、 "
"https://access.crunchydata.com/documentation/postgres-"
"operator/latest/[Crunchy] のようなデータベースオペレーターを使用することを検討してください。"

msgid ""
"For development purposes, you can use an ephemeral PostgreSQL pod "
"installation. To provision it, enter the following commands:"
msgstr ""
"開発目的では、エフェメラルなPostgreSQLのポッドインストールを使用できます。これをプロビジョニングするには、以下のコマンドを入力してください。"

msgid ""
"cat <<EOF >> example-postgres.yaml\n"
"apiVersion: apps/v1\n"
"kind: StatefulSet\n"
"metadata:\n"
"  name: postgresql-db\n"
"spec:\n"
"  serviceName: postgresql-db-service\n"
"  selector:\n"
"    matchLabels:\n"
"      app: postgresql-db\n"
"  replicas: 1\n"
"  template:\n"
"    metadata:\n"
"      labels:\n"
"        app: postgresql-db\n"
"    spec:\n"
"      containers:\n"
"        - name: postgresql-db\n"
"          image: postgres:latest\n"
"          env:\n"
"            - name: POSTGRES_PASSWORD\n"
"              value: testpassword\n"
"            - name: PGDATA\n"
"              value: /data/pgdata\n"
"            - name: POSTGRES_DB\n"
"              value: keycloak\n"
"---\n"
"apiVersion: v1\n"
"kind: Service\n"
"metadata:\n"
"  name: postgres-db\n"
"spec:\n"
"  selector:\n"
"    app: postgresql-db\n"
"  type: LoadBalancer\n"
"  ports:\n"
"  - port: 5432\n"
"    targetPort: 5432\n"
"EOF\n"
"kubectl apply -f example-postgres.yaml"
msgstr ""
"cat <<EOF >> example-postgres.yaml\n"
"apiVersion: apps/v1\n"
"kind: StatefulSet\n"
"metadata:\n"
"  name: postgresql-db\n"
"spec:\n"
"  serviceName: postgresql-db-service\n"
"  selector:\n"
"    matchLabels:\n"
"      app: postgresql-db\n"
"  replicas: 1\n"
"  template:\n"
"    metadata:\n"
"      labels:\n"
"        app: postgresql-db\n"
"    spec:\n"
"      containers:\n"
"        - name: postgresql-db\n"
"          image: postgres:latest\n"
"          env:\n"
"            - name: POSTGRES_PASSWORD\n"
"              value: testpassword\n"
"            - name: PGDATA\n"
"              value: /data/pgdata\n"
"            - name: POSTGRES_DB\n"
"              value: keycloak\n"
"---\n"
"apiVersion: v1\n"
"kind: Service\n"
"metadata:\n"
"  name: postgres-db\n"
"spec:\n"
"  selector:\n"
"    app: postgresql-db\n"
"  type: LoadBalancer\n"
"  ports:\n"
"  - port: 5432\n"
"    targetPort: 5432\n"
"EOF\n"
"kubectl apply -f example-postgres.yaml"

msgid ""
"For a production ready installation, you need a hostname that can be used to"
" contact Keycloak. See "
"link:{links_server_hostname_url}[{links_server_hostname_name}] for the "
"available configurations."
msgstr ""
"本番環境でのインストールには、Keycloakとの連絡に使用できるホスト名が必要です。利用可能な設定は "
"link:{links_server_hostname_url}[{links_server_hostname_name}] を参照してください。"

msgid "For development purposes, this guide will use `test.keycloak.org`."
msgstr "開発目的のため、このガイドでは `test.keycloak.org` を使用します。"

msgid "TLS Certificate and key"
msgstr "TLS証明書と鍵"

msgid ""
"See your Certification Authority to obtain the certificate and the key."
msgstr "証明書と鍵を入手するには、認証局にお問い合わせください。"

msgid ""
"For development purposes, you can enter this command to obtain a self-signed"
" certificate:"
msgstr "開発目的であれば、以下のコマンドを入力して自己署名証明書を取得することができます。"

msgid ""
"openssl req -subj '/CN=test.keycloak.org/O=Test Keycloak./C=US' -newkey "
"rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out certificate.pem"
msgstr ""
"openssl req -subj '/CN=test.keycloak.org/O=Test Keycloak./C=US' -newkey "
"rsa:2048 -nodes -keyout key.pem -x509 -days 365 -out certificate.pem"

msgid ""
"You should install it in the cluster namespace as a Secret by entering this "
"command:"
msgstr "以下のコマンドを入力して、シークレットとしてクラスタ・ネームスペースにインストールしてください。"

msgid ""
"kubectl create secret tls example-tls-secret --cert certificate.pem --key "
"key.pem"
msgstr ""
"kubectl create secret tls example-tls-secret --cert certificate.pem --key "
"key.pem"

msgid "Deploying Keycloak"
msgstr "Keycloakのデプロイ"

msgid ""
"To deploy Keycloak, you create a Custom Resource (CR) based on the Keycloak "
"Custom Resource Definition (CRD)."
msgstr "Keycloakをデプロイするには、Keycloakカスタムリソース定義（CRD）に基づいてカスタムリソース（CR）を作成します。"

msgid ""
"Consider storing the Database credentials in a separate Secret. Enter the "
"following commands:"
msgstr "データベースのクレデンシャルを別のシークレットに保存することを検討します。以下のコマンドを入力します。"

msgid ""
"kubectl create secret generic keycloak-db-secret \\\n"
"  --from-literal=username=[your_database_username] \\\n"
"  --from-literal=password=[your_database_password]"
msgstr ""
"kubectl create secret generic keycloak-db-secret \\\n"
"  --from-literal=username=[your_database_username] \\\n"
"  --from-literal=password=[your_database_password]"

msgid ""
"You can customize several fields using the Keycloak CRD. However, for a "
"basic deployment, you can enter the following example commands:"
msgstr ""
"Keycloak "
"CRDを使用して、いくつかのフィールドをカスタマイズできます。しかし、基本的なデプロイの場合、以下のコマンド例を入力することができます。"

msgid ""
"cat <<EOF >> example-kc.yaml\n"
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: Keycloak\n"
"metadata:\n"
"  name: example-kc\n"
"spec:\n"
"  instances: 1\n"
"  db:\n"
"    vendor: postgres\n"
"    host: postgres-db\n"
"    usernameSecret:\n"
"      name: keycloak-db-secret\n"
"      key: username\n"
"    passwordSecret:\n"
"      name: keycloak-db-secret\n"
"      key: password\n"
"  http:\n"
"    tlsSecret: example-tls-secret\n"
"  hostname:\n"
"    hostname: test.keycloak.org\n"
"EOF\n"
"kubectl apply -f example-kc.yaml"
msgstr ""
"cat <<EOF >> example-kc.yaml\n"
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: Keycloak\n"
"metadata:\n"
"  name: example-kc\n"
"spec:\n"
"  instances: 1\n"
"  db:\n"
"    vendor: postgres\n"
"    host: postgres-db\n"
"    usernameSecret:\n"
"      name: keycloak-db-secret\n"
"      key: username\n"
"    passwordSecret:\n"
"      name: keycloak-db-secret\n"
"      key: password\n"
"  http:\n"
"    tlsSecret: example-tls-secret\n"
"  hostname:\n"
"    hostname: test.keycloak.org\n"
"EOF\n"
"kubectl apply -f example-kc.yaml"

msgid ""
"To check that the Keycloak instance has been provisioned in the cluster, "
"check the status of the created CR by entering the following command:"
msgstr ""
"Keycloakインスタンスがクラスターにプロビジョニングされたことを確認するには、次のコマンドを入力して作成されたCRのステータスを確認します。"

msgid ""
"kubectl get keycloaks/example-kc -o go-template='{{range "
".status.conditions}}CONDITION: {{.type}}{{\"\\n\"}}  STATUS: "
"{{.status}}{{\"\\n\"}}  MESSAGE: {{.message}}{{\"\\n\"}}{{end}}'"
msgstr ""
"kubectl get keycloaks/example-kc -o go-template='{{range "
".status.conditions}}CONDITION: {{.type}}{{\"\\n\"}}  STATUS: "
"{{.status}}{{\"\\n\"}}  MESSAGE: {{.message}}{{\"\\n\"}}{{end}}'"

msgid ""
"When the deployment is ready, look for output similar to the following:"
msgstr "デプロイの準備ができたら、以下のような出力を探してください。"

msgid ""
"CONDITION: Ready\n"
"  STATUS: true\n"
"  MESSAGE:\n"
"CONDITION: HasErrors\n"
"  STATUS: false\n"
"  MESSAGE:\n"
"CONDITION: RollingUpdate\n"
"  STATUS: false\n"
"  MESSAGE:"
msgstr ""
"CONDITION: Ready\n"
"  STATUS: true\n"
"  MESSAGE:\n"
"CONDITION: HasErrors\n"
"  STATUS: false\n"
"  MESSAGE:\n"
"CONDITION: RollingUpdate\n"
"  STATUS: false\n"
"  MESSAGE:"

msgid "Accessing the Keycloak deployment"
msgstr "Keycloakの配備へのアクセス"

msgid ""
"The Keycloak deployment is exposed through a basic Ingress and is accessible"
" through the provided hostname. If the default ingress does not fit your use"
" case, disable it by setting `ingress` spec with `enabled` property to "
"`false` value:"
msgstr ""
"Keycloakのデプロイは基本的なIngressを通して公開され、提供されたホスト名を通してアクセスできます。デフォルトのIngressがユースケースに合わない場合は、"
" `ingress` 仕様の `enabled` プロパティーを `false` に設定してIngressを無効にします。"

msgid ""
"cat <<EOF >> example-kc.yaml\n"
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: Keycloak\n"
"metadata:\n"
"  name: example-kc\n"
"spec:\n"
"    ...\n"
"    ingress:\n"
"      enabled: false\n"
"EOF\n"
"kubectl apply -f example-kc.yaml"
msgstr ""
"cat <<EOF >> example-kc.yaml\n"
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: Keycloak\n"
"metadata:\n"
"  name: example-kc\n"
"spec:\n"
"    ...\n"
"    ingress:\n"
"      enabled: false\n"
"EOF\n"
"kubectl apply -f example-kc.yaml"

msgid ""
"You can provide an alternative ingress resource pointing to the service "
"`<keycloak-cr-name>-service`."
msgstr "サービス `<keycloak-cr-name>-service` を指す代替のIngressリソースを提供することができます。"

msgid ""
"For debugging and development purposes, consider directly connecting to the "
"Keycloak service using a port forward. For example, enter this command:"
msgstr ""
"デバッグや開発目的の場合は、ポートフォワードを使用してKeycloakサービスに直接接続することを検討してください。たとえば、次のコマンドを入力してください。"

msgid "kubectl port-forward service/example-kc-service 8443:8443"
msgstr "kubectl port-forward service/example-kc-service 8443:8443"

msgid "Accessing the Admin Console"
msgstr "管理コンソールへのアクセス"

msgid ""
"When deploying Keycloak, the operator generates an arbitrary initial admin "
"`username` and `password` and stores those credentials as a Kubernetes "
"basic-auth Secret in the same namespace as the CR."
msgstr ""
"Keycloakをデプロイする際、オペレーターは任意の初期管理者の `username` と `password` "
"を生成し、それらのクレデンシャルをKubernetesのBASIC認証のSecretとしてCRと同じ名前空間に保存します。"

msgid ""
"Change the default admin credentials and enable MFA in Keycloak before going"
" to production."
msgstr "本番稼動前に、デフォルトの管理者のクレデンシャルを変更し、KeycloakでMFAを有効にしてください。"

msgid ""
"To fetch the initial admin credentials, you have to read and decode a "
"Kubernetes Secret. The Secret name is derived from the Keycloak CR name plus"
" the fixed suffix `-initial-admin`. To get the username and password for the"
" `example-kc` CR, enter the following commands:"
msgstr ""
"初期管理者のクレデンシャルを取得するには、Kubernetesのシークレットを読み込んでデコードする必要があります。シークレット名はKeycloakのCR名に固定接尾辞"
" `-initial-admin`を加えたものである。 `example-kc` "
"CRのユーザー名とパスワードを取得するには、以下のコマンドを入力します。"

msgid ""
"kubectl get secret example-kc-initial-admin -o jsonpath='{.data.username}' | base64 --decode\n"
"kubectl get secret example-kc-initial-admin -o jsonpath='{.data.password}' | base64 --decode"
msgstr ""
"kubectl get secret example-kc-initial-admin -o jsonpath='{.data.username}' | base64 --decode\n"
"kubectl get secret example-kc-initial-admin -o jsonpath='{.data.password}' | base64 --decode"

msgid ""
"You can use those credentials to access the Admin Console or the Admin REST "
"API."
msgstr "これらのクレデンシャルを使用して、管理コンソールまたは管理REST APIにアクセスできます。"

msgid "Keycloak Realm Import"
msgstr "Keycloakレルムのインポート"

msgid "Importing a Keycloak Realm"
msgstr "Keycloakレルムのインポート"

msgid ""
"Using the Keycloak Operator, you can perform a realm import for the Keycloak"
" Deployment."
msgstr "Keycloak Operatorを使用して、Keycloak Deploymentのレルムのインポートを実行できます。"

msgid ""
"If a Realm with the same name already exists in Keycloak, it will not be "
"overwritten."
msgstr "同じ名前のレルムが既にKeycloakに存在する場合、上書きされることはありません。"

msgid ""
"The Realm Import CR only supports creation of new realms and does not update"
" or delete those. Changes to the realm performed directly on Keycloak are "
"not synced back in the CR."
msgstr ""
"レルムインポートCRは新しいレルムの作成のみをサポートし、レルムの更新や削除は行いません。Keycloak上で直接行われたレルムへの変更は、CRでは同期されません。"

msgid "Creating a Realm Import Custom Resource"
msgstr "レルム・インポート・カスタム・リソースの作成"

msgid "The following is an example of a Realm Import Custom Resource (CR):"
msgstr "以下はレルム・インポート・カスタム・リソース（CR）の例です。"

msgid ""
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: KeycloakRealmImport\n"
"metadata:\n"
"  name: my-realm-kc\n"
"spec:\n"
"  keycloakCRName: <name of the keycloak CR>\n"
"  realm:\n"
"    ..."
msgstr ""
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: KeycloakRealmImport\n"
"metadata:\n"
"  name: my-realm-kc\n"
"spec:\n"
"  keycloakCRName: <name of the keycloak CR>\n"
"  realm:\n"
"    ..."

msgid ""
"This CR should be created in the same namespace as the Keycloak Deployment "
"CR, defined in the field `keycloakCRName`. The `realm` field accepts a full "
"https://www.keycloak.org/docs-api/{majorMinorVersion}/rest-"
"api/index.html#_realmrepresentation[RealmRepresentation]."
msgstr ""
"このCRは、 `keycloakCRName` フィールドで定義されるKeycloak Deployment "
"CRと同じ名前空間に作成されなければなりません。 `realm` フィールドは完全な https://www.keycloak.org/docs-"
"api/{majorMinorVersion}/rest-"
"api/index.html#_realmrepresentation[RealmRepresentation] を受け付けます。"

msgid ""
"The recommended way to obtain a `RealmRepresentation` is by leveraging the "
"export functionality "
"link:{links_server_importExport_url}[{links_server_importExport_name}]."
msgstr ""
"`RealmRepresentation` を取得する推奨される方法は、エクスポート機能の "
"link:{links_server_importExport_url}[{links_server_importExport_name}] "
"を利用することです。"

msgid "Export the Realm to a single file."
msgstr "レルムを1つのファイルにエクスポートします。"

msgid "Convert the JSON file to YAML."
msgstr "JSONファイルをYAMLに変換します。"

msgid ""
"Copy and paste the obtained YAML file as body for the `realm` key, making "
"sure the indentation is correct."
msgstr "得られたYAMLファイルをコピーして、 `realm` キーのボディーとして貼り付け、インデントが正しいことを確認します。"

msgid "Applying the Realm Import CR"
msgstr "レルムインポートCRの適用"

msgid "Use `kubectl` to create the CR in the correct cluster namespace:"
msgstr "`kubectl` を使用して、以下のように正しいクラスター名前空間にCRを作成します。"

msgid ""
"cat <<EOF >> example-realm-import.yaml\n"
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: KeycloakRealmImport\n"
"metadata:\n"
"  name: my-realm-kc\n"
"spec:\n"
"  keycloakCRName: <name of the keycloak CR>\n"
"  realm:\n"
"    id: example-realm\n"
"    realm: example-realm\n"
"    displayName: ExampleRealm\n"
"    enabled: true\n"
"EOF\n"
"kubectl apply -f example-realm-import.yaml"
msgstr ""
"cat <<EOF >> example-realm-import.yaml\n"
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: KeycloakRealmImport\n"
"metadata:\n"
"  name: my-realm-kc\n"
"spec:\n"
"  keycloakCRName: <name of the keycloak CR>\n"
"  realm:\n"
"    id: example-realm\n"
"    realm: example-realm\n"
"    displayName: ExampleRealm\n"
"    enabled: true\n"
"EOF\n"
"kubectl apply -f example-realm-import.yaml"

msgid ""
"To check the status of the running import, enter the following command:"
msgstr "実行中のインポートのステータスを確認するには、以下のコマンドを入力します。"

msgid ""
"kubectl get keycloakrealmimports/my-realm-kc -o go-template='{{range "
".status.conditions}}CONDITION: {{.type}}{{\"\\n\"}}  STATUS: "
"{{.status}}{{\"\\n\"}}  MESSAGE: {{.message}}{{\"\\n\"}}{{end}}'"
msgstr ""
"kubectl get keycloakrealmimports/my-realm-kc -o go-template='{{range "
".status.conditions}}CONDITION: {{.type}}{{\"\\n\"}}  STATUS: "
"{{.status}}{{\"\\n\"}}  MESSAGE: {{.message}}{{\"\\n\"}}{{end}}'"

msgid ""
"When the import has successfully completed, the output will look like the "
"following example:"
msgstr "インポートが正常に完了すると、出力は以下の例のようになります。"

msgid ""
"CONDITION: Done\n"
"  STATUS: true\n"
"  MESSAGE:\n"
"CONDITION: Started\n"
"  STATUS: false\n"
"  MESSAGE:\n"
"CONDITION: HasErrors\n"
"  STATUS: false\n"
"  MESSAGE:"
msgstr ""
"CONDITION: Done\n"
"  STATUS: true\n"
"  MESSAGE:\n"
"CONDITION: Started\n"
"  STATUS: false\n"
"  MESSAGE:\n"
"CONDITION: HasErrors\n"
"  STATUS: false\n"
"  MESSAGE:"

msgid "Advanced configuration"
msgstr "高度な設定"

msgid ""
"This guide describes how to use Custom Resources (CRs) for advanced "
"configuration of your Keycloak deployment."
msgstr "このガイドでは、カスタムリソース（CR）を使用してKeycloakの配備を高度に設定する方法について説明します。"

msgid "Server configuration details"
msgstr "サーバー設定の詳細"

msgid ""
"Many server options are exposed as first-class citizen fields in the "
"Keycloak CR. The structure of the CR is based on the configuration structure"
" of Keycloak. For example, to configure the `https-port` of the server, "
"follow a similar pattern in the CR and use the `httpsPort` field. The "
"following example is a complex server configuration; however, it illustrates"
" the relationship between server options and the Keycloak CR:"
msgstr ""
"多くのサーバー・オプションは、Keycloak CRのfirst-class "
"citizenフィールドとして公開されています。CRの構造は、Keycloakの設定構造に基づいています。たとえば、サーバーの `https-port`"
" を設定するには、CRの同様のパターンに従って `httpsPort` "
"フィールドを使用します。次の例は複雑なサーバー設定ですが、サーバー・オプションとKeycloak CRの関係を示しています。"

msgid ""
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: Keycloak\n"
"metadata:\n"
"  name: example-kc\n"
"spec:\n"
"  db:\n"
"    vendor: postgres\n"
"    usernameSecret:\n"
"      name: usernameSecret\n"
"      key: usernameSecretKey\n"
"    passwordSecret:\n"
"      name: passwordSecret\n"
"      key: passwordSecretKey\n"
"    host: host\n"
"    database: database\n"
"    port: 123\n"
"    schema: schema\n"
"    poolInitialSize: 1\n"
"    poolMinSize: 2\n"
"    poolMaxSize: 3\n"
"  http:\n"
"    httpEnabled: true\n"
"    httpPort: 8180\n"
"    httpsPort: 8543\n"
"    tlsSecret: my-tls-secret\n"
"  hostname:\n"
"    hostname: my-hostname\n"
"    admin: my-admin-hostname\n"
"    strict: false\n"
"    strictBackchannel: false\n"
"  features:\n"
"    enabled:\n"
"      - docker\n"
"      - authorization\n"
"    disabled:\n"
"      - admin\n"
"      - step-up-authentication\n"
"  transaction:\n"
"    xaEnabled: false"
msgstr ""
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: Keycloak\n"
"metadata:\n"
"  name: example-kc\n"
"spec:\n"
"  db:\n"
"    vendor: postgres\n"
"    usernameSecret:\n"
"      name: usernameSecret\n"
"      key: usernameSecretKey\n"
"    passwordSecret:\n"
"      name: passwordSecret\n"
"      key: passwordSecretKey\n"
"    host: host\n"
"    database: database\n"
"    port: 123\n"
"    schema: schema\n"
"    poolInitialSize: 1\n"
"    poolMinSize: 2\n"
"    poolMaxSize: 3\n"
"  http:\n"
"    httpEnabled: true\n"
"    httpPort: 8180\n"
"    httpsPort: 8543\n"
"    tlsSecret: my-tls-secret\n"
"  hostname:\n"
"    hostname: my-hostname\n"
"    admin: my-admin-hostname\n"
"    strict: false\n"
"    strictBackchannel: false\n"
"  features:\n"
"    enabled:\n"
"      - docker\n"
"      - authorization\n"
"    disabled:\n"
"      - admin\n"
"      - step-up-authentication\n"
"  transaction:\n"
"    xaEnabled: false"

msgid ""
"For a list of options, see the Keycloak CRD. For details on configuring "
"options, see link:{links_server_all-config_url}[{links_server_all-"
"config_name}]."
msgstr ""
"オプションの一覧については、Keycloak CRDを参照してください。オプション設定の詳細については、link:{links_server_all-"
"config_url}[{links_server_all-config_name}]を参照してください。"

msgid "Additional options"
msgstr "追加オプション"

msgid ""
"Some expert server options are unavailable as dedicated fields in the "
"Keycloak CR. The following are examples of omitted fields:"
msgstr ""
"一部のエキスパート・サーバー・オプションは、Keycloak CRの専用フィールドとして使用できません。以下は省略されたフィールドの例です。"

msgid ""
"Fields that require deep understanding of the underlying Keycloak "
"implementation"
msgstr "Keycloakの実装を深く理解する必要がある分野"

msgid "Fields that are not relevant to a Kubernetes environment"
msgstr "Kubernetes環境に関係のないフィールド"

msgid ""
"Fields for provider configuration because they are dynamic based on the used"
" provider implementation"
msgstr "プロバイダー設定のフィールドは、使用するプロバイダーの実装に基づいて動的に設定されます。"

msgid ""
"The `additionalOptions` field of the Keycloak CR enables Keycloak to accept "
"any available configuration in the form of key-value pairs. You can use this"
" field to include any option that is omitted in the Keycloak CR. For details"
" on configuring options, see link:{links_server_all-"
"config_url}[{links_server_all-config_name}]."
msgstr ""
"Keycloak CRの `additionalOptions` "
"フィールドは、Keycloakがキーと値のペアの形式で利用可能なあらゆる設定を受け入れることを可能にします。このフィールドを使用して、Keycloak "
"CRで省略されている任意のオプションを含めることができます。オプション設定の詳細については、 link:{links_server_all-"
"config_url}[{links_server_all-config_name}] を参照してください。"

msgid ""
"The values can be expressed as plain text strings or Kubernetes Secret "
"references as shown in this example:"
msgstr "値は、この例に示すように、プレーンテキストの文字列またはKubernetesのシークレット参照として表現することができます。"

msgid ""
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: Keycloak\n"
"metadata:\n"
"  name: example-kc\n"
"spec:\n"
"  ...\n"
"  additionalOptions:\n"
"    - name: spi-connections-http-client-default-connection-pool-size\n"
"      secret: # Secret reference\n"
"        name: http-client-secret # name of the Secret\n"
"        key: poolSize # name of the Key in the Secret\n"
"    - name: spi-email-template-mycustomprovider-enabled\n"
"      value: true # plain text value"
msgstr ""
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: Keycloak\n"
"metadata:\n"
"  name: example-kc\n"
"spec:\n"
"  ...\n"
"  additionalOptions:\n"
"    - name: spi-connections-http-client-default-connection-pool-size\n"
"      secret: # Secret reference\n"
"        name: http-client-secret # name of the Secret\n"
"        key: poolSize # name of the Key in the Secret\n"
"    - name: spi-email-template-mycustomprovider-enabled\n"
"      value: true # plain text value"

msgid "Secret References"
msgstr "シークレット参照"

msgid ""
"Secret References are used by some dedicated options in the Keycloak CR, "
"such as `tlsSecret`, or as a value in `additionalOptions`."
msgstr ""
"シークレット参照は、 `tlsSecret` のようなKeycloak CRのいくつかの専用オプションや、 `additionalOptions` "
"の値として使用されます。"

msgid ""
"When specifying a Secret Reference, make sure that a Secret containing the "
"referenced keys is present in the same namespace as the CR referencing it. "
"Along with the Keycloak Server Deployment, the Operator adds special labels "
"to the referenced Secrets to watch for changes."
msgstr ""
"シークレット参照を指定する場合、参照される鍵を含むシークレットが、それを参照するCRと同じ名前空間に存在することを確認してください。Keycloakサーバーの配備とともに、Operatorは参照されるシークレットに特別なラベルを追加して変更を監視します。"

msgid ""
"When a referenced Secret is modified, the Operator performs a rolling "
"restart of the Keycloak Deployment to pick up the changes."
msgstr ""
"参照されたシークレットが変更されると、OperatorはKeycloak Deploymentのローリング再起動トを実行し、変更を反映させます。"

msgid "Unsupported features"
msgstr "サポートされていない機能"

msgid ""
"The `unsupported` field of the CR contains highly experimental configuration"
" options that are not completely tested and supported."
msgstr "CRの `unsupported` フィールドには、完全にテストされサポートされていない、非常に実験的な設定オプションが含まれています。"

msgid "Pod Template"
msgstr "Pod Template"

msgid ""
"The Pod Template is a raw API representation that is used for the Kubernetes"
" Deployment Template. This field is a temporary workaround in case no "
"supported field exists at the top level of the CR for your use case. For a "
"long-term solution, consider opening a GitHub issue to address your needs."
msgstr ""
"Pod Templateは、Kubernetes Deployment "
"Templateに使用される生のAPI表現です。このフィールドは、ユースケースに対してCRのトップレベルにサポートされているフィールドが存在しない場合の一時的な回避策です。長期的な解決策としては、GitHubのissueを開いてニーズに対応することを検討してください。"

msgid ""
"The Operator merges the fields of the provided template with the values "
"generated by the Operator for the specific Deployment. With this feature, "
"you have access to a high level of customizations. However, no guarantee "
"exists that the Deployment will work as expected."
msgstr ""
"Operatorは、提供されたテンプレートのフィールドと、特定の配置に対してOperatorが生成した値をマージします。この機能では、高度なカスタマイズが可能です。ただし、配備が期待どおりに動作する保証はありません。"

msgid ""
"The following example illustrates injecting labels, annotations, volumes, "
"and volume mounts:"
msgstr "次の例では、ラベル、アノテーション、ボリューム、およびボリューム・マウントを注入しています。"

msgid ""
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: Keycloak\n"
"metadata:\n"
"  name: example-kc\n"
"spec:\n"
"  ...\n"
"  unsupported:\n"
"    podTemplate:\n"
"      metadata:\n"
"        labels:\n"
"          my-label: \"keycloak\"\n"
"      spec:\n"
"        containers:\n"
"          - volumeMounts:\n"
"              - name: test-volume\n"
"                mountPath: /mnt/test\n"
"        volumes:\n"
"          - name: test-volume\n"
"            secret:\n"
"              secretName: keycloak-additional-secret"
msgstr ""
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: Keycloak\n"
"metadata:\n"
"  name: example-kc\n"
"spec:\n"
"  ...\n"
"  unsupported:\n"
"    podTemplate:\n"
"      metadata:\n"
"        labels:\n"
"          my-label: \"keycloak\"\n"
"      spec:\n"
"        containers:\n"
"          - volumeMounts:\n"
"              - name: test-volume\n"
"                mountPath: /mnt/test\n"
"        volumes:\n"
"          - name: test-volume\n"
"            secret:\n"
"              secretName: keycloak-additional-secret"

msgid "Disabling required options"
msgstr "必須オプションの無効化"

msgid ""
"Keycloak and the Keycloak Operator provide the best production-ready "
"experience with security in mind. However, during the development phase, you"
" can disable key security features."
msgstr ""
"KeycloakとKeycloak "
"Operatorは、セキュリティーに配慮した最高の本番環境を提供します。しかし、開発段階では、主要なセキュリティー機能を無効にすることができます。"

msgid ""
"Specifically, you can disable the hostname and TLS as shown in the following"
" example:"
msgstr "具体的には、以下の例のようにホスト名とTLSを無効にすることができます。"

msgid ""
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: Keycloak\n"
"metadata:\n"
"  name: example-kc\n"
"spec:\n"
"  ...\n"
"  http:\n"
"    httpEnabled: true\n"
"  hostname:\n"
"    strict: false\n"
"    strictBackchannel: false"
msgstr ""
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: Keycloak\n"
"metadata:\n"
"  name: example-kc\n"
"spec:\n"
"  ...\n"
"  http:\n"
"    httpEnabled: true\n"
"  hostname:\n"
"    strict: false\n"
"    strictBackchannel: false"

msgid "Using custom Keycloak images"
msgstr "カスタムKeycloakイメージの使用"

msgid "Keycloak custom image with the Operator"
msgstr "OperatorによるKeycloakのカスタムイメージ"

msgid ""
"With the Keycloak Custom Resource (CR), you can specify a custom container "
"image for the Keycloak server."
msgstr "Keycloakカスタムリソース（CR）を使用すると、Keycloakサーバーのカスタム・コンテナー・イメージを指定できます。"

msgid ""
"To ensure full compatibility of Operator and Operand, make sure that the "
"version of Keycloak release used in the custom image is aligned with the "
"version of the operator."
msgstr ""
"Operatorとオペランドの完全な互換性を確保するため、カスタムイメージで使用するKeycloakのリリース・バージョンがOperatorのバージョンと一致していることを確認してください。"

msgid "Best practice"
msgstr "ベスト・プラクティス"

msgid ""
"When using the default Keycloak image, the server will perform a costly re-"
"augmentation every time a Pod starts. To avoid this delay, you can provide a"
" custom image with the augmentation built-in from the build time of the "
"image."
msgstr ""
"デフォルトのKeycloakイメージを使用する場合、サーバーはPodが起動するたびにコストのかかる再オーグメンテーションを実行します。この遅延を回避するには、イメージのビルド時からオーグメンテーションを組み込んだカスタムイメージを提供します。"

msgid ""
"With a custom image, you can also specify the Keycloak _build-time_ "
"configurations and extensions during the build of the container."
msgstr "カスタムイメージでは、コンテナーのビルド時にKeycloakの _build-time_ 設定と拡張機能を指定することもできます。"

msgid ""
"For instructions on how to build such an image, see "
"link:{links_server_containers_url}[{links_server_containers_name}]."
msgstr ""
"このようなイメージを構築する方法については、 "
"link:{links_server_containers_url}[{links_server_containers_name}] "
"を参照してください。"

msgid "Providing a custom Keycloak image"
msgstr "カスタムKeycloakイメージの提供"

msgid ""
"To provide a custom image, you define the `image` field in the Keycloak CR "
"as shown in this example:"
msgstr "カスタム画像を提供するには、この例のようにKeycloak CRの `image` フィールドを定義します。"

msgid ""
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: Keycloak\n"
"metadata:\n"
"  name: example-kc\n"
"spec:\n"
"  instances: 1\n"
"  image: quay.io/my-company/my-keycloak:latest\n"
"  http:\n"
"    tlsSecret: example-tls-secret\n"
"  hostname:\n"
"    hostname: test.keycloak.org"
msgstr ""
"apiVersion: k8s.keycloak.org/v2alpha1\n"
"kind: Keycloak\n"
"metadata:\n"
"  name: example-kc\n"
"spec:\n"
"  instances: 1\n"
"  image: quay.io/my-company/my-keycloak:latest\n"
"  http:\n"
"    tlsSecret: example-tls-secret\n"
"  hostname:\n"
"    hostname: test.keycloak.org"

msgid ""
"With custom images, every build time option passed either through a "
"dedicated field or the `additionalOptions` is ignored."
msgstr "カスタムイメージでは、専用のフィールドか `additionalOptions` で渡されるビルド時のオプションはすべて無視されます。"
