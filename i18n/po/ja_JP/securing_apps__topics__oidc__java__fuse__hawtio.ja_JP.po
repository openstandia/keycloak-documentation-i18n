msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"POT-Creation-Date: 2017-09-21 04:04+0000\n"
"PO-Revision-Date: 2017-09-21 00:26-0400\n"
"Last-Translator: wadahiro <wadahiro@gmail.com>\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: keycloak-documentation-i18n\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /develop/i18n/po/ja_JP/securing_apps__topics__oidc__java__fuse__hawtio.ja_JP.po\n"

#. type: Title =====
#, no-wrap
msgid "Securing the Hawtio Administration Console"
msgstr ""

#. type: Plain text
#| msgid "To create a new realm, complete the following steps:"
msgid "To secure the Hawtio Administration Console with {project_name}, complete the following steps:"
msgstr ""

#. type: Plain text
msgid "Add these properties to the `$FUSE_HOME/etc/system.properties` file:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "hawtio.keycloakEnabled=true\n"
"hawtio.realm=keycloak\n"
"hawtio.keycloakClientConfig=file://${karaf.base}/etc/keycloak-hawtio-client.json\n"
"hawtio.rolePrincipalClasses=org.keycloak.adapters.jaas.RolePrincipal,org.apache.karaf.jaas.boot.principal.RolePrincipal\n"
msgstr ""

#. type: Plain text
msgid "Create a client in the {project_name} administration console in your realm. For example, in the {project_name} `demo` realm, create a client `hawtio-client`, specify `public` as the Access Type, and specify a redirect URI pointing to Hawtio: \\http://localhost:8181/hawtio/*. You must also have a corresponding Web Origin configured (in this case, \\http://localhost:8181)."
msgstr ""

#. type: Plain text
msgid "Create the `keycloak-hawtio-client.json` file in the `$FUSE_HOME/etc` directory using content similar to that shown in the example below. Change the `realm`, `resource`, and `auth-server-url` properties according to your {project_name} environment. The `resource` property must point to the client created in the previous step. This file is used by the client (Hawtio Javascript application) side."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "{\n"
"  \"realm\" : \"demo\",\n"
"  \"resource\" : \"hawtio-client\",\n"
"  \"auth-server-url\" : \"http://localhost:8080/auth\",\n"
"  \"ssl-required\" : \"external\",\n"
"  \"public-client\" : true\n"
"}\n"
msgstr ""

#. type: Plain text
msgid "Create the `keycloak-hawtio.json` file in the `$FUSE_HOME/etc` dicrectory using content similar to that shown in the example below. Change the `realm` and `auth-server-url` properties according to your {project_name} environment. This file is used by the adapters on the server (JAAS Login module) side."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "{\n"
"  \"realm\" : \"demo\",\n"
"  \"resource\" : \"jaas\",\n"
"  \"bearer-only\" : true,\n"
"  \"auth-server-url\" : \"http://localhost:8080/auth\",\n"
"  \"ssl-required\" : \"external\",\n"
"  \"use-resource-role-mappings\": false,\n"
"  \"principal-attribute\": \"preferred_username\"\n"
"}\n"
msgstr ""

#. type: Plain text
msgid "Start {fuseVersion} and install the keycloak feature if you have not already done so. The commands in Karaf terminal are similar to this example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "features:addurl mvn:org.keycloak/keycloak-osgi-features/{project_versionMvn}/xml/features\n"
"features:install keycloak\n"
msgstr ""

#. type: Plain text
msgid "Go to http://localhost:8181/hawtio and log in as a user from your {project_name} realm."
msgstr ""

#. type: Plain text
msgid "Note that the user needs to have the proper realm role to successfully authenticate to Hawtio. The available roles are configured in the `$FUSE_HOME/etc/system.properties` file in `hawtio.roles`."
msgstr ""

#. type: Plain text
msgid "====== Securing Hawtio on {fuseHawtioEAPVersion}"
msgstr ""

#. type: Plain text
#| msgid "To create a new realm, complete the following steps:"
msgid "To run Hawtio on the {fuseHawtioEAPVersion} server, complete the following steps:"
msgstr ""

#. type: Plain text
msgid "Set up {project_name} as described in the previous section, Securing the Hawtio Administration Console. It is assumed that:"
msgstr ""

#. type: Plain text
msgid "you have a {project_name} realm `demo` and client `hawtio-client`"
msgstr ""

#. type: Plain text
msgid "your {project_name} is running on `localhost:8080`"
msgstr ""

#. type: Plain text
msgid "the {fuseHawtioEAPVersion} server with deployed Hawtio will be running on `localhost:8181`. The directory with this server is referred in next steps as `$EAP_HOME`."
msgstr ""

#. type: Plain text
msgid "Copy the `{fuseHawtioWARVersion}` archive to the `$EAP_HOME/standalone/configuration` directory. For more details about deploying Hawtio see the https://access.redhat.com/documentation/en-us/red_hat_jboss_fuse/6.3/html-single/deploying_into_a_web_server/[Fuse Hawtio documentation]."
msgstr ""

#. type: Plain text
msgid "Copy the `keycloak-hawtio.json` and `keycloak-hawtio-client.json` files with the above content to the `$EAP_HOME/standalone/configuration` directory."
msgstr ""

#. type: Plain text
msgid "Install the {project_name} adapter subsystem to your {fuseHawtioEAPVersion} server as described in the <<_jboss_adapter,JBoss adapter documentation>>."
msgstr ""

#. type: Plain text
#| msgid "Open the standalone/configuration/standalone.xml file and search for the following text:"
msgid "In the `$EAP_HOME/standalone/configuration/standalone.xml` file configure the system properties as in this example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "<extensions>\n"
"...\n"
"</extensions>\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "<system-properties>\n"
"    <property name=\"hawtio.authenticationEnabled\" value=\"true\" />\n"
"    <property name=\"hawtio.realm\" value=\"hawtio\" />\n"
"    <property name=\"hawtio.roles\" value=\"admin,viewer\" />\n"
"    <property name=\"hawtio.rolePrincipalClasses\" value=\"org.keycloak.adapters.jaas.RolePrincipal\" />\n"
"    <property name=\"hawtio.keycloakEnabled\" value=\"true\" />\n"
"    <property name=\"hawtio.keycloakClientConfig\" value=\"${jboss.server.config.dir}/keycloak-hawtio-client.json\" />\n"
"    <property name=\"hawtio.keycloakServerConfig\" value=\"${jboss.server.config.dir}/keycloak-hawtio.json\" />\n"
"</system-properties>\n"
msgstr ""

#. type: Plain text
msgid "Add the Hawtio realm to the same file in the `security-domains` section:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "<security-domain name=\"hawtio\" cache-type=\"default\">\n"
"    <authentication>\n"
"        <login-module code=\"org.keycloak.adapters.jaas.BearerTokenLoginModule\" flag=\"required\">\n"
"            <module-option name=\"keycloak-config-file\" value=\"${hawtio.keycloakServerConfig}\"/>\n"
"        </login-module>\n"
"    </authentication>\n"
"</security-domain>\n"
msgstr ""

#. type: Plain text
msgid "Add the `secure-deployment` section `hawtio` to the adapter subsystem. This ensures that the Hawtio WAR is able to find the JAAS login module classes."
msgstr ""

msgid "<subsystem xmlns=\"urn:jboss:domain:keycloak:1.1\">\n"
"    <secure-deployment name=\"{fuseHawtioWARVersion}\" />\n"
"</subsystem>\n"
msgstr ""

#. type: Plain text
msgid "Restart the {fuseHawtioEAPVersion} server with Hawtio:"
msgstr ""

#. type: delimited block -
#| msgid "$ .../bin/standalone.sh -Djboss.socket.binding.port-offset=100\n"
msgid "cd $EAP_HOME/bin\n"
"./standalone.sh -Djboss.socket.binding.port-offset=101\n"
msgstr ""

#. type: Plain text
msgid "Access Hawtio at http://localhost:8181/hawtio. It is secured by {project_name}."
msgstr ""

