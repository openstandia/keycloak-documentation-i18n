# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title ====
#, no-wrap
msgid "Internationalization"
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Themes"
msgstr ""

#. type: Plain text
msgid ""
"{project_name} provides theme support for web pages and emails. This allows "
"customizing the look and feel of end-user facing pages so they can be "
"integrated with your applications."
msgstr ""

#. type: Named 'title' AttributeList argument for macro 'image'
#, no-wrap
msgid "Login page with sunrise example theme"
msgstr ""

#. type: Target for macro image
#, no-wrap
msgid "images/login-sunrise.png"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Theme Types"
msgstr ""

#. type: Plain text
msgid ""
"A theme can provide one or more types to customize different aspects of "
"{project_name}. The types available are:"
msgstr ""

#. type: Plain text
msgid "Account - Account management"
msgstr ""

#. type: Plain text
msgid "Admin - Admin console"
msgstr ""

#. type: Plain text
msgid "Email - Emails"
msgstr ""

#. type: Plain text
msgid "Login - Login forms"
msgstr ""

#. type: Plain text
msgid "Welcome - Welcome page"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Configure Theme"
msgstr ""

#. type: Plain text
msgid ""
"All theme types, except welcome, are configured through the `Admin Console`. "
"To change the theme used for a realm open the `Admin Console`, select your "
"realm from the drop-down box in the top left corner. Under `Realm Settings` "
"click `Themes`."
msgstr ""

#. type: Plain text
msgid ""
"To set the theme for the `master` admin console you need to set the admin "
"console theme for the `master` realm. To see the changes to the admin "
"console refresh the page."
msgstr ""

#. type: Plain text
msgid ""
"To change the welcome theme you need to edit `standalone.xml`, `standalone-"
"ha.xml`, or `domain.xml`."
msgstr ""

#. type: Plain text
msgid "Add `welcomeTheme` to the theme element, for example:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<theme>\n"
"    ...\n"
"    <welcomeTheme>custom-theme</welcomeTheme>\n"
"    ...\n"
"</theme>\n"
msgstr ""

#. type: Plain text
msgid ""
"If the server is running you need to restart the server for the changes to "
"the welcome theme to take effect."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Default Themes"
msgstr ""

#. type: Plain text
msgid ""
"{project_name} comes bundled with default themes in the server's root "
"`themes` directory. To simplify upgrading you should not edit the bundled "
"themes directly. Instead create your own theme that extends one of the "
"bundled themes."
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Creating a Theme"
msgstr ""

#. type: Plain text
msgid "A theme consists of:"
msgstr ""

#. type: Plain text
msgid "HTML templates (https://freemarker.apache.org/[Freemarker Templates])"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Images"
msgstr ""

#. type: Plain text
msgid "Message bundles"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Stylesheets"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Scripts"
msgstr ""

#. type: Plain text
msgid "Theme properties"
msgstr ""

#. type: Plain text
msgid ""
"Unless you plan to replace every single page you should extend another "
"theme. Most likely you will want to extend the {project_name} theme, but you "
"could also consider extending the base theme if you are significantly "
"changing the look and feel of the pages. The base theme primarily consists "
"of HTML templates and message bundles, while the {project_name} theme "
"primarily contains images and stylesheets."
msgstr ""

#. type: Plain text
msgid ""
"When extending a theme you can override individual resources (templates, "
"stylesheets, etc.). If you decide to override HTML templates bear in mind "
"that you may need to update your custom template when upgrading to a new "
"release."
msgstr ""

#. type: Plain text
msgid ""
"While creating a theme it's a good idea to disable caching as this makes it "
"possible to edit theme resources directly from the `themes` directory "
"without restarting {project_name}. To do this edit `standalone.xml`. For "
"`theme` set `staticMaxAge` to `-1` and both `cacheTemplates` and "
"`cacheThemes` to `false`:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<theme>\n"
"    <staticMaxAge>-1</staticMaxAge>\n"
"    <cacheThemes>false</cacheThemes>\n"
"    <cacheTemplates>false</cacheTemplates>\n"
"    ...\n"
"</theme>\n"
msgstr ""

#. type: Plain text
msgid ""
"Remember to re-enable caching in production as it will significantly impact "
"performance."
msgstr ""

#. type: Plain text
msgid ""
"To create a new theme start by creating a new directory in the `themes` "
"directory. The name of the directory becomes the name of the theme. For "
"example to create a theme called `mytheme` create the directory `themes/"
"mytheme`."
msgstr ""

#. type: Plain text
msgid ""
"Inside the theme directory create a directory for each of the types your "
"theme is going to provide. For example to add the login type to the "
"`mytheme` theme create the directory `themes/mytheme/login`."
msgstr ""

#. type: Plain text
msgid ""
"For each type create a file `theme.properties` which allows setting some "
"configuration for the theme. For example to configure the theme `themes/"
"mytheme/login` that we just created to extend the base theme and import some "
"common resources create the file `themes/mytheme/login/theme.properties` "
"with following contents:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"parent=base\n"
"import=common/keycloak\n"
msgstr ""

#. type: Plain text
msgid ""
"You have now created a theme with support for the login type. To check that "
"it works open the admin console. Select your realm and click on `Themes`.  "
"For `Login Theme` select `mytheme` and click `Save`. Then open the login "
"page for the realm."
msgstr ""

#. type: Plain text
msgid ""
"You can do this either by login through your application or by opening the "
"Account Management console (`/realms/{realm name}/account`)."
msgstr ""

#. type: Plain text
msgid ""
"To see the effect of changing the parent theme, set `parent=keycloak` in "
"`theme.properties` and refresh the login page."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Theme Properties"
msgstr ""

#. type: Plain text
msgid ""
"Theme properties are set in the file `<THEME TYPE>/theme.properties` in the "
"theme directory."
msgstr ""

#. type: Plain text
msgid "parent - Parent theme to extend"
msgstr ""

#. type: Plain text
msgid "import - Import resources from another theme"
msgstr ""

#. type: Plain text
msgid "styles - Space-separated list of styles to include"
msgstr ""

#. type: Plain text
msgid "locales - Comma-separated list of supported locales"
msgstr ""

#. type: Plain text
msgid ""
"There are a list of properties that can be used to change the css class used "
"for certain element types. For a list of these properties look at the theme."
"properties file in the corresponding type of the keycloak theme (`themes/"
"keycloak/<THEME TYPE>/theme.properties`)."
msgstr ""

#. type: Plain text
msgid ""
"You can also add your own custom properties and use them from custom "
"templates."
msgstr ""

#. type: Plain text
msgid ""
"A theme can have one or more stylesheets. To add a stylesheet create a file "
"in the `<THEME TYPE>/resources/css` directory of your theme. Then add it to "
"the `styles` property in `theme.properties`."
msgstr ""

#. type: Plain text
msgid ""
"For example to add `styles.css` to the `mytheme` create `themes/mytheme/"
"login/resources/css/styles.css` with the following content:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
".login-pf body {\n"
"    background: DimGrey none;\n"
"}\n"
msgstr ""

#. type: Plain text
msgid "Then edit `themes/mytheme/login/theme.properties` and add:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "styles=css/styles.css\n"
msgstr ""

#. type: Plain text
msgid ""
"To see the changes open the login page for your realm. You will notice that "
"the only styles being applied are those from your custom stylesheet. To "
"include the styles from the parent theme you need to load the styles from "
"that theme as well. Do this by editing `themes/mytheme/login/theme."
"properties` and changing `styles` to:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "styles=node_modules/patternfly/dist/css/patternfly.css node_modules/patternfly/dist/css/patternfly-additions.css lib/zocial/zocial.css css/login.css css/styles.css\n"
msgstr ""

#. type: Plain text
msgid ""
"To override styles from the parent stylesheets it's important that your "
"stylesheet is listed last."
msgstr ""

#. type: Plain text
msgid ""
"A theme can have one or more scripts, to add a script create a file in the "
"`<THEME TYPE>/resources/js` directory of your theme. Then add it to the "
"`scripts` property in `theme.properties`."
msgstr ""

#. type: Plain text
msgid ""
"For example to add `script.js` to the `mytheme` create `themes/mytheme/login/"
"resources/js/script.js` with the following content:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "alert('Hello');\n"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "scripts=js/script.js\n"
msgstr ""

#. type: Plain text
msgid ""
"To make images available to the theme add them to the `<THEME TYPE>/"
"resources/img` directory of your theme. These can be used from within "
"stylesheets or directly in HTML templates."
msgstr ""

#. type: Plain text
msgid ""
"For example to add an image to the `mytheme` copy an image to `themes/"
"mytheme/login/resources/img/image.jpg`."
msgstr ""

#. type: Plain text
msgid "You can then use this image from within a custom stylesheet with:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"body {\n"
"    background-image: url('../img/image.jpg');\n"
"    background-size: cover;\n"
"}\n"
msgstr ""

#. type: Plain text
msgid ""
"Or to use directly in HTML templates add the following to a custom HTML "
"template:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "<img src=\"${url.resourcesPath}/img/image.jpg\">\n"
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Messages"
msgstr ""

#. type: Plain text
msgid ""
"Text in the templates is loaded from message bundles. A theme that extends "
"another theme will inherit all messages from the parent's message bundle and "
"you can override individual messages by adding `<THEME TYPE>/messages/"
"messages_en.properties` to your theme."
msgstr ""

#. type: Plain text
msgid ""
"For example to replace `Username` on the login form with `Your Username` for "
"the `mytheme` create the file `themes/mytheme/login/messages/messages_en."
"properties` with the following content:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "usernameOrEmail=Your Username\n"
msgstr ""

#. type: Plain text
msgid ""
"Within a message values like `{0}` and `{1}` are replaced with arguments "
"when the message is used. For example {0} in `Log in to {0}` is replaced "
"with the name of the realm."
msgstr ""

#. type: Plain text
msgid ""
"{project_name} supports internationalization. To enable internationalization "
"for a realm see {adminguide_link}[{adminguide_name}]. This section describes "
"how you can add your own language."
msgstr ""

#. type: Plain text
msgid ""
"To add a new language create the file `<THEME TYPE>/messages/"
"messages_<LOCALE>.properties` in the directory of your theme. Then add it to "
"the `locales` property in `<THEME TYPE>/theme.properties`. For a language to "
"be available to users the realms `login`, `account` and `email` theme has to "
"support the language, so you need to add your language for those theme types."
msgstr ""

#. type: Plain text
msgid ""
"For example, to add Norwegian translations to the `mytheme` theme create the "
"file `themes/mytheme/login/messages/messages_no.properties` with the "
"following content:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"usernameOrEmail=Brukernavn\n"
"password=Passord\n"
msgstr ""

#. type: Plain text
msgid ""
"All messages you don't provide a translation for will use the default "
"English translation."
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "locales=en,no\n"
msgstr ""

#. type: Plain text
msgid ""
"You also need to do the same for the `account` and `email` theme types. To "
"do this create `themes/mytheme/account/messages/messages_no.properties` and "
"`themes/mytheme/email/messages/messages_no.properties`. Leaving these files "
"empty will result in the English messages being used. Then copy `themes/"
"mytheme/login/theme.properties` to `themes/mytheme/account/theme.properties` "
"and `themes/mytheme/email/theme.properties`."
msgstr ""

#. type: Plain text
msgid ""
"Finally you need to add a translation for the language selector. This is "
"done by adding a message to the English translation. To do this add the "
"following to `themes/mytheme/account/messages/messages_en.properties` and "
"`themes/mytheme/login/messages/messages_en.properties`:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid "locale_no=Norsk\n"
msgstr ""

#. type: Plain text
msgid ""
"By default message properties files should be encoded using ISO-8859-1. It's "
"also possible to specify the encoding using a special header. For example to "
"use UTF-8 encoding:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"# encoding: UTF-8\n"
"usernameOrEmail=....\n"
msgstr ""

#. type: Plain text
msgid ""
"See <<_locale_selector,Locale Selector>> on details on how the current "
"locale is selected."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "HTML Templates"
msgstr ""

#. type: Plain text
msgid ""
"{project_name} uses https://freemarker.apache.org/[Freemarker Templates] in "
"order to generate HTML. You can override individual templates in your own "
"theme by creating `<THEME TYPE>/<TEMPLATE>.ftl`. For a list of templates "
"used see `themes/base/<THEME TYPE>`."
msgstr ""

#. type: Plain text
msgid ""
"When creating a custom template it is a good idea to copy the template from "
"the base theme to your own theme, then applying the modifications you need. "
"Bear in mind when upgrading to a new version of {project_name} you may need "
"to update your custom templates to apply changes to the original template if "
"applicable."
msgstr ""

#. type: Plain text
msgid ""
"For example to create a custom login form for the `mytheme` theme copy "
"`themes/base/login/login.ftl` to `themes/mytheme/login` and open it in an "
"editor.  After the first line (<#import ...>) add `<h1>HELLO WORLD!</h1>` "
"like so:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"<#import \"template.ftl\" as layout>\n"
"<h1>HELLO WORLD!</h1>\n"
"...\n"
msgstr ""

#. type: Plain text
msgid ""
"Check out the https://freemarker.apache.org/docs/index.html[FreeMarker "
"Manual] for more details on how to edit templates."
msgstr ""

#. type: Title ====
#, no-wrap
msgid "Emails"
msgstr ""

#. type: Plain text
msgid ""
"To edit the subject and contents for emails, for example password recovery "
"email, add a message bundle to the `email` type of your theme. There are "
"three messages for each email. One for the subject, one for the plain text "
"body and one for the html body."
msgstr ""

#. type: Plain text
msgid ""
"To see all emails available take a look at `themes/base/email/messages/"
"messages_en.properties`."
msgstr ""

#. type: Plain text
msgid ""
"For example to change the password recovery email for the `mytheme` theme "
"create `themes/mytheme/email/messages/messages_en.properties` with the "
"following content:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"passwordResetSubject=My password recovery\n"
"passwordResetBody=Reset password link: {0}\n"
"passwordResetBodyHtml=<a href=\"{0}\">Reset password</a>\n"
msgstr ""

#. type: Title ===
#, no-wrap
msgid "Deploying Themes"
msgstr ""

#. type: Plain text
msgid ""
"Themes can be deployed to {project_name} by copying the theme directory to "
"`themes` or it can be deployed as an archive. During development you can "
"copy the theme to the `themes` directory, but in production you may want to "
"consider using an `archive`. An `archive` makes it simpler to have a "
"versioned copy of the theme, especially when you have multiple instances of "
"{project_name} for example with clustering."
msgstr ""

#. type: Plain text
msgid ""
"To deploy a theme as an archive you need to create a JAR archive with the "
"theme resources. You also need to add a file `META-INF/keycloak-themes.json` "
"to the archive that lists the available themes in the archive as well as "
"what types each theme provides."
msgstr ""

#. type: Plain text
msgid ""
"For example for the `mytheme` theme create `mytheme.jar` with the contents:"
msgstr ""

#. type: Plain text
msgid "META-INF/keycloak-themes.json"
msgstr ""

#. type: Plain text
msgid "theme/mytheme/login/theme.properties"
msgstr ""

#. type: Plain text
msgid "theme/mytheme/login/login.ftl"
msgstr ""

#. type: Plain text
msgid "theme/mytheme/login/resources/css/styles.css"
msgstr ""

#. type: Plain text
msgid "theme/mytheme/login/resources/img/image.png"
msgstr ""

#. type: Plain text
msgid "theme/mytheme/login/messages/messages_en.properties"
msgstr ""

#. type: Plain text
msgid "theme/mytheme/email/messages/messages_en.properties"
msgstr ""

#. type: Plain text
msgid "The contents of `META-INF/keycloak-themes.json` in this case would be:"
msgstr ""

#. type: delimited block -
#, no-wrap
msgid ""
"{\n"
"    \"themes\": [{\n"
"        \"name\" : \"mytheme\",\n"
"        \"types\": [ \"login\", \"email\" ]\n"
"    }]\n"
"}\n"
msgstr ""

#. type: Plain text
msgid ""
"A single archive can contain multiple themes and each theme can support one "
"or more types."
msgstr ""

#. type: Plain text
msgid ""
"To deploy the archive to {project_name} simply drop it into the `standalone/"
"deployments/` directory of {project_name} and it will be automatically "
"loaded."
msgstr ""
