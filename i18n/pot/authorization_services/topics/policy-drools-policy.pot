# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n  \n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title ==
#, no-wrap
msgid "Configuration"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Name*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Description*\n"
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Logic*\n"
msgstr ""

#. type: Plain text
msgid ""
"The <<_policy_logic, Logic>> of this policy to apply after the other "
"conditions have been evaluated."
msgstr ""

#. type: Plain text
msgid "A string with more details about this policy."
msgstr ""

#. type: Title =
#, no-wrap
msgid "Rule-Based Policy"
msgstr ""

#. type: Plain text
msgid ""
"With this type of policy you can define conditions for your permissions "
"using https://www.drools.org/[Drools], which is a rule evaluation "
"environment. It is one of the _Rule-Based_ policy types supported by "
"{project_name}, and provides flexibility to write any policy based on the "
"<<_policy_evaluation_api, Evaluation API>>."
msgstr ""

#. type: Plain text
#, no-wrap
msgid ""
"To create a new Rule-based policy, in the dropdown list in the right upper corner of the policy listing,\n"
" select *Rule*.\n"
msgstr ""

#. type: Block title
#, no-wrap
msgid "Add Rule Policy"
msgstr ""

#. type: Plain text
msgid ""
"image:{project_images}/policy/create-drools.png[alt=\"Add Rule Policy\"]"
msgstr ""

#. type: Plain text
msgid ""
"A human-readable and unique string describing the policy. We strongly "
"suggest that you use names that are closely related with your business and "
"security requirements, so you can identify them more easily and also know "
"what they actually mean."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Policy Maven Artifact*\n"
msgstr ""

#. type: Plain text
msgid ""
"A Maven groupId-artifactId-version (GAV) pointing to an artifact where the "
"rules are defined. Once you have provided the GAV, you can click *Resolve* "
"to load both *Module* and *Session* fields."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "** Group Id\n"
msgstr ""

#. type: Plain text
msgid "The groupId of the artifact."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "** Artifact Id\n"
msgstr ""

#. type: Plain text
msgid "The artifactId of the artifact."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "** Version\n"
msgstr ""

#. type: Plain text
msgid "The version of the artifact."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Module*\n"
msgstr ""

#. type: Plain text
msgid ""
"The module used by this policy. You must provide a module to select a "
"specific session from which rules will be loaded."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Session*\n"
msgstr ""

#. type: Plain text
msgid ""
"The session used by this policy. The session provides all the rules to "
"evaluate when processing the policy."
msgstr ""

#. type: Plain text
#, no-wrap
msgid "*Update Period*\n"
msgstr ""

#. type: Plain text
msgid "Specifies an interval for scanning for artifact updates."
msgstr ""

#. type: Title ==
#, no-wrap
msgid "Examples"
msgstr ""

#. type: Plain text
msgid ""
"Here is a simple example of a Drools-based policy that uses attribute-based "
"access control (ABAC) to define a condition that evaluates to a GRANT only "
"if the authenticated user is the owner of the requested resource:"
msgstr ""

#. type: Code block
#, no-wrap
msgid ""
"import org.keycloak.authorization.policy.evaluation.Evaluation;\n"
"rule \"Authorize Resource Owner\"\n"
"    dialect \"mvel\"\n"
"    when\n"
"       $evaluation : Evaluation(\n"
"           $identity: context.identity,\n"
"           $permission: permission,\n"
"           $permission.resource != null && $permission.resource.owner.equals($identity.id)\n"
"       )\n"
"    then\n"
"        $evaluation.grant();\n"
"end\n"
msgstr ""

#. type: Plain text
msgid ""
"You can even use another variant of ABAC to obtain attributes from the "
"identity and define a condition accordingly:"
msgstr ""

#. type: Code block
#, no-wrap
msgid ""
"import org.keycloak.authorization.policy.evaluation.Evaluation;\n"
"rule \"Authorize Using Identity Information\"\n"
"    dialect \"mvel\"\n"
"    when\n"
"       $evaluation : Evaluation(\n"
"           $identity: context.identity,\n"
"           identity.attributes.containsValue(\"someAttribute\", \"you_can_access\")\n"
"       )\n"
"    then\n"
"        $evaluation.grant();\n"
"end\n"
msgstr ""

#. type: Plain text
msgid ""
"For more information about what you can access from the `org.keycloak."
"authorization.policy.evaluation.Evaluation` interface, see "
"<<_policy_evaluation_api, Evaluation API>>."
msgstr ""
