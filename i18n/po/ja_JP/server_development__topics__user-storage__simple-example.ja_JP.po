msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"POT-Creation-Date: 2017-09-20 08:59+0000\n"
"PO-Revision-Date: 2017-09-20 05:27-0400\n"
"Last-Translator: wadahiro <wadahiro@gmail.com>\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: keycloak-documentation-i18n\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/i18n/pot/server_development__topics__user-storage__simple-example.pot\n"

#. type: Plain text
#: source/getting_started/topics/secure-jboss-app/install-client-adapter.adoc:34
#: source/server_installation/topics/installation/directory-structure.adoc:21
#: source/securing_apps/topics/overview/supported-platforms.adoc:17
#: source/securing_apps/topics/overview/supported-platforms.adoc:23
#: source/securing_apps/topics/overview/supported-platforms.adoc:34
#: source/securing_apps/topics/overview/supported-platforms.adoc:40
#: source/securing_apps/topics/overview/supported-platforms.adoc:45
#: source/securing_apps/topics/overview/supported-platforms.adoc:50
#: source/securing_apps/topics/overview/supported-platforms.adoc:56
#: source/securing_apps/topics/overview/supported-platforms.adoc:62
#: source/securing_apps/topics/oidc/java/jboss-adapter.adoc:4
#: source/securing_apps/topics/oidc/java/jboss-adapter.adoc:95
#: source/securing_apps/topics/oidc/java/jboss-adapter.adoc:113
#: source/securing_apps/topics/oidc/nodejs-adapter.adoc:24
#: source/securing_apps/topics/saml/java/saml-jboss-adapter.adoc:4
#: source/securing_apps/topics/saml/java/jboss-adapter/jboss_adapter_installation.adoc:56
#: source/server_admin/topics/authentication/flows.adoc:50
#: source/server_admin/topics/authentication/kerberos.adoc:128
#: source/server_admin/topics/authentication/password-policies.adoc:31
#: source/server_admin/topics/user-federation/sssd.adoc:58
#: source/server_admin/topics/user-federation/sssd.adoc:112
#: source/server_development/topics/user-storage/configuration.adoc:110
#: source/server_development/topics/user-storage/simple-example.adoc:267
#: source/server_development/topics/user-storage/simple-example.adoc:274
#: source/server_development/topics/user-storage/simple-example.adoc:281
#: source/server_development/topics/admin-rest-api.adoc:41
#, no-wrap
msgid "ifeval::[{project_community}==true]\n"
msgstr ""

#. type: Plain text
#: source/getting_started/topics/secure-jboss-app/subsystem.adoc:10
#: source/getting_started/topics/secure-jboss-app/subsystem.adoc:17
#: source/getting_started/topics/secure-jboss-app/subsystem.adoc:25
#: source/getting_started/topics/secure-jboss-app/subsystem.adoc:40
#: source/server_installation/topics/operating-mode/domain.adoc:62
#: source/server_installation/topics/operating-mode/domain.adoc:78
#: source/server_installation/topics/operating-mode/domain.adoc:108
#: source/server_installation/topics/operating-mode/domain.adoc:145
#: source/server_installation/topics/operating-mode/domain.adoc:159
#: source/server_installation/topics/operating-mode/domain.adoc:263
#: source/server_installation/topics/database/datasource.adoc:11
#: source/server_installation/topics/database/hibernate.adoc:8
#: source/server_installation/topics/database/jdbc.adoc:15
#: source/server_installation/topics/database/jdbc.adoc:40
#: source/server_installation/topics/database/jdbc.adoc:58
#: source/server_installation/topics/cache/disable.adoc:11
#: source/server_installation/topics/cache/eviction.adoc:16
#: source/server_installation/topics/cache/eviction.adoc:42
#: source/server_installation/topics/cache/replication.adoc:14
#: source/server_installation/topics/clustering/load-balancer.adoc:104
#: source/server_installation/topics/clustering/load-balancer.adoc:180
#: source/server_installation/topics/clustering/multicast.adoc:11
#: source/server_installation/topics/clustering/serialized.adoc:16
#: source/server_installation/topics/clustering/sticky-sessions.adoc:63
#: source/server_installation/topics/clustering/sticky-sessions.adoc:77
#: source/server_installation/topics/clustering/sticky-sessions.adoc:87
#: source/server_installation/topics/clustering/sticky-sessions.adoc:112
#: source/server_installation/topics/network/bind-address.adoc:26
#: source/server_installation/topics/network/https.adoc:128
#: source/server_installation/topics/network/outgoing.adoc:11
#: source/server_installation/topics/network/outgoing.adoc:85
#: source/server_installation/topics/network/ports.adoc:11
#: source/server_installation/topics/network/ports.adoc:45
#: source/securing_apps/topics/oidc/java/adapter_error_handling.adoc:11
#: source/securing_apps/topics/oidc/java/jboss-adapter.adoc:140
#: source/securing_apps/topics/oidc/java/jboss-adapter.adoc:196
#: source/securing_apps/topics/oidc/java/jboss-adapter.adoc:225
#: source/securing_apps/topics/oidc/java/multi-tenancy.adoc:46
#: source/securing_apps/topics/oidc/java/servlet-filter-adapter.adoc:13
#: source/securing_apps/topics/oidc/java/servlet-filter-adapter.adoc:43
#: source/securing_apps/topics/oidc/java/fuse/camel.adoc:10
#: source/securing_apps/topics/oidc/java/fuse/camel.adoc:105
#: source/securing_apps/topics/oidc/java/fuse/classic-war.adoc:15
#: source/securing_apps/topics/oidc/java/fuse/classic-war.adoc:57
#: source/securing_apps/topics/oidc/java/fuse/classic-war.adoc:96
#: source/securing_apps/topics/oidc/java/fuse/cxf-builtin.adoc:10
#: source/securing_apps/topics/oidc/java/fuse/cxf-separate.adoc:10
#: source/securing_apps/topics/oidc/java/fuse/cxf-separate.adoc:85
#: source/securing_apps/topics/oidc/java/fuse/hawtio.adoc:119
#: source/securing_apps/topics/oidc/java/fuse/servlet-whiteboard.adoc:13
#: source/securing_apps/topics/oidc/mod-auth-openidc.adoc:19
#: source/securing_apps/topics/saml/java/error_handling.adoc:11
#: source/securing_apps/topics/saml/java/jetty-adapter/jetty9_per_war_config.adoc:11
#: source/securing_apps/topics/saml/java/jetty-adapter/jetty9_per_war_config.adoc:31
#: source/securing_apps/topics/saml/java/logout.adoc:21
#: source/securing_apps/topics/saml/java/logout.adoc:31
#: source/securing_apps/topics/saml/java/servlet-filter-adapter.adoc:19
#: source/securing_apps/topics/saml/java/general-config/idp_element.adoc:7
#: source/securing_apps/topics/saml/java/general-config/idp_httpclient_subelement.adoc:11
#: source/securing_apps/topics/saml/java/general-config/idp_keys_subelement.adoc:34
#: source/securing_apps/topics/saml/java/general-config/idp_singlelogoutservice_subelement.adoc:8
#: source/securing_apps/topics/saml/java/general-config/idp_singlesignonservice_subelement.adoc:10
#: source/securing_apps/topics/saml/java/general-config/roleidentifiers_element.adoc:8
#: source/securing_apps/topics/saml/java/general-config/sp-keys.adoc:13
#: source/securing_apps/topics/saml/java/general-config/sp_element.adoc:7
#: source/securing_apps/topics/saml/java/general-config/sp_principalname_mapping_element.adoc:8
#: source/securing_apps/topics/saml/java/general-config/sp-keys/key_pems.adoc:10
#: source/securing_apps/topics/saml/java/general-config/sp-keys/keystore_element.adoc:9
#: source/securing_apps/topics/saml/java/tomcat-adapter/tomcat_adapter_per_war_config.adoc:10
#: source/securing_apps/topics/saml/java/tomcat-adapter/tomcat_adapter_per_war_config.adoc:23
#: source/securing_apps/topics/saml/java/jboss-adapter/jboss_adapter_installation.adoc:73
#: source/securing_apps/topics/saml/java/jboss-adapter/jboss_adapter_installation.adoc:92
#: source/securing_apps/topics/saml/java/jboss-adapter/jboss_adapter_installation.adoc:111
#: source/securing_apps/topics/saml/java/jboss-adapter/required_per_war_configuration.adoc:14
#: source/securing_apps/topics/saml/java/jboss-adapter/securing_wars.adoc:11
#: source/securing_apps/topics/saml/java/jboss-adapter/securing_wars.adoc:35
#: source/securing_apps/topics/saml/mod-auth-mellon.adoc:76
#: source/server_admin/topics/events/login.adoc:97
#: source/server_admin/topics/MigrationFromOlderVersions.adoc:77
#: source/server_admin/topics/MigrationFromOlderVersions.adoc:133
#: source/server_admin/topics/MigrationFromOlderVersions.adoc:168
#: source/server_development/topics/user-storage/simple-example.adoc:216
#: source/server_development/topics/providers.adoc:97
#: source/server_development/topics/providers.adoc:228
#: source/server_development/topics/providers.adoc:260
#: source/server_development/topics/themes.adoc:33
#: source/server_development/topics/themes.adoc:71
#: source/server_development/topics/themes.adoc:348
#: source/server_development/topics/themes.adoc:363
#, no-wrap
msgid "[source,xml]\n"
msgstr ""

#. type: Plain text
#: source/securing_apps/topics/client-registration.adoc:148
#: source/securing_apps/topics/oidc/java/adapter-context.adoc:16
#: source/securing_apps/topics/oidc/java/adapter_error_handling.adoc:24
#: source/securing_apps/topics/oidc/java/multi-tenancy.adoc:17
#: source/securing_apps/topics/saml/java/assertion-api.adoc:11
#: source/server_admin/topics/identity-broker/suggested.adoc:15
#: source/server_admin/topics/identity-broker/suggested.adoc:25
#: source/server_admin/topics/identity-broker/tokens.adoc:12
#: source/server_development/topics/user-storage/augmenting.adoc:15
#: source/server_development/topics/user-storage/augmenting.adoc:47
#: source/server_development/topics/user-storage/cache.adoc:14
#: source/server_development/topics/user-storage/cache.adoc:52
#: source/server_development/topics/user-storage/cache.adoc:63
#: source/server_development/topics/user-storage/configuration.adoc:9
#: source/server_development/topics/user-storage/configuration.adoc:38
#: source/server_development/topics/user-storage/configuration.adoc:66
#: source/server_development/topics/user-storage/configuration.adoc:85
#: source/server_development/topics/user-storage/import.adoc:31
#: source/server_development/topics/user-storage/import.adoc:85
#: source/server_development/topics/user-storage/import.adoc:111
#: source/server_development/topics/user-storage/javaee.adoc:16
#: source/server_development/topics/user-storage/javaee.adoc:60
#: source/server_development/topics/user-storage/model-interfaces.adoc:7
#: source/server_development/topics/user-storage/provider-interfaces.adoc:10
#: source/server_development/topics/user-storage/provider-interfaces.adoc:59
#: source/server_development/topics/user-storage/provider-interfaces.adoc:94
#: source/server_development/topics/user-storage/registration-query.adoc:15
#: source/server_development/topics/user-storage/registration-query.adoc:33
#: source/server_development/topics/user-storage/registration-query.adoc:65
#: source/server_development/topics/user-storage/registration-query.adoc:81
#: source/server_development/topics/user-storage/registration-query.adoc:99
#: source/server_development/topics/user-storage/registration-query.adoc:132
#: source/server_development/topics/user-storage/registration-query.adoc:163
#: source/server_development/topics/user-storage/registration-query.adoc:191
#: source/server_development/topics/user-storage/registration-query.adoc:212
#: source/server_development/topics/user-storage/rest.adoc:16
#: source/server_development/topics/user-storage/rest.adoc:62
#: source/server_development/topics/user-storage/simple-example.adoc:10
#: source/server_development/topics/user-storage/simple-example.adoc:24
#: source/server_development/topics/user-storage/simple-example.adoc:43
#: source/server_development/topics/user-storage/simple-example.adoc:100
#: source/server_development/topics/user-storage/simple-example.adoc:134
#: source/server_development/topics/user-storage/simple-example.adoc:160
#: source/server_development/topics/user-storage/simple-example.adoc:182
#: source/server_development/topics/user-storage/simple-example.adoc:229
#: source/server_development/topics/user-storage/simple-example.adoc:243
#: source/server_development/topics/admin-rest-api.adoc:49
#: source/server_development/topics/auth-spi.adoc:170
#: source/server_development/topics/auth-spi.adoc:186
#: source/server_development/topics/auth-spi.adoc:199
#: source/server_development/topics/auth-spi.adoc:231
#: source/server_development/topics/auth-spi.adoc:259
#: source/server_development/topics/auth-spi.adoc:287
#: source/server_development/topics/auth-spi.adoc:310
#: source/server_development/topics/auth-spi.adoc:327
#: source/server_development/topics/auth-spi.adoc:341
#: source/server_development/topics/auth-spi.adoc:383
#: source/server_development/topics/auth-spi.adoc:437
#: source/server_development/topics/auth-spi.adoc:452
#: source/server_development/topics/auth-spi.adoc:474
#: source/server_development/topics/auth-spi.adoc:498
#: source/server_development/topics/auth-spi.adoc:546
#: source/server_development/topics/auth-spi.adoc:585
#: source/server_development/topics/auth-spi.adoc:625
#: source/server_development/topics/auth-spi.adoc:681
#: source/server_development/topics/auth-spi.adoc:708
#: source/server_development/topics/extensions.adoc:21
#: source/server_development/topics/extensions.adoc:41
#: source/server_development/topics/extensions.adoc:99
#: source/server_development/topics/extensions.adoc:130
#: source/server_development/topics/providers.adoc:18
#: source/server_development/topics/providers.adoc:53
#: source/server_development/topics/providers.adoc:111
#: source/server_development/topics/providers.adoc:121
#: source/server_development/topics/providers.adoc:157
#: source/server_development/topics/providers.adoc:279
#: source/server_development/topics/providers.adoc:323
#: source/server_development/topics/identity-brokering/account-linking.adoc:24
#: source/server_development/topics/identity-brokering/account-linking.adoc:54
#: source/server_development/topics/identity-brokering/tokens.adoc:12
#, no-wrap
msgid "[source,java]\n"
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/oidc/java/spring-security-adapter.adoc:196
#: source/securing_apps/topics/oidc/java/spring-security-adapter.adoc:295
#: source/server_development/topics/user-storage/simple-example.adoc:236
#: source/server_development/topics/extensions.adoc:123
#, no-wrap
msgid "    ...\n"
"}\n"
msgstr ""

#. type: delimited block -
#: source/securing_apps/topics/saml/java/assertion-api.adoc:57
#: source/server_development/topics/user-storage/configuration.adoc:18
#: source/server_development/topics/user-storage/configuration.adoc:23
#: source/server_development/topics/user-storage/configuration.adoc:28
#: source/server_development/topics/user-storage/provider-interfaces.adoc:26
#: source/server_development/topics/user-storage/provider-interfaces.adoc:38
#: source/server_development/topics/user-storage/provider-interfaces.adoc:50
#: source/server_development/topics/user-storage/registration-query.adoc:109
#: source/server_development/topics/user-storage/simple-example.adoc:146
#: source/server_development/topics/providers.adoc:75
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: Block title
#: source/server_admin/topics/user-federation.adoc:25
#: source/server_development/topics/user-storage/simple-example.adoc:267
#: source/server_development/topics/user-storage/simple-example.adoc:281
#, no-wrap
msgid "User Federation"
msgstr ""

#. type: Block title
#: source/server_development/topics/user-storage/configuration.adoc:110
#: source/server_development/topics/user-storage/simple-example.adoc:274
#, no-wrap
msgid "Configured Provider"
msgstr ""

#. type: Title ====
#: source/server_development/topics/user-storage/packaging.adoc:2
#: source/server_development/topics/user-storage/simple-example.adoc:252
#, no-wrap
msgid "Packaging and Deployment"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/registration-query.adoc:69
#: source/server_development/topics/user-storage/simple-example.adoc:115
#, no-wrap
msgid "    @Override\n"
"    public boolean isValid(RealmModel realm, UserModel user, CredentialInput input) {\n"
"        if (!supportsCredentialType(input.getType()) || !(input instanceof UserCredentialModel)) return false;\n"
msgstr ""

#. type: Title ===
#: source/server_development/topics/user-storage/simple-example.adoc:1
#, no-wrap
msgid "Simple Read-Only, Lookup Example"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:4
#, no-wrap
msgid "To illustrate the basics of implementing the User Storage SPI let's walk through a simple example. In this chapter you'll see the implementation of a simple `UserStorageProvider` that looks up users in a simple property file. The property file contains username and password definitions and is hardcoded to a specific location on the classpath. The provider will be able to look up the user by ID and username and also be able to validate passwords. Users that originate from this provider will be read-only.\n"
msgstr ""

#. type: Title ====
#: source/server_development/topics/user-storage/simple-example.adoc:5
#, no-wrap
msgid "Provider Class"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:8
#, no-wrap
msgid "The first thing we will walk through is the `UserStorageProvider` class.\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:19
#, no-wrap
msgid "public class PropertyFileUserStorageProvider implements\n"
"        UserStorageProvider,\n"
"        UserLookupProvider,\n"
"        CredentialInputValidator,\n"
"        CredentialInputUpdater\n"
"{\n"
"...\n"
"}\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:22
#, no-wrap
msgid "Our provider class, `PropertyFileUserStorageProvider`, implements many interfaces. It implements the `UserStorageProvider` as that is a base requirement of the SPI. It implements the `UserLookupProvider` interface because we want to be able to log in with users stored by this provider. It implements the `CredentialInputValidator` interface because we want to be able to validate passwords entered in using the login screen. Our property file is read-only. We implement the `CredentialInputUpdater` because we want to post an error condition when the user attempts to update his password.\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:30
#, no-wrap
msgid "    protected KeycloakSession session;\n"
"    protected Properties properties;\n"
"    protected ComponentModel model;\n"
"    // map of loaded users in this transaction\n"
"    protected Map<String, UserModel> loadedUsers = new HashMap<>();\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:36
#, no-wrap
msgid "    public PropertyFileUserStorageProvider(KeycloakSession session, ComponentModel model, Properties properties) {\n"
"        this.session = session;\n"
"        this.model = model;\n"
"        this.properties = properties;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:39
#, no-wrap
msgid "The constructor for this provider class is going to store the reference to the `KeycloakSession`, `ComponentModel`, and property file. We'll use all of these later. Also notice that there is a map of loaded users. Whenever we find a user we will store it in this map so that we avoid re-creating it again within the same transaction. This is a good practice to follow as many providers will need to do this (that is, any provider that integrates with JPA). Remember also that provider class instances are created once per transaction and are closed after the transaction completes.\n"
msgstr ""

#. type: Title =====
#: source/server_development/topics/user-storage/simple-example.adoc:40
#, no-wrap
msgid "UserLookupProvider Implementation"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:56
#, no-wrap
msgid "    @Override\n"
"    public UserModel getUserByUsername(String username, RealmModel realm) {\n"
"        UserModel adapter = loadedUsers.get(username);\n"
"        if (adapter == null) {\n"
"            String password = properties.getProperty(username);\n"
"            if (password != null) {\n"
"                adapter = createAdapter(realm, username);\n"
"                loadedUsers.put(username, adapter);\n"
"            }\n"
"        }\n"
"        return adapter;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:65
#, no-wrap
msgid "    protected UserModel createAdapter(RealmModel realm, String username) {\n"
"        return new AbstractUserAdapter(session, realm, model) {\n"
"            @Override\n"
"            public String getUsername() {\n"
"                return username;\n"
"            }\n"
"        };\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:72
#, no-wrap
msgid "    @Override\n"
"    public UserModel getUserById(String id, RealmModel realm) {\n"
"        StorageId storageId = new StorageId(id);\n"
"        String username = storageId.getExternalId();\n"
"        return getUserByUsername(username, realm);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:77
#, no-wrap
msgid "    @Override\n"
"    public UserModel getUserByEmail(String email, RealmModel realm) {\n"
"        return null;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:82
#, no-wrap
msgid "The `getUserByUsername()` method is invoked by the {project_name} login page when a user logs in. In our implementation we first check the `loadedUsers` map to see if the user has already been loaded within this transaction. If it hasn't been loaded we look in the property file for the username. If it exists we create an implementation of `UserModel`, store it in `loadedUsers` for future reference, and return this instance.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:84
#, no-wrap
msgid "The `createAdapter()` method uses the helper class `org.keycloak.storage.adapter.AbstractUserAdapter`. This provides a base implementation for `UserModel`. It automatically generates a user id based on the required storage id format using the username of the user as the external id.\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:87
#, no-wrap
msgid "\"f:\" + component id + \":\" + username\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:90
#, no-wrap
msgid "Every get method of `AbstractUserAdapter` either returns null or empty collections. However, methods that return role and group mappings will return the default roles and groups configured for the realm for every user.  Every set method of `AbstractUserAdapter` will throw a `org.keycloak.storage.ReadOnlyException`. So if you attempt to modify the user in the admininstration console, you will get an error.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:92
#, no-wrap
msgid "The `getUserById()` method parses the `id` parameter using the `org.keycloak.storage.StorageId' helper class. The `StorageId.getExternalId()` method is invoked to obtain the username embeded in the `id` parameter. The method then delegates to `getUserByUsername()`.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:94
#, no-wrap
msgid "Emails are not stored, so the `getUserByEmail()` method returns null.\n"
msgstr ""

#. type: Title =====
#: source/server_development/topics/user-storage/simple-example.adoc:95
#, no-wrap
msgid "CredentialInputValidator Implementation"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:98
#, no-wrap
msgid "Next let's look at the method implementations for `CredentialInputValidator`.\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:106
#, no-wrap
msgid "    @Override\n"
"    public boolean isConfiguredFor(RealmModel realm, UserModel user, String credentialType) {\n"
"        String password = properties.getProperty(user.getUsername());\n"
"        return credentialType.equals(CredentialModel.PASSWORD) && password != null;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:111
#, no-wrap
msgid "    @Override\n"
"    public boolean supportsCredentialType(String credentialType) {\n"
"        return credentialType.equals(CredentialModel.PASSWORD);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:121
#, no-wrap
msgid "        UserCredentialModel cred = (UserCredentialModel)input;\n"
"        String password = properties.getProperty(user.getUsername());\n"
"        if (password == null) return false;\n"
"        return password.equals(cred.getValue());\n"
"    }\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:124
#, no-wrap
msgid "The `isConfiguredFor()` method is called by the runtime to determine if a specific credential type is configured for the user. This method checks to see that the password is set for the user.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:126
#, no-wrap
msgid "The `suportsCredentialType()` method returns whether validation is supported for a specific credential type. We check to see if the credential type is `password`.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:128
#, no-wrap
msgid "The `isValid()` method is responsible for validating passwords. The `CredentialInput` parameter is really just an abstract interface for all credential types. We make sure that we support the credential type and also that it is an instance of `UserCredentialModel`. When a user logs in through the login page, the plain text of the password input is put into an instance of `UserCredentialModel`. The `isValid()` method checks this value against the plain text password stored in the properties file. A return value of `true` means the password is valid.\n"
msgstr ""

#. type: Title =====
#: source/server_development/topics/user-storage/simple-example.adoc:129
#, no-wrap
msgid "CredentialInputUpdater Implementation"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:132
#, no-wrap
msgid "As noted before, the only reason we implement the `CredentialInputUpdater` interface in this example is to forbid modifications of user passwords. The reason we have to do this is because otherwise the runtime would allow the password to be overriden in {project_name} local storage. We'll talk more about this later in this chapter.\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:138
#, no-wrap
msgid "    @Override\n"
"    public boolean updateCredential(RealmModel realm, UserModel user, CredentialInput input) {\n"
"        if (input.getType().equals(CredentialModel.PASSWORD)) throw new ReadOnlyException(\"user is read only for this update\");\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:141
#, no-wrap
msgid "        return false;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:144
#, no-wrap
msgid "    @Override\n"
"    public void disableCredentialType(RealmModel realm, UserModel user, String credentialType) {\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:151
#, no-wrap
msgid "    @Override\n"
"    public Set<String> getDisableableCredentialTypes(RealmModel realm, UserModel user) {\n"
"        return Collections.EMPTY_SET;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:154
#, no-wrap
msgid "The `updateCredential()` method just checks to see if the credential type is password.  If it is, a `ReadOnlyException` is thrown.\n"
msgstr ""

#. type: Title ====
#: source/server_development/topics/user-storage/simple-example.adoc:155
#, no-wrap
msgid "Provider Factory Implementation"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:158
#, no-wrap
msgid "Now that the provider class is complete, we now turn our attention to the provider factory class.\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:163
#, no-wrap
msgid "public class PropertyFileUserStorageProviderFactory\n"
"                 implements UserStorageProviderFactory<PropertyFileUserStorageProvider> {\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:165
#, no-wrap
msgid "    public static final String PROVIDER_NAME = \"readonly-property-file\";\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:170
#, no-wrap
msgid "    @Override\n"
"    public String getId() {\n"
"        return PROVIDER_NAME;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:173
#, no-wrap
msgid "First thing to notice is that when implementing the `UserStorageProviderFactory` class, you must pass in the concrete provider class implementation as a template parameter. Here we specify the provider class we defined before: `PropertyFileUserStorageProvider`.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:176
#, no-wrap
msgid "If you do not specify the template parameter, your provider will not function. The runtime does class introspection\n"
"         to determine the _capability interfaces_ that the provider implements.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:178
#, no-wrap
msgid "The `getId()` method identifies the factory in the runtime and will also be the string shown in the admin console when you want to enable a user storage provider for the realm.\n"
msgstr ""

#. type: Title =====
#: source/server_development/topics/user-storage/simple-example.adoc:179
#, no-wrap
msgid "Initialization"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:185
#, no-wrap
msgid "    private static final Logger logger = Logger.getLogger(PropertyFileUserStorageProviderFactory.class);\n"
"    protected Properties properties = new Properties();\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:189
#, no-wrap
msgid "    @Override\n"
"    public void init(Config.Scope config) {\n"
"        InputStream is = getClass().getClassLoader().getResourceAsStream(\"/users.properties\");\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:200
#, no-wrap
msgid "        if (is == null) {\n"
"            logger.warn(\"Could not find users.properties in classpath\");\n"
"        } else {\n"
"            try {\n"
"                properties.load(is);\n"
"            } catch (IOException ex) {\n"
"                logger.error(\"Failed to load users.properties file\", ex);\n"
"            }\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:205
#: source/server_development/topics/user-storage/simple-example.adoc:248
#, no-wrap
msgid "    @Override\n"
"    public PropertyFileUserStorageProvider create(KeycloakSession session, ComponentModel model) {\n"
"        return new PropertyFileUserStorageProvider(session, model, properties);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:208
#, no-wrap
msgid "The `UserStorageProviderFactory` interface has an optional `init()` method you can implement. When {project_name} boots up, only one instance of each provider factory is created. Also at boot time, the `init()` method is called on each of these factory instances. There's also a `postInit()` method you can implement as well. After each factory's `init()` method is invoked, their `postInit()` methods are called.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:210
#, no-wrap
msgid "In our `init()` method implementation, we find the property file containing our user declarations from the classpath. We then load the `properties` field with the username and password combinations stored there.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:212
#, no-wrap
msgid "The `Config.Scope` parameter is factory configuration that can be set up within `standalone.xml`, `standalone-ha.xml`, or `domain.xml`. For more information on where the `standalone.xml`, `standalone-ha.xml`, or `domain.xml` file resides see the link:{installguide_link}[{installguide_name}].\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:214
#, no-wrap
msgid "For example, by adding the following to `standalone.xml`:\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:224
#, no-wrap
msgid "<spi name=\"storage\">\n"
"    <provider name=\"readonly-property-file\" enabled=\"true\">\n"
"        <properties>\n"
"            <property name=\"path\" value=\"/other-users.properties\"/>\n"
"        </properties>\n"
"    </provider>\n"
"</spi>\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:227
#, no-wrap
msgid "We can specify the classpath of the user property file instead of hardcoding it. Then you can retrieve the configuration in the `PropertyFileUserStorageProviderFactory.init()`:\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:233
#, no-wrap
msgid "public void init(Config.Scope config) {\n"
"    String path = config.get(\"path\");\n"
"    InputStream is = getClass().getClassLoader().getResourceAsStream(path);\n"
msgstr ""

#. type: Title =====
#: source/server_development/topics/user-storage/simple-example.adoc:238
#, no-wrap
msgid "Create Method"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:241
#, no-wrap
msgid "Our last step in creating the provider factory is the `create()` method.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:251
#, no-wrap
msgid "We simply allocate the `PropertyFileUserStorageProvider` class.  This create method will be called once per transaction.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:255
#, no-wrap
msgid "The class files for our provider implementation should be placed in a jar.  You also have to declare the provider factory class within the `META-INF/services/org.keycloak.storage.UserStorageProviderFactory` file.\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/simple-example.adoc:258
#, no-wrap
msgid "org.keycloak.examples.federation.properties.FilePropertiesStorageFactory\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:261
#, no-wrap
msgid "Once you create the jar you can deploy it using regular JBoss/Wildfly means: copy the jar into the `deploy/` directory or using the JBoss CLI.\n"
msgstr ""

#. type: Title ====
#: source/server_development/topics/user-storage/simple-example.adoc:262
#, no-wrap
msgid "Enabling the Provider in the Administration Console"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:265
#, no-wrap
msgid "You enable user storage providers per realm within the `User Federation` page in the administration console.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:270
#, no-wrap
msgid "image:{project_images}/empty-user-federation-page.png[]\n"
"endif::[]\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:272
#, no-wrap
msgid "Select the provider we just created from the list: `readonly-property-file`. It brings you to the configuration page for our provider.  We do not have anything to configure, so click *Save*.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:277
#, no-wrap
msgid "image:{project_images}/storage-provider-created.png[]\n"
"endif::[]\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:279
#, no-wrap
msgid "When you go back to the main `User Federation` page, you now see your provider listed.\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:284
#, no-wrap
msgid "image:{project_images}/user-federation-page.png[]\n"
"endif::[]\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/simple-example.adoc:285
#, no-wrap
msgid "You will now be able to log in with a user declared in the `users.properties` file. This user will only be able to view the account page after logging in.\n"
msgstr ""

