# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Nomura Research Institute, Ltd.
# This file is distributed under the same license as the keycloak-documentation-i18n package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"Last-Translator: Hiroyuki Wada <wadahiro@gmail.com>, 2017\n"
"Language-Team: Japanese (Japan) (https://www.transifex.com/openstandia/teams/79437/ja_JP/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja_JP\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. type: Title ====
#, no-wrap
msgid "Internationalization"
msgstr "国際化"

#. type: Title ==
#, no-wrap
msgid "Themes"
msgstr "テーマ"

#. type: Plain text
msgid ""
"{project_name} provides theme support for web pages and emails. This allows "
"customizing the look and feel of end-user facing pages so they can be "
"integrated with your applications."
msgstr ""
"{project_name}では、webページと電子メール用のテーマがサポートされます。これによって、エンドユーザーが見るページのルック・アンド・フィールをカスタマイズすることができ、そのページをアプリケーションに統合することができます。"

#. type: Named 'title' AttributeList argument for macro 'image'
#, no-wrap
msgid "Login page with sunrise example theme"
msgstr "日の出のサンプルのテーマとログインページ"

#. type: Target for macro image
#, no-wrap
msgid "images/login-sunrise.png"
msgstr "images/login-sunrise.png"

#. type: Title ===
#, no-wrap
msgid "Theme Types"
msgstr "テーマの種類"

#. type: Plain text
msgid ""
"A theme can provide one or more types to customize different aspects of "
"{project_name}. The types available are:"
msgstr ""
"テーマには1つ以上の種類が用意されており、{project_name}のさまざまな部分をカスタマイズすることができます。用意されている種類は以下のとおりです。"

#. type: Plain text
msgid "Account - Account management"
msgstr "Account - アカウント管理"

#. type: Plain text
msgid "Admin - Admin console"
msgstr "Admin - 管理コンソール"

#. type: Plain text
msgid "Email - Emails"
msgstr "Email - 電子メール"

#. type: Plain text
msgid "Login - Login forms"
msgstr "Login - ログイン画面"

#. type: Plain text
msgid "Welcome - Welcome page"
msgstr "Welcome - ウェルカムページ"

#. type: Title ===
#, no-wrap
msgid "Configure Theme"
msgstr "テーマの設定"

#. type: Plain text
msgid ""
"All theme types, except welcome, are configured through the `Admin Console`."
" To change the theme used for a realm open the `Admin Console`, select your "
"realm from the drop-down box in the top left corner. Under `Realm Settings` "
"click `Themes`."
msgstr ""
"ウェルカムページを除く、すべてのテーマの種類は `Admin Console` を通じて設定されます。レルム用に使用されるテーマを変更するには "
"`Admin Console` を開き、画面左上端にあるドロップダウン・ボックスからレルムを選択します。 `Realm Settings` の下で "
"`Themes` をクリックします。"

#. type: Plain text
msgid ""
"To set the theme for the `master` admin console you need to set the admin "
"console theme for the `master` realm. To see the changes to the admin "
"console refresh the page."
msgstr ""
"`master` の管理コンソール用にテーマをセットするには、 `master` "
"レルム用の管理コンソール・テーマを設定する必要があります。管理コンソールへの変更を確認するには、ページをリフレッシュしてください。"

#. type: Plain text
msgid ""
"To change the welcome theme you need to edit `standalone.xml`, `standalone-"
"ha.xml`, or `domain.xml`.  For more information on where the "
"`standalone.xml`, `standalone-ha.xml`, or `domain.xml` file resides see the "
"link:{installguide_link}[{installguide_name}]."
msgstr ""
"ウェルカムページのテーマを変更するには `standalone.xml` 、 `standalone-ha.xml` 、または `domain.xml`"
" のいずれかを編集する必要があります。 `standalone.xml` 、 `standalone-ha.xml` 、または `domain.xml`"
" のファイルがある場所について、詳しくは、link:{installguide_link}[{installguide_name}]を参照してください。"

#. type: Plain text
msgid "Add `welcomeTheme` to the theme element, for example:"
msgstr "`welcomeTheme` をテーマ要素に追加します。サンプルは以下のとおりになります。"

#. type: delimited block -
#, no-wrap
msgid ""
"<theme>\n"
"    ...\n"
"    <welcomeTheme>custom-theme</welcomeTheme>\n"
"    ...\n"
"</theme>\n"
msgstr ""
"<theme>\n"
" ...\n"
" <welcomeTheme>custom-theme</welcomeTheme>\n"
" ...\n"
"</theme>\n"

#. type: Plain text
msgid ""
"If the server is running you need to restart the server for the changes to "
"the welcome theme to take effect."
msgstr "サーバーが実行されている場合、サーバーを再起動してウェルカムページのテーマ変更を有効にする必要があります。"

#. type: Title ===
#, no-wrap
msgid "Default Themes"
msgstr "デフォルトのテーマ"

#. type: Plain text
msgid ""
"{project_name} comes bundled with default themes in the server's root "
"`themes` directory. To simplify upgrading you should not edit the bundled "
"themes directly. Instead create your own theme that extends one of the "
"bundle themes."
msgstr ""
"{project_name}には、サーバーのルート `themes` "
"ディレクトリー内のデフォルト・テーマがバンドルされています。アップグレードを簡単にするために、バンドルされたテーマを直接編集しないでください。代わりに、バンドルされたテーマの1つを拡張する独自のテーマを作成してください。"

#. type: Title ===
#, no-wrap
msgid "Creating a Theme"
msgstr "テーマの作成"

#. type: Plain text
msgid "A theme consists of:"
msgstr "テーマは、以下の項目で構成されています。"

#. type: Plain text
msgid "HTML templates (https://freemarker.apache.org/[Freemarker Templates])"
msgstr "HTML templates (https://freemarker.apache.org/[Freemarker Templates])"

#. type: Title ====
#, no-wrap
msgid "Images"
msgstr "画像"

#. type: Plain text
msgid "Message bundles"
msgstr "メッセージ・バンドル"

#. type: Title ====
#, no-wrap
msgid "Stylesheets"
msgstr "スタイルシート"

#. type: Title ====
#, no-wrap
msgid "Scripts"
msgstr "スクリプト"

#. type: Plain text
msgid "Theme properties"
msgstr "テーマ用のpropertiesファイル"

#. type: Plain text
msgid ""
"Unless you plan to replace every single page you should extend another "
"theme. Most likely you will want to extend the {project_name} theme, but you"
" could also consider extending the base theme if you are significantly "
"changing the look and feel of the pages. The base theme primarily consists "
"of HTML templates and message bundles, while the {project_name} theme "
"primarily contains images and stylesheets."
msgstr ""
"ページをすべて置き換えるわけではない場合は、いずれかのテーマを1つ拡張する方法をお勧めします。通常の場合{project_name}のテーマを拡張したいでしょうが、ページのルック・アンド・フィールを大幅に変更する場合は基本テーマを拡張するということも検討対象となります。基本テーマは主にHTMLのテンプレートとメッセージ・バンドルで構成され、"
" {project_name}テーマには主にイメージとスタイルシートが含まれます。"

#. type: Plain text
msgid ""
"When extending a theme you can override individual resources (templates, "
"stylesheets, etc.). If you decide to override HTML templates bear in mind "
"that you may need to update your custom template when upgrading to a new "
"release."
msgstr ""
"テーマを拡張する場合、個々のリソース（テンプレート、スタイルシートなど）を上書きできます。HTMLのテンプレートを上書きする場合、新規リリースへのアップグレードの際に、カズタマイズしたテンプレートをアップグレードする必要があることに留意してください。"

#. type: Plain text
msgid ""
"While creating a theme it's a good idea to disable caching as this makes it "
"possible to edit theme resources directly from the `themes` directory "
"without restarting {project_name}. To do this edit `standalone.xml`. For "
"`theme` set `staticMaxAge` to `-1` and both `cacheTemplates` and "
"`cacheThemes` to `false`:"
msgstr ""
"テーマを作成する際は、キャッシュを無効にすることをお勧めします。なぜなら、無効にしたことにより、{project_name}を再起動せずに、 "
"`themes` ディレクトリーからテーマ・リソースを直接編集することができるからです。これを実行するには `standalone.xml` "
"を編集します。以下のとおり、 `theme` 用に `staticMaxAge` を `-1` に設定し、 `cacheTemplates` と "
"`cacheThemes` の両方は `false` に設定します。"

#. type: delimited block -
#, no-wrap
msgid ""
"<theme>\n"
"    <staticMaxAge>-1</staticMaxAge>\n"
"    <cacheThemes>false</cacheThemes>\n"
"    <cacheTemplates>false</cacheTemplates>\n"
"    ...\n"
"</theme>\n"
msgstr ""
"<theme>\n"
" <staticMaxAge>-1</staticMaxAge>\n"
" <cacheThemes>false</cacheThemes>\n"
" <cacheTemplates>false</cacheTemplates>\n"
" ...\n"
"</theme>\n"

#. type: Plain text
msgid ""
"Remember to re-enable caching in production as it will significantly impact "
"performance."
msgstr "パフォーマンスにかなり影響を与える可能性があるので、プロダクション環境でキャッシュを再度有効にすることを忘れず実行してください。"

#. type: Plain text
msgid ""
"To create a new theme start by creating a new directory in the `themes` "
"directory. The name of the directory becomes the name of the theme. For "
"example to create a theme called `mytheme` create the directory "
"`themes/mytheme`."
msgstr ""
"新しいテーマを作成するには、まず `themes` "
"ディレクトリー内で新しいディレクトリーを作成します。ディレクトリー名がテーマの名前になります。たとえば、 `mytheme` "
"という名前のテーマを作成するには、 `themes/mytheme` ディレクトリーを作成します。"

#. type: Plain text
msgid ""
"Inside the theme directory create a directory for each of the types your "
"theme is going to provide. For example to add the login type to the "
"`mytheme` theme create the directory `themes/mytheme/login`."
msgstr ""
"テーマのディレクトリー内に、テーマで用意されている各種ディレクトリーをそれぞれ作成します。たとえば、ログインのタイプを `mytheme` "
"テーマに追加するには、 `themes/mytheme/login` ディレクトリーを作成します。"

#. type: Plain text
msgid ""
"For each type create a file `theme.properties` which allows setting some "
"configuration for the theme. For example to configure the theme "
"`themes/mytheme/login` that we just created to extend the base theme and "
"import some common resources create the file "
"`themes/mytheme/login/theme.properties` with following contents:"
msgstr ""
"タイプ毎に、テーマ用に設定することができる `theme.properties` "
"ファイルを作成します。たとえば、基本テーマを拡張して共通のリソースをインポートするために作成した `themes/mytheme/login` "
"テーマを設定するには、以下の内容で `themes/mytheme/login/theme.properties` ファイルを作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"parent=base\n"
"import=common/keycloak\n"
msgstr ""
"parent=base\n"
"import=common/keycloak\n"

#. type: Plain text
msgid ""
"You have now created a theme with support for the login type. To check that "
"it works open the admin console. Select your realm and click on `Themes`.  "
"For `Login Theme` select `mytheme` and click `Save`. Then open the login "
"page for the realm."
msgstr ""
"これで、ログイン・タイプをサポートするテーマが作成されました。これが動作するか確認するには、管理コンソールを開きます。レルムを選択し、 `Themes`"
" をクリックします。 `Login Theme` 用には、 `mytheme` を選択して `Save` "
"をクリックします。それから、レルム用のログインページを開きます。"

#. type: Plain text
msgid ""
"You can do this either by login through your application or by opening the "
"Account Management console (`/realms/{realm name}/account`)."
msgstr ""
"これは、アプリケーションを経由してログインしても、アカウント管理コンソール（ `/realms/{realm name}/account` "
"）を開いても、実行できます。"

#. type: Plain text
msgid ""
"To see the effect of changing the parent theme, set `parent=keycloak` in "
"`theme.properties` and refresh the login page."
msgstr ""
"現在のテーマを変更した際にどのような影響があるか確認するには、 `theme.properties` 内で `parent=keycloak` "
"を設定してログイン・ページをリフレッシュします。"

#. type: Title ====
#, no-wrap
msgid "Theme Properties"
msgstr "テーマのプロパティー"

#. type: Plain text
msgid ""
"Theme properties are set in the file `<THEME TYPE>/theme.properties` in the "
"theme directory."
msgstr ""
"テーマのプロパティーは、テーマ・ディレクトリー内にある `<THEME TYPE>/theme.properties` ファイルで設定されています。"

#. type: Plain text
msgid "parent - Parent theme to extend"
msgstr "parent - 拡張が可能な親テーマ"

#. type: Plain text
msgid "import - Import resources from another theme"
msgstr "import - 他テーマからリソースをインポートすること"

#. type: Plain text
msgid "styles - Space-separated list of styles to include"
msgstr "styles - スペースで区切られた、インクルードするスタイルのリスト"

#. type: Plain text
msgid "locales - Comma-separated list of supported locales"
msgstr "locales - カンマで区切られた、サポートされるロケールのリスト"

#. type: Plain text
msgid ""
"There are a list of properties that can be used to change the css class used"
" for certain element types. For a list of these properties look at the "
"theme.properties file in the corresponding type of the keycloak theme "
"(`themes/keycloak/<THEME TYPE>/theme.properties`)."
msgstr ""
"特定の要素タイプのために使用される、cssクラスの変更用として使用可能なプロパティーのリストがあります。これらのプロパティーのリストについては、keycloakテーマ（"
" `themes/keycloak/<THEME TYPE>/theme.properties` "
")に対応するタイプのtheme.propertiesファイルを参照してください。"

#. type: Plain text
msgid ""
"You can also add your own custom properties and use them from custom "
"templates."
msgstr "カスタム・プロパティーを追加し、それらをカスタム・テンプレートから使用することができます。"

#. type: Plain text
msgid ""
"A theme can have one or more stylesheets, to add a stylesheet create a file "
"in the `<THEME TYPE>/resources/css` directory of your theme. Then add it to "
"the `styles` property in `theme.properties`."
msgstr ""
"テーマには、1つ以上のスタイルシートを持たせることができます。スタイルシートを追加するには、テーマの `<THEME "
"TYPE>/resources/css` ディレクトリー内でファイルを作成します。それから、 `theme.properties` 内の `styles`"
" プロパティーへ、そのファイルを追加します。"

#. type: Plain text
msgid ""
"For example to add `styles.css` to the `mytheme` create "
"`themes/mytheme/login/resources/css/styles.css` with the following content:"
msgstr ""
"たとえば、 `mytheme` へ `styles.css` を追加するには、以下の内容で "
"`themes/mytheme/login/resources/css/styles.css` を作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
".login-pf body {\n"
"    background: DimGrey none;\n"
"}\n"
msgstr ""
".login-pf body {\n"
" background: DimGrey none;\n"
"}\n"

#. type: Plain text
msgid "Then edit `themes/mytheme/login/theme.properties` and add:"
msgstr "次に、 `themes/mytheme/login/theme.properties` を編集し、以下を追加します。"

#. type: delimited block -
#, no-wrap
msgid "styles=css/styles.css\n"
msgstr "styles=css/styles.css\n"

#. type: Plain text
msgid ""
"To see the changes open the login page for your realm. You will notice that "
"the only styles being applied are those from your custom stylesheet. To "
"include the styles from the parent theme you need to load the styles from "
"that theme as well. Do this by editing "
"`themes/mytheme/login/theme.properties` and changing `styles` to:"
msgstr ""
"変更されたか確認するには、レルム用のログインページを開きます。適用されたスタイルはカスタム・スタイルシートからのものだけだと分かります。親テーマからのスタイルも含ませるには、そのテーマからのスタイルも同様にロードする必要があります。これは、"
" `themes/mytheme/login/theme.properties` を編集し、以下のとおり `styles` を変更することで実行できます。"

#. type: delimited block -
#, no-wrap
msgid ""
"styles=lib/patternfly/css/patternfly.css lib/zocial/zocial.css css/login.css"
" css/styles.css\n"
msgstr ""
"styles=lib/patternfly/css/patternfly.css lib/zocial/zocial.css css/login.css"
" css/styles.css\n"

#. type: Plain text
msgid ""
"To override styles from the parent stylesheets it's important that your "
"stylesheet is listed last."
msgstr "親のスタイルシートからのスタイルを上書きするには、スタイルシートがリストの最後にあることが重要です。"

#. type: Plain text
msgid ""
"A theme can have one or more scripts, to add a script create a file in the "
"`<THEME TYPE>/resources/js` directory of your theme. Then add it to the "
"`scripts` property in `theme.properties`."
msgstr ""
"テーマには、1つ以上のスクリプトを持たせることができます。スクリプトを追加するには、テーマの `<THEME TYPE>/resources/js` "
"ディレクトリー内でファイルを作成します。それから、 `theme.properties` 内の `scripts` "
"プロパティーへ、そのファイルを追加します。"

#. type: Plain text
msgid ""
"For example to add `script.js` to the `mytheme` create "
"`themes/mytheme/login/resources/js/script.js` with the following content:"
msgstr ""
"たとえば、 `mytheme` へ `script.js`を追加するには、以下の内容で "
"`themes/mytheme/login/resources/js/script.js` を作成します。"

#. type: delimited block -
#, no-wrap
msgid "alert('Hello');\n"
msgstr "alert('Hello');\n"

#. type: delimited block -
#, no-wrap
msgid "scripts=js/script.js\n"
msgstr "scripts=js/script.js\n"

#. type: Plain text
msgid ""
"To make images available to the theme add them to the `<THEME "
"TYPE>/resources/img` directory of your theme. These can be used from within "
"stylesheets or directly in HTML templates."
msgstr ""
"テーマで画像を使用できるようにするには、テーマの `<THEME TYPE>/resources/img` "
"ディレクトリーに画像を追加します。これらの画像は、スタイルシート内または直接HTMLテンプレート内で使用することができます。"

#. type: Plain text
msgid ""
"For example to add an image to the `mytheme` copy an image to "
"`themes/mytheme/login/resources/img/image.jpg`."
msgstr ""
"たとえば、 `mytheme` へ画像を追加するには、 `themes/mytheme/login/resources/img/image.jpg` "
"へ画像をコピーします。"

#. type: Plain text
msgid "You can then use this image from within a custom stylesheet with:"
msgstr "これで、以下のようにカスタム・スタイルシート内からこのイメージを使うことができます。"

#. type: delimited block -
#, no-wrap
msgid ""
"body {\n"
"    background-image: url('../img/image.jpg');\n"
"    background-size: cover;\n"
"}\n"
msgstr ""
"body {\n"
" background-image: url('../img/image.jpg');\n"
" background-size: cover;\n"
"}\n"

#. type: Plain text
msgid ""
"Or to use directly in HTML templates add the following to a custom HTML "
"template:"
msgstr "または、HTMLテンプレート内で直接使う場合は、以下をカスタムHTMLテンプレートへ追加します。"

#. type: delimited block -
#, no-wrap
msgid "<img src=\"${url.resourcesPath}/img/image.jpg\">\n"
msgstr "<img src=\"${url.resourcesPath}/img/image.jpg\">\n"

#. type: Title ====
#, no-wrap
msgid "Messages"
msgstr "メッセージ"

#. type: Plain text
msgid ""
"Text in the templates are loaded from message bundles. A theme that extends "
"another theme will inherit all messages from the parents message bundle and "
"you can override individual messages by adding `<THEME "
"TYPE>/messages/messages_en.properties` to your theme."
msgstr ""
"テンプレート内のテキストは、メッセージ・バンドルからロードされます。他のテーマを拡張するテーマは、親メッセージ・バンドルからすべてのメッセージを引き継ぎ、テーマに"
" `<THEME TYPE>/messages/messages_en.properties` "
"を追加することで個々のメッセージを上書きすることができます。"

#. type: Plain text
msgid ""
"For example to replace `Username` on the login form with `Your Username` for"
" the `mytheme` create the file "
"`themes/mytheme/login/messages/messages_en.properties` with the following "
"content:"
msgstr ""
"たとえば、 `mytheme` でログイン画面上の `Username` を `Your Username` に置き換えるには、以下の内容で "
"`themes/mytheme/login/messages/messages_en.properties` ファイルを作成します。"

#. type: delimited block -
#, no-wrap
msgid "usernameOrEmail=Your Username\n"
msgstr "usernameOrEmail=Your Username\n"

#. type: Plain text
msgid ""
"Within a message values like `{0}` and `{1}` are replaced with arguments "
"when the message is used. For example {0} in `Log in to {0}` is replaced "
"with the name of the realm."
msgstr ""
"メッセージ内では、メッセージが使用される際、 `{0}` および `{1}` のような値が引数に置き換えられます。たとえば、 `Log in to "
"{0}` 内の {0} がレルム名に置き換えられます。"

#. type: Plain text
msgid ""
"{project_name} supports internationalization. To enable internationalization"
" for a realm see {adminguide_link}[{adminguide_name}]. This section "
"describes how you can add your own language."
msgstr ""
"{project_name}では、国際化がサポートされています。レルム用に国際化を有効にするには、 "
"{adminguide_link}[{adminguide_name}] を参照してください。このセクションでは、言語を追加する方法について説明します。"

#. type: Plain text
msgid ""
"To add a new language create the file `<THEME "
"TYPE>/messages/messages_<LOCALE>` in the directory of your theme. Then add "
"it to the `locales` property in `<THEME TYPE>/theme.properties`. For a "
"language to be available to users the realms `login`, `account` and `email` "
"theme has to support the language, so you need to add your language for "
"those theme types."
msgstr ""
"新しく言語を追加するには、テーマのディレクトリー内で `<THEME TYPE>/messages/messages_<LOCALE>` "
"ファイルを作成します。次に、そのファイルを `<THEME TYPE>/theme.properties` 内の `locales` "
"プロパティーへ追加します。ユーザーが言語を使用できるようにするには、レルムの `login` 、 `account` および `email` "
"のテーマによってその言語がサポートされなければなりません。したがって、それらのテーマ・タイプとしてその言語を追加する必要があります。"

#. type: Plain text
msgid ""
"For example, to add Norwegian translations to the `mytheme` theme create the"
" file `themes/mytheme/login/messages/messages_no.properties` with the "
"following content:"
msgstr ""
"たとえば、 `mytheme` テーマへノルウェー翻訳を追加するには、以下の内容で "
"`themes/mytheme/login/messages/messages_no.properties` ファイルを作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"usernameOrEmail=Brukernavn\n"
"password=Passord\n"
msgstr ""
"usernameOrEmail=Brukernavn\n"
"password=Passord\n"

#. type: Plain text
msgid ""
"All messages you don't provide a translation for will use the default "
"English translation."
msgstr "翻訳していないメッセージにはすべて、デフォルトの英語翻訳が使用されます。"

#. type: delimited block -
#, no-wrap
msgid "locales=en,no\n"
msgstr "locales=en,no\n"

#. type: Plain text
msgid ""
"You also need to do the same for the `account` and `email` theme types. To "
"do this create `themes/mytheme/account/messages/messages_no.properties` and "
"`themes/mytheme/email/messages/messages_no.properties`. Leaving these files "
"empty will result in the English messages being used. Then copy "
"`themes/mytheme/login/theme.properties` to "
"`themes/mytheme/account/theme.properties` and "
"`themes/mytheme/email/theme.properties`."
msgstr ""
"`account` と `email` のテーマ・タイプにも同じことを実行する必要があります。これを実行するには、 "
"`themes/mytheme/account/messages/messages_no.properties` と "
"`themes/mytheme/email/messages/messages_no.properties` "
"を作成します。これらのファイルを空にしたままにすると、英語のメッセージが使用されます。次に、 "
"`themes/mytheme/login/theme.properties` をコピーして "
"`themes/mytheme/account/theme.properties` と "
"`themes/mytheme/email/theme.properties` へペーストします。"

#. type: Plain text
msgid ""
"Finally you need to add a translation for the language selector. This is "
"done by adding a message to the English translation. To do this add the "
"following to `themes/mytheme/account/messages/messages_en.properties` and "
"`themes/mytheme/login/messages/messages_en.properties`:"
msgstr ""
"最後に、言語セレクターに翻訳を追加する必要があります。これは英語翻訳にメッセージを追加することによって実行されます。これを実行するには、以下を "
"`themes/mytheme/account/messages/messages_en.properties` と "
"`themes/mytheme/login/messages/messages_en.properties` に追加します。"

#. type: delimited block -
#, no-wrap
msgid "locale_no=Norsk\n"
msgstr "locale_no=Norsk\n"

#. type: Plain text
msgid ""
"By default message properties files should be encoded using ISO-8859-1. It's"
" also possible to specify the encoding using a special header. For example "
"to use UTF-8 encoding:"
msgstr ""
"デフォルトでは、メッセージ・プロパティー・ファイルはISO-8859-1を使用してエンコードされる必要があります。また、これは特別なヘッダーを使用してエンコーディングを指定する方法でも可能です。たとえば"
"、UTF-8エンコーディングを使用するには、以下のとおりとなります。"

#. type: delimited block -
#, no-wrap
msgid ""
"# encoding: UTF-8\n"
"usernameOrEmail=....\n"
msgstr ""
"# encoding: UTF-8\n"
"usernameOrEmail=....\n"

#. type: Title ====
#, no-wrap
msgid "HTML Templates"
msgstr "HTMLのテンプレート"

#. type: Plain text
msgid ""
"{project_name} uses https://freemarker.apache.org/[Freemarker Templates] in "
"order to generate HTML. You can override individual templates in your own "
"theme by creating `<THEME TYPE>/<TEMPLATE>.ftl`. For a list of templates "
"used see `themes/base/<THEME TYPE>`."
msgstr ""
"{project_name}では、HTMLを生成するために "
"https://freemarker.apache.org/[Freemarkerテンプレート] が使用されます。テーマ内で `<THEME "
"TYPE>/<TEMPLATE>.ftl` を作成すると、個々のテンプレートを上書きすることができます。使用したテンプレートのリストについては "
"`themes/base/<THEME TYPE>` を参照してください。"

#. type: Plain text
msgid ""
"When creating a custom template it is a good idea to copy the template from "
"the base theme to your own theme, then applying the modifications you need. "
"Bear in mind when upgrading to a new version of {project_name} you may need "
"to update your custom templates to apply changes to the original template if"
" applicable."
msgstr ""
"カスタム・テンプレートを作成する場合、基本テーマからのテンプレートをテーマへコピーし、必要な修正を適用する方法をお勧めします。{project_name}の新しいバージョンへアップグレードする際に、適用可能であれば、カスタム・テンプレートをアップグレードし、オリジナルのテンプレートへ変更を適用する必要があることを留意しておいてください。"

#. type: Plain text
msgid ""
"For example to create a custom login form for the `mytheme` theme copy "
"`themes/base/login/login.ftl` to `themes/mytheme/login` and open it in an "
"editor.  After the first line (<#import ...>) add `<h1>HELLO WORLD!</h1>` "
"like so:"
msgstr ""
"たとえば、 `mytheme` テーマにカスタム・ログイン画面を作成するには、 `themes/base/login/login.ftl` を "
"`themes/mytheme/login` へコピーし、それをエディター内で開きます。以下のように最初の行（<#import ...>）の次行に "
"`<h1>HELLO WORLD!</h1>` を追加します。"

#. type: delimited block -
#, no-wrap
msgid ""
"<#import \"template.ftl\" as layout>\n"
"<h1>HELLO WORLD!</h1>\n"
"...\n"
msgstr ""
"<#import \"template.ftl\" as layout>\n"
"<h1>HELLO WORLD!</h1>\n"
"...\n"

#. type: Plain text
msgid ""
"Check out the https://freemarker.apache.org/docs/index.html[FreeMarker "
"Manual] for more details on how to edit templates."
msgstr ""
"テンプレートを編集する方法について、詳しくは、 "
"https://freemarker.apache.org/docs/index.html[FreeMarkerのマニュアル] を参照してください。"

#. type: Title ====
#, no-wrap
msgid "Emails"
msgstr "電子メール"

#. type: Plain text
msgid ""
"To edit the subject and contents for emails, for example password recovery "
"email, add a message bundle to the `email` type of your theme. There's three"
" messages for each email. One for the subject, one for the plain text body "
"and one for the html body."
msgstr ""
"電子メールの題名と内容（たとえばパスワード・リカバリー電子メールなど）を編集するには、テーマの `email` "
"タイプへメッセージ・バンドルを追加します。各電子メールには3つのメッセージがあります。題名、プレーン・テキストの本文、およびhtmlのbodyです。"

#. type: Plain text
msgid ""
"To see all emails available take a look at "
"`themes/base/email/messages/messages_en.properties`."
msgstr ""
"使用できる電子メールをすべて確認するには、 `themes/base/email/messages/messages_en.properties` "
"を参照してください。"

#. type: Plain text
msgid ""
"For example to change the password recovery email for the `mytheme` theme "
"create `themes/mytheme/email/messages/messages_en.properties` with the "
"following content:"
msgstr ""
"たとえば、 `mytheme` テーマ用にパスワード・リカバリー電子メールを変更するには、以下の内容で "
"`themes/mytheme/email/messages/messages_en.properties` を作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"passwordResetSubject=My password recovery\n"
"passwordResetBody=Reset password link: {0}\n"
"passwordResetBodyHtml=<a href=\"{0}\">Reset password</a>\n"
msgstr ""
"passwordResetSubject=My password recovery\n"
"passwordResetBody=Reset password link: {0}\n"
"passwordResetBodyHtml=<a href=\"{0}\">Reset password</a>\n"

#. type: Title ===
#, no-wrap
msgid "Deploying Themes"
msgstr "テーマのデプロイ"

#. type: Plain text
msgid ""
"Themes can be deployed to {project_name} by copying the theme directory to "
"`themes` or it can be deployed as an archive. During development copying the"
" theme to the `themes` directory, but in production you may want to consider"
" using an `archive`. An `archive` makes it simpler to have a versioned copy "
"of the theme, especially when you have multiple instances of {project_name} "
"for example with clustering."
msgstr ""
"テーマは、テーマ・ディレクトリーを `themes` "
"へコピーすることによって、{project_name}へデプロイすることができ、アーカイブとしてデプロイすることも可能です。デプロイ中は、テーマを "
"`themes` ディレクトリーへコピーしますが、プロダクション環境では `archive` の使用が検討した方がいいかもしれません。 `archive`"
" "
"を使用すると、テーマのコピー版の作成が簡単になります。たとえばクラスター構成の{project_name}など、インスタンスが複数ある場合は特に便利です。"

#. type: Plain text
msgid ""
"To deploy a theme as an archive you need to create a ZIP archive with the "
"theme resources. You also need to add a file `META-INF/keycloak-themes.json`"
" to the archive that lists the available themes in the archive as well as "
"what types each theme provides."
msgstr ""
"テーマをアーカイブとしてデプロイするには、テーマのリソースを使用してZIPアーカイブを作成する必要があります。また、アーカイブで使用可能なテーマと各テーマが提供するタイプをリストするアーカイブに、"
" `META-INF/keycloak-themes.json` ファイルを追加することも必要です。"

#. type: Plain text
msgid ""
"For example for the `mytheme` theme create `mytheme.zip` with the contents:"
msgstr "たとえば、 `mytheme` テーマの場合、以下の内容で `mytheme.zip` を作成します。"

#. type: Plain text
msgid "META-INF/keycloak-themes.json"
msgstr "META-INF/keycloak-themes.json"

#. type: Plain text
msgid "theme/mytheme/login/theme.properties"
msgstr "theme/mytheme/login/theme.properties"

#. type: Plain text
msgid "theme/mytheme/login/login.ftl"
msgstr "theme/mytheme/login/login.ftl"

#. type: Plain text
msgid "theme/mytheme/login/resources/css/styles.css"
msgstr "theme/mytheme/login/resources/css/styles.css"

#. type: Plain text
msgid "theme/mytheme/login/resources/img/image.png"
msgstr "theme/mytheme/login/resources/img/image.png"

#. type: Plain text
msgid "theme/mytheme/login/messages/messages_en.properties"
msgstr "theme/mytheme/login/messages/messages_en.properties"

#. type: Plain text
msgid "theme/mytheme/email/messages/messages_en.properties"
msgstr "theme/mytheme/email/messages/messages_en.properties"

#. type: Plain text
msgid "The contents of `META-INF/keycloak-themes.json` in this case would be:"
msgstr "このケースの `META-INF/keycloak-themes.json` の内容は、以下のとおりです。"

#. type: delimited block -
#, no-wrap
msgid ""
"{\n"
"    \"themes\": [{\n"
"        \"name\" : \"mytheme\",\n"
"        \"types\": [ \"login\", \"email\" ]\n"
"    }]\n"
"}\n"
msgstr ""
"{\n"
" \"themes\": [{\n"
" \"name\" : \"mytheme\",\n"
" \"types\": [ \"login\", \"email\" ]\n"
" }]\n"
"}\n"

#. type: Plain text
msgid ""
"A single archive can contain multiple themes and each theme can support one "
"or more types."
msgstr "1つのアーカイブには複数のテーマを含めることができ、各テーマは1つ以上のタイプをサポートすることができます。"

#. type: Plain text
msgid ""
"The deploy the archive to {project_name} you can either manually create a "
"module in `modules` or use the `jboss-cli` command. It's simplest to use "
"`jboss-cli` as it creates the required directories and module descriptor for"
" you."
msgstr ""
"アーカイブを{project_name}にデプロイするには、手動で `modules` 内にモジュールを作成するか、 `jboss-cli` "
"コマンドを使用するかのどちらでも可能です。 `jboss-cli` "
"を使用すると、必要なディレクトリーとモジュール記述子が作成されるので、それが最も簡単な方法になります。"

#. type: Plain text
msgid "To deploy `mytheme.zip` on Linux run:"
msgstr "Linuxの実行中に `mytheme.zip` をデプロイするには、以下のとおりになります。"

#. type: delimited block -
#, no-wrap
msgid ""
"bin/jboss-cli.sh --command=\"module add --name=org.example.mytheme "
"--resources=mytheme.zip\"\n"
msgstr ""
"bin/jboss-cli.sh --command=\"module add --name=org.example.mytheme "
"--resources=mytheme.zip\"\n"

#. type: Plain text
msgid "On Windows run:"
msgstr "Windowsの実行中の場合、以下のとおりになります。"

#. type: delimited block -
#, no-wrap
msgid ""
"bin\\jboss-cli.bat --command=\"module add --name=org.example.mytheme "
"--resources=mytheme.zip\"\n"
msgstr ""
"bin\\jboss-cli.bat --command=\"module add --name=org.example.mytheme "
"--resources=mytheme.zip\"\n"

#. type: Plain text
msgid ""
"This command creates `modules/org/example/mytheme/main` directory with the "
"`mytheme.zip` archive and `module.xml`."
msgstr ""
"このコマンドは、 `mytheme.zip` アーカイブと `module.xml` を使用して、 "
"`modules/org/example/mytheme/main` ディレクトリーを作成します。"

#. type: Plain text
msgid ""
"To manually create the module create the directory "
"`modules/org/keycloak/example/mytheme/main`, copy `mytheme.zip` to this "
"directory and create the file "
"`modules/org/keycloak/example/mytheme/main/module.xml` with the contents:"
msgstr ""
"手動でモジュールを作成するには、 `modules/org/keycloak/example/mytheme/main` ディレクトリーを作成して "
"`mytheme.zip` をこのディレクトリーにコピーし、以下の内容で "
"`modules/org/keycloak/example/mytheme/main/module.xml` ファイルを作成します。"

#. type: delimited block -
#, no-wrap
msgid ""
"<?xml version=\"1.0\" ?>\n"
"<module xmlns=\"urn:jboss:module:1.3\" name=\"org.keycloak.example.themes\">\n"
"    <resources>\n"
"        <resource-root path=\"mytheme.zip\"/>\n"
"    </resources>\n"
"</module>\n"
msgstr ""
"<?xml version=\"1.0\" ?>\n"
"<module xmlns=\"urn:jboss:module:1.3\" name=\"org.keycloak.example.themes\">\n"
" <resources>\n"
" <resource-root path=\"mytheme.zip\"/>\n"
" </resources>\n"
"</module>\n"

#. type: Plain text
msgid ""
"You also need to register the module with {project_name}. This is done by "
"editing `standalone.xml`, `standalone-ha.xml`, or `domain.xml`.  For more "
"information on where the `standalone.xml`, `standalone-ha.xml`, or "
"`domain.xml` file resides see the "
"link:{installguide_link}[{installguide_name}]."
msgstr ""
"また、{project_name}を使用してモジュールを登録することも必要です。 `standalone.xml` 、 `standalone-"
"ha.xml` または `domain.xml` を編集することで実行されます。 `standalone.xml` 、 `standalone-"
"ha.xml` または `domain.xml` "
"ファイルがどこにあるかについての詳細は、link:{installguide_link}[{installguide_name}]を参照してください。"

#. type: Plain text
msgid ""
"Then find the `theme` tag under `keycloak-server` subsystem and add the "
"module to `theme/modules/module`. For example:"
msgstr ""
"`keycloak-server` サブシステムの下に `theme` タブがあることを確認し、モジュールを "
"`theme/modules/module` へ追加します。たとえば、以下のとおりとなります。"

#. type: delimited block -
#, no-wrap
msgid ""
"<theme>\n"
"    ...\n"
"    <modules>\n"
"        <module>org.example.mytheme</module>\n"
"    </modules>\n"
"</theme>\n"
msgstr ""
"<theme>\n"
" ...\n"
" <modules>\n"
" <module>org.example.mytheme</module>\n"
" </modules>\n"
"</theme>\n"

#. type: Plain text
msgid ""
"If the server is running you need to restart the server after changing "
"`standalone.xml`, `standalone-ha.xml`, or `domain.xml`."
msgstr ""
"サーバーが実行されている場合、 `standalone.xml` 、 `standalone-ha.xml` または `domain.xml` "
"を変更してから、サーバーを再起動する必要があります。"

#. type: delimited block =
msgid ""
"If the same theme is deployed to both the `themes` directory and as a module"
" the version in the `themes` directory is used."
msgstr ""
"同じテーマが `themes` ディレクトリーとモジュールとしての両方にデプロイされている場合は、 `themes` "
"ディレクトリー内のバージョンが使用されます。"
