msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"POT-Creation-Date: 2017-09-20 08:59+0000\n"
"PO-Revision-Date: 2017-09-20 05:27-0400\n"
"Last-Translator: wadahiro <wadahiro@gmail.com>\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: keycloak-documentation-i18n\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/i18n/pot/server_development__topics__user-storage__provider-capability-interfaces.pot\n"

#. type: Title ===
#: source/server_development/topics/user-storage/provider-capability-interfaces.adoc:2
#, no-wrap
msgid "Provider Capability Interfaces"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/provider-capability-interfaces.adoc:5
#, no-wrap
msgid "If you have examined the `UserStorageProvider` interface closely you might notice that it does not define any methods for locating or managing users. These methods are actually defined in other _capability interfaces_ depending on what scope of capabilities your external user store can provide and execute on. For example, some external stores are read-only and can only do simple queries and credential validation. You will only be required to implement the _capability interfaces_ for the features you are able to. You can implement these interfaces:\n"
msgstr ""

#. type: delimited block -
#: source/server_development/topics/user-storage/provider-capability-interfaces.adoc:9
#: source/server_development/topics/providers.adoc:350
#, no-wrap
msgid "|===\n"
"|SPI|Description\n"
msgstr ""

#. type: Plain text
#: source/server_development/topics/user-storage/provider-capability-interfaces.adoc:17
#, no-wrap
msgid "|`org.keycloak.storage.user.UserLookupProvider`|This interface is required if you want to be able to log in with users from this external store. Most (all?) providers implement this interface.\n"
"|`org.keycloak.storage.user.UserQueryProvider`|Defines complex queries that are used to locate one or more users. You must implement this interface if you want to view and manage users from the administration console.\n"
"|`org.keycloak.storage.user.UserRegistrationProvider`|Implement this interface if your provider supports adding and removing users.\n"
"|`org.keycloak.storage.user.UserBulkUpdateProvider`|Implement this interface if your provider supports bulk update of a set of users.\n"
"|`org.keycloak.credential.CredentialInputValidator`|Implement this interface if your provider can validate one or more different credential types (for example, if your provider can validate a password).\n"
"|`org.keycloak.credential.CredentialInputUpdater`|Implement this interface if your provider supports updating one or more different credential types.\n"
"|===\n"
msgstr ""

