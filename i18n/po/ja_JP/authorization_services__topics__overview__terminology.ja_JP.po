msgid ""
msgstr ""
"Project-Id-Version: keycloak-documentation-i18n\n"
"POT-Creation-Date: 2017-09-20 08:59+0000\n"
"PO-Revision-Date: 2017-09-20 05:29-0400\n"
"Last-Translator: wadahiro <wadahiro@gmail.com>\n"
"Language-Team: Japanese\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: crowdin.com\n"
"X-Crowdin-Project: keycloak-documentation-i18n\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/i18n/pot/authorization_services__topics__overview__terminology.pot\n"

#. type: Title ===
#: source/authorization_services/topics/overview/terminology.adoc:2
#, no-wrap
msgid "Terminology"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:5
#, no-wrap
msgid "Before going further, it is important to understand these terms and concepts introduced by {project_name} Authorization Services.\n"
msgstr ""

#. type: Title ====
#: source/authorization_services/topics/overview/terminology.adoc:7
#, no-wrap
msgid "Resource Server"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:10
#, no-wrap
msgid "Per OAuth2 terminology, a resource server is the server hosting the protected resources and capable of accepting and responding to protected resource requests.\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:14
#, no-wrap
msgid "Resource servers usually rely on some kind of information to decide whether access to a protected resource should be granted. For RESTful-based resource servers,\n"
"that information is usually carried in a security token, typically sent as a bearer token along with every request to the server. Web applications that rely on a session to\n"
"authenticate users usually store that information in the user's session and retrieve it from there for each request.\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:16
#, no-wrap
msgid "In {project_name}, any *confidential* client application can act as a resource server. This client's resources and their respective scopes are protected and governed by a set of authorization policies.\n"
msgstr ""

#. type: Title ====
#: source/authorization_services/topics/overview/terminology.adoc:17
#, no-wrap
msgid "Resource"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:21
#, no-wrap
msgid "A resource is part of the assets of an application and the organization. It can be a set of one or more endpoints, a classic web resource such as an HTML page, and so on.\n"
"In authorization policy terminology, a resource is the _object_ being protected.\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:23
#, no-wrap
msgid "Every resource has a unique identifier that can represent a single resource or a set of resources. For instance, you can manage a _Banking Account Resource_ that represents and defines a set of authorization policies for all banking accounts. But you can also have a different resource named _Alice's Banking Account_, which represents a single resource owned by a single customer, which can have its own set of authorization policies.\n"
msgstr ""

#. type: Title ====
#: source/authorization_services/topics/overview/terminology.adoc:24
#, no-wrap
msgid "Scope"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:27
#, no-wrap
msgid "A resource's scope is a bounded extent of access that is possible to perform on a resource. In authorization policy terminology, a scope is one of the potentially many _verbs_ that can logically apply to a resource.\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:29
#, no-wrap
msgid "It usually indicates what can be done with a given resource. Example of scopes are view, edit, delete, and so on. However, scope can also be related to specific information provided by a resource. In this case, you can have a project resource and a cost scope, where the cost scope is used to define specific policies and permissions for users to access a project's cost.\n"
msgstr ""

#. type: Title ====
#: source/authorization_services/topics/overview/terminology.adoc:30
#, no-wrap
msgid "Permission"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:33
#, no-wrap
msgid "Consider this simple and very common permission:\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:35
#, no-wrap
msgid "A permission associates the object being protected with the policies that must be evaluated to determine whether access is granted.\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:41
#, no-wrap
msgid "*X* CAN DO *Y* ON RESOURCE *Z*\n"
"** where ...\n"
"*** *X* represents one or more users, roles, or groups, or a combination of them. You can also use claims and context here.\n"
"*** *Y* represents an action to be performed, for example, write, view, and so on.\n"
"*** *Z* represents a protected resource, for example, \"/accounts\".\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:43
#, no-wrap
msgid "{project_name} provides a rich platform for building a range of permission strategies ranging from simple to very complex, rule-based dynamic permissions. It provides flexibility and helps to:\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:45
#, no-wrap
msgid "Reduce code refactoring and permission management costs\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:46
#, no-wrap
msgid "Support a more flexible security model, helping you to easily adapt to changes in your security requirements\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:47
#, no-wrap
msgid "Make changes at runtime; applications are only concerned about the resources and scopes being protected and not how they are protected.\n"
msgstr ""

#. type: Title ====
#: source/authorization_services/topics/overview/terminology.adoc:48
#, no-wrap
msgid "Policy"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:54
#, no-wrap
msgid "A policy defines the conditions that must be satisfied to grant access to an object. Unlike permissions, you do not specify the object being protected\n"
"but rather the conditions that must be satisfied for access to a given object (for example, resource, scope, or both).\n"
"Policies are strongly related to the different access control mechanisms (ACMs) that you can use to protect your resources.\n"
"With policies, you can implement strategies for attribute-based access control (ABAC), role-based access control (RBAC), context-based access control, or any combination of these.\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:58
#, no-wrap
msgid "{project_name} leverages the concept of policies and how you define them by providing the concept of aggregated policies, where you can build a \"policy of policies\" and still control the behavior of the evaluation.\n"
"Instead of writing one large policy with all the conditions that must be satisfied for access to a given resource, the policies implementation in {project_name} Authorization Services follows the divide-and-conquer technique.\n"
"That is, you can create individual policies, then reuse them with different permissions and build more complex policies by combining individual policies.\n"
msgstr ""

#. type: Title ====
#: source/authorization_services/topics/overview/terminology.adoc:59
#, no-wrap
msgid "Policy Provider"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:63
#, no-wrap
msgid "Policy providers are implementations of specific policy types. {project_name} provides built-in policies, backed by their corresponding\n"
"policy providers, and you can create your own policy types to support your specific requirements.\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:65
#, no-wrap
msgid "{project_name} provides a SPI (Service Provider Interface) that you can use to plug in your own policy provider implementations.\n"
msgstr ""

#. type: Title ====
#: source/authorization_services/topics/overview/terminology.adoc:67
#, no-wrap
msgid "Permission Ticket"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:71
#, no-wrap
msgid "A permission ticket is a special type of token defined by the https://kantarainitiative.org/confluence/display/uma/UMA+1.0+Core+Protocol[OAuth2's User-Managed Access (UMA) Profile] specification that provides an opaque structure whose form is determined by the authorization server. This\n"
"structure represents the resources and/or scopes being requested by a client as well as the policies that must be applied to a request for authorization data (requesting party token [RPT]).\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:73
#, no-wrap
msgid "In UMA, permission tickets are crucial to support person-to-person sharing and also person-to-organization sharing. Using permission tickets for authorization workflows enables a range of scenarios from simple to complex, where resource owners and resource servers have complete control over their resources based on fine-grained policies that govern the access to these resources.\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:75
#, no-wrap
msgid "In the UMA workflow, permission tickets are issued by the authorization server to a resource server, which returns the permission ticket to the client trying to access a protected resource. Once the client receives the ticket, it can make a request for an RPT (a final token holding authorization data) by sending the ticket back to the authorization server.\n"
msgstr ""

#. type: Plain text
#: source/authorization_services/topics/overview/terminology.adoc:76
#, no-wrap
msgid "For more information on permission tickets, see <<_service_authorization_api, Authorization API>> and the https://kantarainitiative.org/confluence/display/uma/UMA+1.0+Core+Protocol[UMA] specification.\n"
msgstr ""

